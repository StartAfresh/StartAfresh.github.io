<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java基础</title>
      <link href="/2023/09/18/Java%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/09/18/Java%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><blockquote><p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p></blockquote><h2 id="01-java环境的安装"><a href="#01-java环境的安装" class="headerlink" title="01_java环境的安装"></a>01_java环境的安装</h2><p><strong>下载</strong></p><p>通过官方网站获取<a href="https://www.oracle.com/cn/java/technologies/downloads/#java17">JDK</a>)</p><p><strong>注意</strong>：针对不同的操作系统，需要下载对应版本的JDK。</p><p><strong>安装</strong></p><p>​傻瓜式安装，下一步即可。默认的安装路径是在C:\Program Files下。</p><h3 id="1-JDK的安装目录介绍"><a href="#1-JDK的安装目录介绍" class="headerlink" title="1.JDK的安装目录介绍"></a>1.JDK的安装目录介绍</h3><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了JDK的相关配置文件。</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件。</td></tr><tr><td>jmods</td><td>该路径下存放了JDK的各种模块。</td></tr><tr><td>legal</td><td>该路径下存放了JDK各模块的授权文档。</td></tr><tr><td>lib</td><td>该路径下存放了JDK工具的一些补充JAR包。</td></tr></tbody></table><h3 id="2-环境变量"><a href="#2-环境变量" class="headerlink" title="2.环境变量"></a>2.环境变量</h3><blockquote><p>​开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。</p><p>注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。<code>（配的工具太少了，需要自己配置）</code></p></blockquote><p><strong>配置环境变量</strong></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918102121485.png" alt="image-20230918102121485"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918102601261.png" alt="image-20230918102601261"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918102727989.png" alt="image-20230918102727989"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918101254472.png" alt="image-20230918101254472"></p><h3 id="3-Notepad-的使用"><a href="#3-Notepad-的使用" class="headerlink" title="3.Notepad++的使用"></a>3.Notepad++的使用</h3><p><strong>安装</strong></p><blockquote><p>傻瓜式安装，直接下一步</p></blockquote><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918103525931.png" alt="image-20230918103525931"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918104404681.png" alt="image-20230918104404681"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918104421771.png" alt="image-20230918104421771"></p><p><code>这样java就可以输出中文了</code></p><h2 id="02-java概述"><a href="#02-java概述" class="headerlink" title="02_java概述"></a>02_java概述</h2><blockquote><p>三个版本：</p><ul><li><p>Java5.0：这是Java的第一个大版本更新。</p></li><li><p>Java8.0：这个是目前绝大数公司正在使用的版本。因为这个版本最为稳定。</p></li><li><p>Java15.0：这个是我们课程中学习的版本。</p></li><li><p>解惑：</p><p>​我们学的跟工作中使用的版本不太一样啊。会不会影响以后工作呢？</p><p>向下兼容。新的版本只是在原有的基础上添加了一些新的功能而已。</p></li></ul></blockquote><h3 id="1-Java的三大平台"><a href="#1-Java的三大平台" class="headerlink" title="1.Java的三大平台"></a>1.Java的三大平台</h3><blockquote><p>JavaSE、JavaME、JavaEE</p></blockquote><p><strong>JavaSE</strong></p><p>是其他两个版本的基础。</p><p><strong>JavaME</strong></p><p>Java语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。</p><p>其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。但是，安卓也是可以用Java来开发的。</p><p><strong>JavaEE</strong></p><p>​用于Web方向的网站开发。（主要从事后台服务器的开发）在服务器领域，Java是当之无愧的龙头老大。</p><h3 id="2-Java的主要特性"><a href="#2-Java的主要特性" class="headerlink" title="2.Java的主要特性"></a>2.Java的主要特性</h3><ul><li>面向对象</li><li>安全性</li><li>多线程</li><li>简单易用</li><li>开源</li><li>跨平台</li></ul><h3 id="3-Java语言跨平台的原理"><a href="#3-Java语言跨平台的原理" class="headerlink" title="3.Java语言跨平台的原理"></a>3.Java语言跨平台的原理</h3><ul><li>操作系统本身其实是不认识Java语言的。</li><li>但是针对于不同的操作系统，Java提供了不同的虚拟机。</li></ul><p>虚拟机会把Java语言翻译成操作系统能看得懂的语言。</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20210923091350952.png" alt="image-20210923091350952"></p><h3 id="4-JRE和JDK"><a href="#4-JRE和JDK" class="headerlink" title="4.JRE和JDK"></a>4.JRE和JDK</h3><p>JVM（Java Virtual Machine），Java虚拟机</p><p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p><p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918114348672.png" alt="image-20230918114348672"></p><p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p><h2 id="03-IDEA"><a href="#03-IDEA" class="headerlink" title="03_IDEA"></a>03_IDEA</h2><blockquote><p>IDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。</p></blockquote><p><strong>集成环境：</strong></p><p>​把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。</p><h3 id="1-IDEA的下载和安装"><a href="#1-IDEA的下载和安装" class="headerlink" title="1.  IDEA的下载和安装"></a>1.  IDEA的下载和安装</h3><h4 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h4><p>​可以到官方网站自行下载，网址为：<a href="https://www.jetbrains.com/idea">https://www.jetbrains.com/idea</a></p><h4 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a>1.2 安装</h4><ul><li><p>打开安装包</p></li><li><p>点击next，准备安装，傻瓜式安装。路径可以自行修改</p></li><li><p>第一次启动会询问，是否导入一些设置。</p><p>选择第二个不导入，保持默认设置，再点击OK。</p></li></ul><h3 id="2-IDEA中层级结构介绍"><a href="#2-IDEA中层级结构介绍" class="headerlink" title="2.IDEA中层级结构介绍"></a>2.IDEA中层级结构介绍</h3><h4 id="2-1-结构分类"><a href="#2-1-结构分类" class="headerlink" title="2.1 结构分类"></a>2.1 结构分类</h4><ul><li>project（项目、工程）</li><li>module（模块）</li><li>package（包）</li><li>class（类）</li></ul><h4 id="2-2-结构介绍"><a href="#2-2-结构介绍" class="headerlink" title="2.2 结构介绍"></a>2.2 结构介绍</h4><blockquote><p>为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。</p></blockquote><h5 id="2-2-1project（项目、工程）"><a href="#2-2-1project（项目、工程）" class="headerlink" title="2.2.1project（项目、工程）"></a>2.2.1project（项目、工程）</h5><p>​淘宝、京东、黑马程序员网站都属于一个个项目，IDEA中就是一个个的Project。</p><h5 id="2-2-2module（模块）"><a href="#2-2-2module（模块）" class="headerlink" title="2.2.2module（模块）"></a>2.2.2module（模块）</h5><p>​在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在黑马程序员的官方网站中，至少包含了以下模块：</p><ul><li>论坛模块</li><li>报名、咨询模块</li></ul><p>为了更好的管理代码，我们会把代码分别放在两个模块中存放。</p><h5 id="package（包）（操作）"><a href="#package（包）（操作）" class="headerlink" title="package（包）（操作）"></a>package（包）（操作）</h5><p>​一个模块中又有很多的业务，以黑马程序员官方网站的论坛模块为例，至少包含了以下不同的业务。</p><ul><li>发帖</li><li>评论</li></ul><p>为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。</p><h5 id="class（类）"><a href="#class（类）" class="headerlink" title="class（类）"></a>class（类）</h5><p>​就是真正写代码的地方。</p><h4 id="2-3-小结"><a href="#2-3-小结" class="headerlink" title="2.3 小结"></a>2.3 小结</h4><ul><li><p>层级关系</p><p>​project - module - package - class</p></li><li><p>包含数量</p><p>​project中可以创建多个module<br>​module中可以创建多个package<br>​package中可以创建多个class</p><p>​这些结构的划分，是为了方便管理类文件的。</p></li></ul><h3 id="3-IDEA中的第一个代码"><a href="#3-IDEA中的第一个代码" class="headerlink" title="3. IDEA中的第一个代码"></a>3. IDEA中的第一个代码</h3><h5 id="8-4-1-操作步骤"><a href="#8-4-1-操作步骤" class="headerlink" title="8.4.1 操作步骤"></a>8.4.1 操作步骤</h5><ul><li><p>创建Project 项目</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918134523042.png" alt="image-20230918134523042"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918134559462.png" alt="image-20230918134559462"></p></li><li><p>创建Module 模块</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918134744427.png" alt="image-20230918134744427"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918134825069.png" alt="image-20230918134825069"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918135150803.png" alt="image-20230918135150803"></p></li><li><p>创建class   类</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918140557851.png" alt="image-20230918140557851"></p></li><li><p>在类中编写代码</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.demo1;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">helloWorld</span> &#123;</span><br><span class="line">    <span class="comment">//ps + 回车 --&gt; 自动生成主方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// s + 回车--&gt; 自动生成输出语句</span></span><br><span class="line">        System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>完成编译运行</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918141259017.png" alt="image-20230918141259017"></p></li></ul><p> <img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918141615534.png" alt="image-20230918141615534"></p><ul><li><p>由于字体比较小</p><p>所以，我们要设置一下字体。</p><p>点击File，选择Setting。</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918140907943.png" alt="image-20230918140907943"></p><h3 id="4-IDEA中类的相关操作"><a href="#4-IDEA中类的相关操作" class="headerlink" title="4.IDEA中类的相关操作"></a>4.IDEA中类的相关操作</h3><h4 id="4-1-类的相关操作"><a href="#4-1-类的相关操作" class="headerlink" title="4.1 类的相关操作"></a>4.1 类的相关操作</h4><ul><li><p>新建类文件</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918141837845.png" alt="image-20230918141837845"></p></li><li><p>删除类文件</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918141948666.png" alt="image-20230918141948666"></p><p>小贴士：</p><p>此时删除是不走回收站的，直接从硬盘中删掉了。</p></li><li><p>修改类文件</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918142146990.png" alt="image-20230918142146990"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918142225884.png" alt="image-20230918142225884"></p><p><strong>文件名和类名均已修改成功</strong></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918142249526.png" alt="image-20230918142249526"></p></li></ul><h3 id="5-IDEA中模块的相关操作"><a href="#5-IDEA中模块的相关操作" class="headerlink" title="5. IDEA中模块的相关操作"></a>5. IDEA中模块的相关操作</h3><h4 id="5-1-模块的相关操作"><a href="#5-1-模块的相关操作" class="headerlink" title="5.1 模块的相关操作"></a>5.1 模块的相关操作</h4><ul><li><p>新建模块</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918142850207.png" alt="image-20230918142850207"></p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918142934024.png" alt="image-20230918142934024"></p></li><li><p>删除模块</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918143113048.png" alt="image-20230918143113048"></p></li><li><p>修改模块</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918143247995.png" alt="image-20230918143247995"></p><ul><li>选择第三个修改模块名和本地文件夹名</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918143324122.png" alt="image-20230918143324122"></p><p>输入要修改的新的模块名</p><p>输入完毕点击Refactor</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918143415971.png" alt="image-20230918143415971"></p></li><li><p>导入模块</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918144704196.png" alt="image-20230918144704196"></p><ul><li><p>从本地硬盘中选择要导入的模块</p><p>再点击OK</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%973.png" alt="计算机发展"></p><ul><li>不断点击Next</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%974.png" alt="计算机发展"></p><ul><li><p>如果中间出现提示框，则点击Overwrite</p><p>然后继续点击右下角的Next</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%975.png" alt="计算机发展"></p><ul><li>一直点到finish为止</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%976.png" alt="计算机发展"></p><ul><li>成功导入后，在中间位置就会出现导入的模块信息</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%977.png" alt="计算机发展"></p><ul><li>在主界面中也会出现导入的模块信息</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%978.png" alt="计算机发展"></p><ul><li><p>展开模块点击模块中的Java文件，会发现代码报错。</p><p>是因为导入模块跟JDK没有关联导致。</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%979.png" alt="计算机发展"></p><ul><li><p>可以点击右上角的Setup SDK</p><p>再选择已经安装的JDK版本即可</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9710.png" alt="计算机发展"></p><ul><li>导入完毕之后，代码就恢复正常不会报错了</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/image-20230918143758940.png" alt="image-20230918143758940"></p><h3 id="6-IDEA中项目的相关操作"><a href="#6-IDEA中项目的相关操作" class="headerlink" title="6. IDEA中项目的相关操作"></a>6. IDEA中项目的相关操作</h3><h4 id="6-1-项目的相关操作"><a href="#6-1-项目的相关操作" class="headerlink" title="6.1 项目的相关操作"></a>6.1 项目的相关操作</h4><ul><li>关闭项目</li><li>打开项目</li><li>修改项目</li><li>新建项目</li></ul><h5 id="6-1-1关闭项目"><a href="#6-1-1关闭项目" class="headerlink" title="6.1.1关闭项目"></a>6.1.1关闭项目</h5><ul><li>点击File，选择Close Project即可</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li><p>刚刚操作的项目就已经关闭了</p><p>左侧是项目列表，如果要再次打开该项目，直接点击即可。</p><p>右侧有create new project，可以再建一个新的项目</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE2.png" alt="计算机发展"></p><ul><li><p>鼠标放在项目上，后面会出现一个叉。</p><p>如果点击了这里的叉，会在IDEA的列表中删除。不会删除本地硬盘上的项目。</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><h5 id="6-1-2-打开项目"><a href="#6-1-2-打开项目" class="headerlink" title="6.1.2  打开项目"></a>6.1.2  打开项目</h5><ul><li><p>在本界面还可以打开本地已经存在的项目</p><p>点击Open or Import</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li><p>选择要打开的项目</p><p>点击OK</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE2.png" alt="计算机发展"></p><ul><li>项目就被打开了。</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><h5 id="6-1-3-修改项目"><a href="#6-1-3-修改项目" class="headerlink" title="6.1.3 修改项目"></a>6.1.3 修改项目</h5><ul><li>点击File，选择Project Structure</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li><p>在这个界面，默认是Module</p><p>所以，要先点击Project</p><p>在右侧页面中，输入新的项目名称</p><p>修改JDK版本和编译版本都变成JDK14</p><p>再点击OK</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE2.png" alt="计算机发展"></p><ul><li>此时发现，项目名称已经修改完毕</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><ul><li>但是本地文件夹的名字还没有修改</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE4.png" alt="计算机发展"></p><ul><li>需要先关闭当前项目</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li>点击项目后面的叉，从列表中移除项目</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><ul><li>到本地硬盘中手动修改文件夹的名称</li></ul><p> <img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/JavaSE%E6%9C%80%E6%96%B0%E7%89%88/day02-Java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E7%AC%94%E8%AE%B0/img/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE5.png" alt="计算机发展"></p><ul><li>点击Open or Import重新打开项目</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li><p>选择修改之后的项目</p><p>点击OK</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE6.png" alt="计算机发展"></p><ul><li>此时会发现，项目名称和本地硬盘文件夹的名称都已经修改完毕了</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE7.png" alt="计算机发展"></p><h5 id="6-1-4-新建项目"><a href="#6-1-4-新建项目" class="headerlink" title="6.1.4 新建项目"></a>6.1.4 新建项目</h5><ul><li><p>点击File</p><p>选择New</p><p>点击Project</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE1.png" alt="计算机发展"></p><ul><li>同样还是创建一个什么都没有的空项目</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE2.png" alt="计算机发展"></p><ul><li><p>输入项目的名称</p><p>点击右下角的finish</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE3.png" alt="计算机发展"></p><ul><li><p>IDEA循环是否需要帮我们在本地创建一个新的文件夹</p><p>点击OK</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE4.png" alt="计算机发展"></p><ul><li><p>询问是在本窗口打开还是在一个新的窗口打开。</p><p>可以点击New Window，在一个新的窗口打开。</p></li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE5.png" alt="计算机发展"></p><ul><li>此时就出现了两个窗口，在一个新的窗口打开了新的项目</li></ul><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE6.png" alt="计算机发展"></p><h2 id="04-基本概念与运算符"><a href="#04-基本概念与运算符" class="headerlink" title="04_基本概念与运算符"></a>04_基本概念与运算符</h2><h3 id="1-注释"><a href="#1-注释" class="headerlink" title="1. 注释"></a>1. 注释</h3><blockquote><p>注释是对代码的解释和说明文字。</p></blockquote><p>Java中的注释分为三种：</p><ul><li>单行注释</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是单行注释文字</span></span><br></pre></td></tr></table></figure><ul><li>多行注释</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">注意：多行注释不能嵌套使用。</span><br></pre></td></tr></table></figure><ul><li>文档注释（暂时用不到）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="2-关键字"><a href="#2-关键字" class="headerlink" title="2.关键字"></a>2.关键字</h3><blockquote><p>被Java赋予了特定含义的英文单词。</p><p>当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。</p><p>注意：关键字很多，不用刻意去记。</p></blockquote><table><thead><tr><th><strong>abstract</strong></th><th><strong>assert</strong></th><th><strong>boolean</strong></th><th><strong>break</strong></th><th><strong>byte</strong></th></tr></thead><tbody><tr><td><strong>case</strong></td><td><strong>catch</strong></td><td><strong>char</strong></td><td><strong>class</strong></td><td><strong>const</strong></td></tr><tr><td><strong>continue</strong></td><td><strong>default</strong></td><td><strong>do</strong></td><td><strong>double</strong></td><td><strong>else</strong></td></tr><tr><td><strong>enum</strong></td><td><strong>extends</strong></td><td><strong>final</strong></td><td><strong>finally</strong></td><td><strong>float</strong></td></tr><tr><td><strong>for</strong></td><td><strong>goto</strong></td><td><strong>if</strong></td><td><strong>implements</strong></td><td><strong>import</strong></td></tr><tr><td><strong>instanceof</strong></td><td><strong>int</strong></td><td><strong>interface</strong></td><td><strong>long</strong></td><td><strong>native</strong></td></tr><tr><td><strong>new</strong></td><td><strong>package</strong></td><td><strong>private</strong></td><td><strong>protected</strong></td><td><strong>public</strong></td></tr><tr><td><strong>return</strong></td><td><strong>strictfp</strong></td><td><strong>short</strong></td><td><strong>static</strong></td><td><strong>super</strong></td></tr><tr><td><strong>switch</strong></td><td><strong>synchronized</strong></td><td><strong>this</strong></td><td><strong>throw</strong></td><td><strong>throws</strong></td></tr><tr><td><strong>transient</strong></td><td><strong>try</strong></td><td><strong>void</strong></td><td><strong>volatile</strong></td><td><strong>while</strong></td></tr></tbody></table><p> <strong>第一个关键字class</strong></p><p>表示定义一个类。创建一个类。</p><p>类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。</p><p>class后面跟随的就是这个类的名字，简称：类名。</p><p>在类名后面会有一对大括号，表示这个类的内容。</p><p>举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">      <span class="comment">//定义类  类名</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-字面量"><a href="#3-字面量" class="headerlink" title="3. 字面量"></a>3. 字面量</h3><blockquote><p>作用：告诉程序员，数据在程序中的书写格式。</p></blockquote><table><thead><tr><th><strong>字面量类型</strong></th><th><strong>说明</strong></th><th><strong>程序中的写法</strong></th></tr></thead><tbody><tr><td>整数</td><td>不带小数的数字</td><td>666，-88</td></tr><tr><td>小数</td><td>带小数的数字</td><td>13.14，-5.21</td></tr><tr><td><strong>字符</strong></td><td><strong>必须使用单引号，有且仅能一个字符</strong></td><td>‘A’，‘0’，   ‘我’</td></tr><tr><td><strong>字符串</strong></td><td><strong>必须使用双引号，内容可有可无</strong></td><td>“HelloWorld”，“黑马程序员”</td></tr><tr><td>布尔值</td><td>布尔值，表示真假，只有两个值：true，false</td><td>true 、false</td></tr><tr><td>空值</td><td>一个特殊的值，空值</td><td>值是：null</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">10</span>); <span class="comment">// 输出一个整数</span></span><br><span class="line">        System.out.println(<span class="number">5.5</span>); <span class="comment">// 输出一个小数</span></span><br><span class="line">        System.out.println(<span class="string">&#x27;a&#x27;</span>); <span class="comment">// 输出一个字符</span></span><br><span class="line">        System.out.println(<span class="literal">true</span>); <span class="comment">// 输出boolean值true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;欢迎来到黑马程序员&quot;</span>); <span class="comment">// 输出字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-变量"><a href="#4-变量" class="headerlink" title="4. 变量"></a>4. 变量</h3><blockquote><p>存储数据的容器，里面只能存储一个</p></blockquote><h4 id="4-1定义的格式"><a href="#4-1定义的格式" class="headerlink" title="4.1定义的格式"></a>4.1定义的格式</h4><p>数据类型 变量名 &#x3D; 数据值；</p><h4 id="4-2格式详解"><a href="#4-2格式详解" class="headerlink" title="4.2格式详解"></a>4.2格式详解</h4><blockquote><p>格式用来限制变量的类型，什么样的数据值定义什么样的类型</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//定义一个整数类型的变量</span></span><br><span class="line"><span class="comment">//数据类型 变量名 = 数据值;</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">16</span>;</span><br><span class="line">System.out.println(a);<span class="comment">//16</span></span><br><span class="line"><span class="comment">//定义一个小数类型的变量</span></span><br><span class="line"><span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10.1</span>;</span><br><span class="line">System.out.println(b);<span class="comment">//10.1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3变量的注意事项"><a href="#4-3变量的注意事项" class="headerlink" title="4.3变量的注意事项"></a>4.3变量的注意事项</h4><ul><li>变量名不能重复</li><li>在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。</li><li>变量在使用之前必须要赋值。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo2</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//1.变量名不允许重复</span></span><br><span class="line"><span class="comment">//int a = 10;</span></span><br><span class="line"><span class="comment">//int a = 20;</span></span><br><span class="line"><span class="comment">//System.out.println(a);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.一条语句可以定义多个变量</span></span><br><span class="line"><span class="comment">//了解。</span></span><br><span class="line"><span class="comment">//int a = 10, b = 20, c = 20,d = 20;</span></span><br><span class="line"><span class="comment">//System.out.println(a);//?</span></span><br><span class="line"><span class="comment">//System.out.println(b);//?</span></span><br><span class="line"><span class="comment">//3.变量在使用之前必须要赋值</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5. 数据类型"></a>5. 数据类型</h3><blockquote><h3 id="java语言数据类型的分类"><a href="#java语言数据类型的分类" class="headerlink" title="java语言数据类型的分类"></a>java语言数据类型的分类</h3><ul><li>基本数据类型</li><li>引用数据类型（面向对象的时候再深入学习）</li></ul></blockquote><h4 id="5-1-基本数据类型的四类八种"><a href="#5-1-基本数据类型的四类八种" class="headerlink" title="5.1 基本数据类型的四类八种"></a>5.1 基本数据类型的四类八种</h4><table><thead><tr><th align="center">数据类型</th><th align="center">关键字</th><th align="center">内存占用</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">整数</td><td align="center">byte</td><td align="center">1</td><td align="center">负的2的7次方 ~ 2的7次方-1(-128~127)</td></tr><tr><td align="center"></td><td align="center">short</td><td align="center">2</td><td align="center">负的2的15次方 ~ 2的15次方-1(-32768~32767)</td></tr><tr><td align="center"></td><td align="center">int</td><td align="center">4</td><td align="center">负的2的31次方 ~ 2的31次方-1</td></tr><tr><td align="center"></td><td align="center">long</td><td align="center">8</td><td align="center">负的2的63次方 ~ 2的63次方-1</td></tr><tr><td align="center">浮点数</td><td align="center">float</td><td align="center">4</td><td align="center">1.401298e-45 ~ 3.402823e+38</td></tr><tr><td align="center"></td><td align="center">double</td><td align="center">8</td><td align="center">4.9000000e-324 ~ 1.797693e+308</td></tr><tr><td align="center">字符</td><td align="center">char</td><td align="center">2</td><td align="center">0-65535</td></tr><tr><td align="center">布尔</td><td align="center">boolean</td><td align="center">1</td><td align="center">true，false</td></tr></tbody></table><p><strong>说明</strong></p><p>​e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p><p>​在java中整数默认是int类型，浮点数默认是double类型。</p><h4 id="5-2需要记忆以下几点"><a href="#5-2需要记忆以下几点" class="headerlink" title="5.2需要记忆以下几点"></a>5.2需要记忆以下几点</h4><p>byte类型的取值范围：</p><p>​-128 ~ 127</p><p>int类型的大概取值范围：</p><p>​-21亿多  ~ 21亿多</p><p>整数类型和小数类型的取值范围大小关系：</p><p>​<strong>double &gt; float &gt; long &gt; int &gt; short &gt; byte</strong></p><h4 id="5-3-定义8种基本数据类型变量"><a href="#5-3-定义8种基本数据类型变量" class="headerlink" title="5.3 定义8种基本数据类型变量"></a>5.3 定义8种基本数据类型变量</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo3</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//1.定义byte类型的变量</span></span><br><span class="line">        <span class="comment">//数据类型 变量名 = 数据值;</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.定义short类型的变量</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        System.out.println(b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.定义int类型的变量</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.定义long类型的变量</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">123456789123456789L</span>;</span><br><span class="line">        System.out.println(d);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.定义float类型的变量</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">e</span> <span class="operator">=</span> <span class="number">10.1F</span>;</span><br><span class="line">        System.out.println(e);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.定义double类型的变量</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">20.3</span>;</span><br><span class="line">        System.out.println(f);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7.定义char类型的变量</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">g</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        System.out.println(g);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//8.定义boolean类型的变量</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">h</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        System.out.println(h);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a><strong>注意点</strong></h4><ul><li>如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。</li><li>如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。</li><li>如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）</li><li>如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）</li></ul><h3 id="6-标识符"><a href="#6-标识符" class="headerlink" title="6. 标识符"></a>6. 标识符</h3><blockquote><p>业内大多数程序员都在遵守阿里巴巴的命名规则。</p></blockquote><h4 id="6-1-硬性要求："><a href="#6-1-硬性要求：" class="headerlink" title="6.1 硬性要求："></a>6.1 硬性要求：</h4><p>​必须要这么做，否则代码会报错。</p><ul><li>必须由数字、字母、下划线_、美元符号$组成。</li><li>数字不能开头</li><li>不能是关键字</li><li>区分大小写的。</li></ul><h4 id="6-2-软件建议："><a href="#6-2-软件建议：" class="headerlink" title="6.2 软件建议："></a>6.2 软件建议：</h4><p>​如果不这么做，代码不会报错，但是会让代码显得比较low。</p><h4 id="6-3-小驼峰命名法"><a href="#6-3-小驼峰命名法" class="headerlink" title="6.3 小驼峰命名法"></a>6.3 小驼峰命名法</h4><p>适用于变量名和方法名</p><ul><li><p>如果是一个单词，那么全部小写，比如：name</p></li><li><p>如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge</p></li></ul><h4 id="6-4大驼峰命名法"><a href="#6-4大驼峰命名法" class="headerlink" title="6.4大驼峰命名法"></a>6.4大驼峰命名法</h4><p>适用于类名</p><ul><li><p>如果是一个单词，那么首字母大写。比如：Demo、Test。</p></li><li><p>如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld</p></li></ul><p>不管起什么名字，都要做到见名知意。</p><h4 id="6-5阿里巴巴命名规范细节："><a href="#6-5阿里巴巴命名规范细节：" class="headerlink" title="6.5阿里巴巴命名规范细节："></a>6.5阿里巴巴命名规范细节：</h4><ol><li><p>尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。</p><p>正确：alibaba、hangzhou、nanjing</p><p>错误：jiage、dazhe</p></li><li><p>平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。</p><p>错误：_name</p><p>正确：name</p></li></ol><h3 id="7-键盘录入"><a href="#7-键盘录入" class="headerlink" title="7. 键盘录入"></a>7. 键盘录入</h3><blockquote><p>键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。</p></blockquote><h3 id="8-运算符和表达式"><a href="#8-运算符和表达式" class="headerlink" title="8.  运算符和表达式"></a>8.  运算符和表达式</h3><h4 id="1-运算符："><a href="#1-运算符：" class="headerlink" title="1.运算符："></a>1.运算符：</h4><p>​就是对常量或者变量进行操作的符号。</p><p>​比如： +  -  *  &#x2F; </p><h4 id="2-表达式："><a href="#2-表达式：" class="headerlink" title="2.表达式："></a>2.表达式：</h4><p>​用运算符把常量或者变量连接起来的，符合Java语法的式子就是表达式。</p><p>​比如：a + b 这个整体就是表达式。</p><p>​而其中+是算术运算符的一种，所以这个表达式也称之为算术表达式。</p><h4 id="3-算术运算符"><a href="#3-算术运算符" class="headerlink" title="3. 算术运算符"></a>3. 算术运算符</h4><p>分类： + - * &#x2F; %</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/：</span><br><span class="line"><span class="number">1.</span>整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。</span><br><span class="line"><span class="number">2.</span>小数直接参与运算，得到的结果有可能是不精确的。</span><br><span class="line">案例：</span><br><span class="line">System.out.println( <span class="number">10</span> / <span class="number">3</span>);<span class="comment">//3</span></span><br><span class="line">System.out.println(<span class="number">10.0</span> / <span class="number">3</span>);<span class="comment">//3.3333333333333335</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%：取模、取余。</span><br><span class="line">   他做的也是除法运算，只不过获取的是余数而已。</span><br><span class="line">案例：</span><br><span class="line">System.out.println(<span class="number">10</span> % <span class="number">2</span>);<span class="comment">//0</span></span><br><span class="line">System.out.println(<span class="number">10</span> % <span class="number">3</span>);<span class="comment">//1</span></span><br><span class="line">应用场景：</span><br><span class="line"><span class="comment">//可以利用取模来判断一个数是奇数还是偶数</span></span><br><span class="line">System.out.println(<span class="number">15</span> % <span class="number">2</span>);<span class="comment">//1  奇数</span></span><br></pre></td></tr></table></figure><p>练习：数值拆分</p><p>需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.键盘录入一个三位数</span></span><br><span class="line"><span class="comment">//导包 --- 创建对象 --- 接收数据</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入一个三位数&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//123</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.获取这个三位数的个位、十位、百位并打印出来</span></span><br><span class="line"><span class="comment">//公式：</span></span><br><span class="line"><span class="comment">//针对于任意的一个数而言</span></span><br><span class="line"><span class="comment">//个位： 数字 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">ones</span> <span class="operator">=</span> number % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//十位： 数字 / 10 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">tens</span> <span class="operator">=</span> number / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//百位： 数字 / 100 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">hundreds</span> <span class="operator">=</span> number / <span class="number">100</span>  % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">System.out.println(ones);</span><br><span class="line">System.out.println(tens);</span><br><span class="line">System.out.println(hundreds);</span><br></pre></td></tr></table></figure><h3 id="9-隐式转换"><a href="#9-隐式转换" class="headerlink" title="9.隐式转换"></a>9.隐式转换</h3><h4 id="1-概念："><a href="#1-概念：" class="headerlink" title="1.概念："></a>1.概念：</h4><p>​也叫自动类型提升。</p><p>​就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。此时不需要我们额外写代码单独实现，是程序自动帮我们完成的。</p><h4 id="2-简单记忆："><a href="#2-简单记忆：" class="headerlink" title="2.简单记忆："></a>2.简单记忆：</h4><p>​就是小的给大的，可以直接给。</p><h4 id="3-两种提升规则："><a href="#3-两种提升规则：" class="headerlink" title="3.两种提升规则："></a>3.两种提升规则：</h4><ul><li>取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。</li><li>byte、short、char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算。</li></ul><h4 id="4-取值范围从小到大的关系："><a href="#4-取值范围从小到大的关系：" class="headerlink" title="4.取值范围从小到大的关系："></a>4.取值范围从小到大的关系：</h4><p>​byte short int long float double</p><h4 id="5-隐式转换的练习"><a href="#5-隐式转换的练习" class="headerlink" title="5.隐式转换的练习"></a>5.隐式转换的练习</h4><p>请看下面案例是否有误，如果有问题，请说出原因，如果没有问题，请说出运算过程和运算结果</p><p>案例一：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">System.out.println(d);<span class="comment">//10.0</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​10是整数，整数默认是int类型的。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​在赋值的时候把一个int类型的赋值给了一个double类型的。把一个小的赋值给一个大的是可以直接给的。</p><p>案例二：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> b;<span class="comment">//可以成功赋值</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​因为byte的取值范围是小的，int的取值范围是大的，在底层进行了隐式转换，不需要我们额外写代码单独实现，是可以直接赋值。</p><p>案例三：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">20L</span>;</span><br><span class="line">??? result = i + n;</span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量i是int类型的，变量n是long类型的。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​变量i里面的值会自动提升为long类型的，最终的结果其实就是两个long相加，那么最终的result是long类型的。</p><p>案例四：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">20.0</span>;</span><br><span class="line">??? result = i + n + d;</span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量i是int类型，变量n是long类型，变量d是double类型。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​所以变量i和变量n里面的值在参与运算的时候，都会进行类型提升，变成double。</p><p>​最终其实就是三个double进行相加，那么最终的结果就是double类型的。</p><p>案例五：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">??? result = b1 + b2;<span class="comment">//int</span></span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​因为b1和b2都是byte类型的。所以在参与计算的时候，变量b1和变量b2里面的值都会自动提升为int类型的。最终其实就是两个int类型的相加，最终结果也是int类型的。</p><p>案例六：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line">??? result = b + s + n;</span><br><span class="line">问变量result是什么类型的？<span class="type">long</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量b是byte类型的，变量s是short类型的，变量n是long类型的。</p><p>​byte，short，char类型的变量在参与运算的时候，变量里面的值会直接先提升为int。</p><p>第一步：变量b和变量s里面的值会先提升为int参与运算。</p><p>​int + int + long</p><p>第二步：而long类型的取值范围是大于int的取值范围的。</p><p>​所以变量b和变量s里面的值会再次提升为long。</p><p>​long + long + long。</p><p>所以最终结果是long类型的。</p><h3 id="10-强制转换"><a href="#10-强制转换" class="headerlink" title="10.强制转换"></a>10.强制转换</h3><p>概念：</p><p>​如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量。是不允许直接操作。</p><p>​如果一定要这么干，就需要加入强制转换。</p><p>书写格式：</p><p>​目标数据类型 变量名 &#x3D; （目标数据类型）被强转的数据；</p><p>简单理解：</p><p>​要转成什么类型的，那么就在小括号中写什么类型就可以了。</p><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">12.3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">int</span>) a;</span><br><span class="line">        System.out.println(b);<span class="comment">//12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点：</p><p>​强制转换有可能会导致数据发生错误。（数据的精度丢失）</p><h3 id="11-字符串的-操作"><a href="#11-字符串的-操作" class="headerlink" title="11.字符串的+操作"></a>11.字符串的+操作</h3><p><strong>核心技巧</strong>：</p><ul><li>当+操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。</li><li>当连续进行+操作时，从左到右逐个执行的。</li></ul><h4 id="1-字符串相加的练习："><a href="#1-字符串相加的练习：" class="headerlink" title="1.字符串相加的练习："></a>1.字符串相加的练习：</h4><p>案例1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="string">&quot;abc&quot;</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果：”1abc1”</p><p>解释：</p><p>​第一步： 1 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”1abc”</p><p>​第二步：  “1abc” + 1。这个过程中，有字符串参与的，所以做的也是拼接操作，产生一个新的字符串”1abc1”</p><p>案例2：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="number">2</span> + <span class="string">&quot;abc&quot;</span> + <span class="number">2</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果：“3abc21”</p><p>解释：</p><p>​第一步：1 + 2 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为3。</p><p>​第二步：3 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc”。</p><p>​第三步：”3abc” + 2。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc2”。</p><p>​第四步：”3abc2” + 1。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”</p><p>案例3：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;黑默丁格&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;我的名字是&quot;</span> + name);</span><br></pre></td></tr></table></figure><p>结果： 我的名字是黑默丁格</p><p>解释：当字符串跟变量相加的时候，实际上是跟变量里面的值进行拼接。</p><h4 id="2-字符的-操作"><a href="#2-字符的-操作" class="headerlink" title="2.字符的+操作"></a>2.字符的+操作</h4><p>规则：</p><p>​当+操作中出现了字符，会拿着字符到计算机内置的ASCII码表中去查对应的数字，然后再进行计算。</p><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> c + <span class="number">0</span>;</span><br><span class="line">System.out.println(result);<span class="comment">//97</span></span><br></pre></td></tr></table></figure><p>ASCII码表中：</p><p>​‘a’   —–    97</p><p>​‘A’   —–    65</p><h3 id="12-自增自减运算符"><a href="#12-自增自减运算符" class="headerlink" title="12.自增自减运算符"></a>12.自增自减运算符</h3><h4 id="1-分类："><a href="#1-分类：" class="headerlink" title="1.分类："></a>1.分类：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">++  自增运算符</span><br><span class="line">--  自减运算符</span><br></pre></td></tr></table></figure><p>++：就是把变量里面的值+1</p><p>–：就是把变量里面的值-1</p><h4 id="2-使用方式："><a href="#2-使用方式：" class="headerlink" title="2.使用方式："></a>2.使用方式：</h4><ul><li>放在变量的前面，我们叫做先++。 比如：++a</li><li>放在变量的后面，我们叫做后++。 比如：a++</li></ul><h4 id="3-注意点："><a href="#3-注意点：" class="headerlink" title="3.注意点："></a>3.注意点：</h4><p>​不管是先++，还是后++。单独写在一行的时候，运算结果是一模一样的。</p><h4 id="5-案例："><a href="#5-案例：" class="headerlink" title="5.案例："></a>5.案例：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//++</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">a++;<span class="comment">//就是让变量a里面的值 + 1</span></span><br><span class="line">System.out.println(a);<span class="comment">//11</span></span><br><span class="line">++a;<span class="comment">//就是让变量a里面的值 + 1</span></span><br><span class="line">System.out.println(a);<span class="comment">//12</span></span><br></pre></td></tr></table></figure><h4 id="6-自增自减运算符的应用场景："><a href="#6-自增自减运算符的应用场景：" class="headerlink" title="6.自增自减运算符的应用场景："></a>6.自增自减运算符的应用场景：</h4><p>某些情况下，变量需要进行加1或者减1的时候使用。</p><p>比如：过生日多一岁，就用到了自增运算符。</p><p>比如：购物商场中，选择商品数量，也用到了自增或者自减运算符。</p><p>比如：统计很多数据中，有多少个数据满足要求，也用到了自增运算符。</p><h3 id="13-赋值运算符"><a href="#13-赋值运算符" class="headerlink" title="13.赋值运算符"></a>13.赋值运算符</h3><p>最为常用的：&#x3D;</p><p>运算过程：就是把等号右边的结果赋值给左边的变量</p><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.最为简单的赋值运算符用法</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">//就是把10赋值给变量a</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.如果等号右边需要进行计算。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a + b;<span class="comment">//先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.特殊的用法</span></span><br><span class="line">        a = a + <span class="number">10</span>;<span class="comment">//先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class="line">        System.out.println(a);<span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14-扩展赋值运算符"><a href="#14-扩展赋值运算符" class="headerlink" title="14.扩展赋值运算符"></a>14.扩展赋值运算符</h3><h4 id="1-分类：-1"><a href="#1-分类：-1" class="headerlink" title="1.分类："></a>1.分类：</h4><p>​+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</p><h4 id="2-运算规则："><a href="#2-运算规则：" class="headerlink" title="2.运算规则："></a>2.运算规则：</h4><p>​就是把左边跟右边进行运算，把最终的结果赋值给左边，对右边没有任何影响。</p><h4 id="3-案例："><a href="#3-案例：" class="headerlink" title="3.案例："></a>3.案例：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo7</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//扩展赋值运算符</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        a += b;<span class="comment">//把左边和右边相加，再把最终的结果赋值给左边，对右边没有任何影响</span></span><br><span class="line">        <span class="comment">// 相当于 a = a + b;</span></span><br><span class="line">        System.out.println(a);<span class="comment">//30</span></span><br><span class="line">        System.out.println(b);<span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-注意点："><a href="#4-注意点：" class="headerlink" title="4.注意点："></a>4.注意点：</h4><p>​扩展的赋值运算符中隐层还包含了一个强制转换。</p><p>以+&#x3D;为例。</p><p>a +&#x3D; b ;实际上相当于 a &#x3D; (byte)(a + b);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo8</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="comment">//a += b;</span></span><br><span class="line">        a = (<span class="type">byte</span>)(a + b);</span><br><span class="line">        System.out.println(a);<span class="comment">//30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15-关系运算符"><a href="#15-关系运算符" class="headerlink" title="15.关系运算符"></a>15.关系运算符</h3><p>又叫比较运算符，其实就是拿着左边跟右边进行了判断而已。</p><h4 id="1-分类：-2"><a href="#1-分类：-2" class="headerlink" title="1.分类："></a>1.分类：</h4><table><thead><tr><th>符号</th><th>解释</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>就是判断左边跟右边是否相等，如果成立就是true，如果不成立就是false</td></tr><tr><td>!&#x3D;</td><td>就是判断左边跟右边是否不相等，如果成立就是true，如果不成立就是false</td></tr><tr><td>&gt;</td><td>就是判断左边是否大于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&gt;&#x3D;</td><td>就是判断左边是否大于等于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&lt;</td><td>就是判断左边是否小于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&lt;&#x3D;</td><td>就是判断左边是否小于等于右边，如果成立就是true，如果不成立就是false</td></tr></tbody></table><h4 id="2-注意点："><a href="#2-注意点：" class="headerlink" title="2.注意点："></a>2.注意点：</h4><ul><li>关系运算符最终的结果一定是布尔类型的。要么是true，要么是false</li><li>在写&#x3D;&#x3D;的时候，千万不要写成&#x3D;</li></ul><h3 id="16-逻辑运算符"><a href="#16-逻辑运算符" class="headerlink" title="16.逻辑运算符"></a>16.逻辑运算符</h3><h4 id="1-和-的使用："><a href="#1-和-的使用：" class="headerlink" title="1.&amp; 和 | 的使用："></a>1.&amp; 和 | 的使用：</h4><p>&amp;：逻辑与（而且）</p><p>​两边都为真，结果才是真，只要有一个为假，那么结果就是假。</p><p>|：逻辑或（或者）</p><p>​两边都为假，结果才是假，只要有一个为真，那么结果就是真。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &amp;  //两边都是真，结果才是真。</span></span><br><span class="line">System.out.println(<span class="literal">true</span> &amp; <span class="literal">true</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="literal">false</span> &amp; <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">true</span> &amp; <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">false</span> &amp; <span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// | 或  //两边都是假，结果才是假，如果有一个为真，那么结果就是真。</span></span><br><span class="line">System.out.println(<span class="literal">true</span> | <span class="literal">true</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="literal">false</span> | <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">true</span> | <span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="literal">false</span> | <span class="literal">true</span>);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h4 id="2-使用场景："><a href="#2-使用场景：" class="headerlink" title="2.使用场景："></a>2.使用场景：</h4><p>​根据固定的场景，来选择使用&amp;还是使用|</p><ul><li><p>用户登录。</p><p>用户名输入正确  &amp; 密码输入正确</p><p>因为只有用户名和密码同时都正确了，那么才能成功登录，只要有一个失败了都不行。</p><p>使用技巧：</p><p>​当我们需要同时满足左边和右边两种情况时，可以使用且</p></li><li><p>丈母娘选女婿</p><p>丈母娘：女婿啊，你要么买个房子，要么买辆车。就可以把我的小棉袄穿走了。</p><p>买个房子 | 买辆车</p><p>两个条件中，只要满足其中一个，就可以穿走小棉袄了。</p><p>使用技巧：</p><p>​当两种条件只要满足其中一个的时候，可以使用或</p></li></ul><h4 id="3-（异或）的使用："><a href="#3-（异或）的使用：" class="headerlink" title="3.^（异或）的使用："></a>3.^（异或）的使用：</h4><p>​在以后用的不多，了解一下即可。</p><p>计算规则：如果两边相同，结果为false，如果两边不同，结果为true</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//^   //左右不相同，结果才是true，左右相同结果就是false</span></span><br><span class="line">System.out.println(<span class="literal">true</span> ^ <span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">false</span> ^ <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">true</span> ^ <span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="literal">false</span> ^ <span class="literal">true</span>);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h4 id="4-（取反）的使用："><a href="#4-（取反）的使用：" class="headerlink" title="4.!（取反）的使用："></a>4.!（取反）的使用：</h4><p>​是取反，也叫做非。</p><p>计算规则：false取反就是true，true取反就是false</p><p>温馨提示：<strong>取反最多只用一个。</strong></p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(!<span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(!<span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">System.out.println(!!<span class="literal">false</span>);<span class="comment">//注意点：取反最多只用一个。</span></span><br></pre></td></tr></table></figure><h3 id="17-短路逻辑运算符"><a href="#17-短路逻辑运算符" class="headerlink" title="17.短路逻辑运算符"></a>17.短路逻辑运算符</h3><p>分类：  &amp;&amp;   ||</p><p>&amp;&amp;：</p><p>​运算结果跟&amp;是一模一样的，只不过具有短路效果。</p><p>||：</p><p>​运算结果跟|是一模一样的。只不过具有短路效果。</p><p>逻辑核心：</p><p>​当左边不能确定整个表达式的结果，右边才会执行。</p><p>​当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。</p><p>举例：</p><ul><li><p>用户登录案例</p><p>用户名正确  &amp; 密码正确</p><p>如果使用一个&amp;，不管用户名是否正确都会去验证密码。</p></li></ul><p>思考：</p><p>​如果用户名输入正确了，那么我们再判断密码是否正确，是符合业务逻辑的。</p><p>​但是如果用户名输入错误了，那么现在还有必要去比较密码吗？没有不要了。</p><p>​如果使用一个&amp;，那么左边和右边不管什么情况下，都会执行。</p><p>​用户名正确  &amp;&amp;  密码正确</p><p>​如果用户名输入正确了，那么才会验证密码是否输入正确。</p><p>​如果用户名输入错误了，那么就不会再去验证密码是否正确，最终的结果直接为false。从而提高了程序运行的效率。</p><ul><li><p>丈母娘选女婿</p><p>有房 |  有车</p><p>首先先看看有没有房，发现有，然后再去看看有没有车。</p></li></ul><p>思考：</p><p>​既然都有房子，干嘛还要去看车呢？多此一举。</p><p>​有房 ||  有车</p><p>​首先先看看有没有房，如果有，那么右边就不执行了。最终的结果直接为true。</p><p>​如果没有房子，才会去看右边有没有车。</p><p>总结：</p><p>​&amp;&amp; 和 &amp; 、||和|的运行结果都是一模一样的。</p><p>​但是短路逻辑运算符可以提高程序的运行效率。</p><p>建议：</p><p>​最为常用： &amp;&amp;   ||   ！</p><h3 id="18-三元运算符"><a href="#18-三元运算符" class="headerlink" title="18.三元运算符"></a>18.三元运算符</h3><p>又叫做：三元表达式或者问号冒号表达式。</p><h4 id="1-格式："><a href="#1-格式：" class="headerlink" title="1.格式："></a>1.格式：</h4><p>​关系表达式 ？ 表达式1 ：表达式2 ；</p><h4 id="2-计算规则："><a href="#2-计算规则：" class="headerlink" title="2.计算规则："></a>2.计算规则：</h4><ul><li>计算关系表达式的值。</li><li>如果关系表达式的值为真，那么执行表达式1。</li><li>如果关系表达式的值为假，那么执行表达式2。</li></ul><h4 id="3-注意点：-1"><a href="#3-注意点：-1" class="headerlink" title="3.注意点："></a>3.注意点：</h4><p>​三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。</p><h4 id="4，案例："><a href="#4，案例：" class="headerlink" title="4，案例："></a>4，案例：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo12</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//需求：求两个数的较大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//格式：关系表达式 ？ 表达式1 ： 表达式2 ；</span></span><br><span class="line">        <span class="comment">//注意点：</span></span><br><span class="line">        <span class="comment">//三元运算符的最终结果一定要被使用。</span></span><br><span class="line">        <span class="comment">//要么赋值给一个变量，要么直接输出。</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span>  a &gt; b ? a : b ;</span><br><span class="line">        System.out.println(max);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(a &gt; b ? a : b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>17.练习1-两只老虎</p><p>需求：</p><p>​动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，</p><p>​请用程序实现判断两只老虎的体重是否相同。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取两只老虎的体重</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第一只老虎的体重&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">weight1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第二只老虎的体重&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">weight2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.利用三元运算符求出最终结果</span></span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> weight1 == weight2 ? <span class="string">&quot;相同&quot;</span> : <span class="string">&quot;不相同&quot;</span>;</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><p>18.练习2-求三个数的最大值</p><p>需求：</p><p>​一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。</p><p>​请用程序实现获取这三个和尚的最高身高。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义三个变量记录和尚的身高</span></span><br><span class="line"><span class="type">int</span> <span class="variable">height1</span> <span class="operator">=</span> <span class="number">150</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">height2</span> <span class="operator">=</span> <span class="number">210</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">height3</span> <span class="operator">=</span> <span class="number">165</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.利用三元运算符求出两个数中的较大值。</span></span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.求出最终的结果</span></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> temp &gt; height3 ? temp : height3;</span><br><span class="line"></span><br><span class="line">System.out.println(max);</span><br></pre></td></tr></table></figure><h3 id="19-运算符的优先级"><a href="#19-运算符的优先级" class="headerlink" title="19.运算符的优先级"></a>19.运算符的优先级</h3><p>在Java中涉及了很多的运算符，每一种运算符都有各自的优先级。但是这些优先级不需要记忆。</p><p>咱们只要知道其中一点：</p><p>​小括号优先于所有。</p><p>使用步骤：</p><p>第一步：</p><p>​导包：其实就是表示先找到Scanner这个类在哪。</p><p>第二步：</p><p>​创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。</p><p>第三步：</p><p>​接收数据：也是真正干活的代码。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导包，其实就是先找到Scanner这个类在哪</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScannerDemo1</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//3.接收数据</span></span><br><span class="line"><span class="comment">//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了</span></span><br><span class="line">System.out.println(<span class="string">&quot;请输入一个数字&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="05-判断与循环"><a href="#05-判断与循环" class="headerlink" title="05_判断与循环"></a>05_判断与循环</h2><h3 id="第一章-流程控制语句"><a href="#第一章-流程控制语句" class="headerlink" title="第一章 流程控制语句"></a>第一章 流程控制语句</h3><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。</p><h4 id="1-1-流程控制语句分类"><a href="#1-1-流程控制语句分类" class="headerlink" title="1.1 流程控制语句分类"></a>1.1 流程控制语句分类</h4><p>​顺序结构</p><p>​判断和选择结构(if, switch)</p><p>​循环结构(for, while, do…while)</p><h4 id="1-2-顺序结构"><a href="#1-2-顺序结构" class="headerlink" title="1.2 顺序结构"></a>1.2 顺序结构</h4><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p><p>顺序结构执行流程图：</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/1545615769372.png" alt="1545615769372"></p><h3 id="第二章-判断语句：if语句"><a href="#第二章-判断语句：if语句" class="headerlink" title="第二章 判断语句：if语句"></a>第二章 判断语句：if语句</h3><h4 id="2-1-if语句格式1"><a href="#2-1-if语句格式1" class="headerlink" title="2.1 if语句格式1"></a>2.1 if语句格式1</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式的值</p><p>②如果关系表达式的值为true就执行语句体</p><p>③如果关系表达式的值为false就不执行语句体</p><p>④继续执行后面的语句内容</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/1545616039363.png" alt="1545616039363"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line"><span class="comment">//定义两个变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="comment">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class="line"><span class="keyword">if</span>(a == b) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a等于b&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(a == c) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a等于c&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-案例"><a href="#2-2-案例" class="headerlink" title="2.2  案例"></a>2.2  案例</h4><p>练习1：老丈人选女婿</p><p>需求：</p><p>​键盘录入女婿的酒量，如果大于2斤，老丈人给出回应，否则没有任何回应</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入女婿的酒量</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入女婿的酒量&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">wine</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//5</span></span><br><span class="line"><span class="comment">//2.对酒量进行一个判断即可</span></span><br><span class="line"><span class="keyword">if</span>(wine &gt; <span class="number">2</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;不错哟，小伙子！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>练习2：考试奖励</p><p>需求：</p><p>​键盘录入一个整数，表示小明的考试名次，如果名次为1，小红可以当小明的女朋有了。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入一个整数，表示小明的考试名次</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入小明的名次&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">rank</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="comment">//2.对小明的考试成绩进行判断即可</span></span><br><span class="line"><span class="keyword">if</span>(rank == <span class="number">1</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;小红成为了小明的女朋友&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一种格式的细节：</p><ol><li><p>如果我们要对一个布尔类型的变量进行判断，不要写&#x3D;&#x3D;，直接把变量写在小括号中即可。</p></li><li><p>如果大括号中的语句体只有一条，那么大括号可以省略不写</p><p>如果大括号省略了，那么if只能控制距离他最近的那一条语句。</p><p><strong>建议：</strong>自己不要去写，如果别人这么写了，你要能看懂即可。</p></li></ol><p>2.2 if语句格式2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    语句体<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式的值</p><p>②如果关系表达式的值为true就执行语句体1</p><p>③如果关系表达式的值为false就执行语句体2</p><p>④继续执行后面的语句内容</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/1545616221283.png" alt="1545616221283"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo02</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line"><span class="comment">//定义两个变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="comment">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class="line"><span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a的值大于b&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a的值不大于b&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>练习1：吃饭</p><p>需求：</p><p>​    键盘录入一个整数，表示身上的钱。</p><p>​            如果大于等于100块，就是网红餐厅。</p><p>​            否则，就吃经济实惠的沙县小吃。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入一个整数。表示身上的钱。</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入一个整数表示身上的钱&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="comment">//2.对钱进行判断</span></span><br><span class="line"><span class="keyword">if</span>(money &gt;= <span class="number">100</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;吃网红餐厅&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;福建大酒店&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>练习2：影院选座</p><p>需求：</p><p>​在实际开发中，电影院选座也会使用到if判断。</p><p>​假设某影院售卖了100张票，票的序号为1~100。</p><p>​其中奇数票号坐左侧，偶数票号坐右侧。</p><p>​键盘录入一个整数表示电影票的票号。</p><p>​根据不同情况，给出不同的提示：</p><p>​如果票号为奇数，那么打印坐左边。</p><p>​如果票号为偶数，那么打印坐右边。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入票号</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入票号&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="keyword">if</span>(ticket &gt;= <span class="number">1</span> &amp;&amp; ticket &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">    <span class="comment">//合法</span></span><br><span class="line">    <span class="comment">//2.对票号进行判断</span></span><br><span class="line">    <span class="keyword">if</span> (ticket % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//偶数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;坐右边&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//奇数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;坐左边&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//票号不合法</span></span><br><span class="line">    System.out.println(<span class="string">&quot;票号不合法&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3 if语句格式3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式<span class="number">1</span>) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (关系表达式<span class="number">2</span>) &#123;</span><br><span class="line">    语句体<span class="number">2</span>;</span><br><span class="line">&#125; </span><br><span class="line">…</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    语句体n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式1的值</p><p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p><p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p><p>④…</p><p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p><p><img src="/2023/09/18/Java%E5%9F%BA%E7%A1%80/1545616667104.png" alt="1545616667104"></p><p>练习1：考试奖励</p><p>需求：</p><p>​小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，</p><p>假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p><p>分析：</p><p>​①小明的考试成绩未知，可以使用键盘录入的方式获取值</p><p>​②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p><p>​③为每种判断设置对应的条件</p><p>​④为每种判断设置对应的奖励</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//95~100 自行车一辆</span></span><br><span class="line"><span class="comment">//90~94   游乐场玩一天</span></span><br><span class="line"><span class="comment">//80 ~ 89 变形金刚一个</span></span><br><span class="line"><span class="comment">//80 以下  胖揍一顿</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.键盘录入一个值表示小明的分数</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入小明的成绩&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="comment">//2.对分数的有效性进行判断</span></span><br><span class="line"><span class="keyword">if</span>(score &gt;= <span class="number">0</span> &amp;&amp; score &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">    <span class="comment">//有效的分数</span></span><br><span class="line">    <span class="comment">//3.对小明的分数进行判断，不同情况执行不同的代码</span></span><br><span class="line">    <span class="keyword">if</span>(score &gt;= <span class="number">95</span> &amp;&amp; score &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;送自行车一辆&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">94</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;游乐场玩一天&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">80</span> &amp;&amp; score &lt;= <span class="number">89</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;变形金刚一个&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;胖揍一顿&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//无效的分数</span></span><br><span class="line">    System.out.println(<span class="string">&quot;分数不合法&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三章-switch语句"><a href="#第三章-switch语句" class="headerlink" title="第三章 switch语句"></a>第三章 switch语句</h3><h4 id="3-1-格式"><a href="#3-1-格式" class="headerlink" title="3.1 格式"></a>3.1 格式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (表达式) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">语句体<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">语句体<span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">语句体n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="执行流程："><a href="#执行流程：" class="headerlink" title="执行流程："></a><strong>执行流程：</strong></h4><ul><li>首先计算出表达式的值 </li><li>其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 </li><li>最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。</li></ul><p>练习：运动计划</p><ul><li><p>需求：键盘录入星期数，显示今天的减肥活动。</p><p>周一：跑步  </p><p>周二：游泳  </p><p>周三：慢走  </p><p>周四：动感单车</p><p>周五：拳击  </p><p>周六：爬山  </p><p>周日：好好吃一顿</p></li><li><p>代码示例：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> a01switch选择语句;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.键盘录入一个整数表示星期</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个整数表示星期&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.书写一个switch语句去跟week进行匹配</span></span><br><span class="line">        <span class="keyword">switch</span> (week)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;游泳&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;慢走&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;动感单车&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;拳击&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;爬山&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;好好吃一顿&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入错误，没有这个星期&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2switch的扩展知识："><a href="#3-2switch的扩展知识：" class="headerlink" title="3.2switch的扩展知识："></a>3.2switch的扩展知识：</h4><ul><li><p>default的位置和省略情况</p><p>default可以放在任意位置，也可以省略</p></li><li><p>case穿透</p><p>不写break会引发case穿透现象</p></li><li><p>switch在JDK12的新特性</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">switch</span> (number) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span> -&gt; System.out.println(<span class="string">&quot;一&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span> -&gt; System.out.println(<span class="string">&quot;二&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span> -&gt; System.out.println(<span class="string">&quot;三&quot;</span>);</span><br><span class="line">    <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;其他&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>switch和if第三种格式各自的使用场景</li></ul><p>当我们需要对一个范围进行判断的时候，用if的第三种格式</p><p>当我们把有限个数据列举出来，选择其中一个执行的时候，用switch语句</p><p>比如：</p><p>​小明的考试成绩，如果用switch，那么需要写100个case，太麻烦了，所以用if简单。</p><p>​如果是星期，月份，客服电话中0~9的功能选择就可以用switch</p><h4 id="练习：休息日和工作日"><a href="#练习：休息日和工作日" class="headerlink" title="练习：休息日和工作日"></a>练习：休息日和工作日</h4><p>需求：键盘录入星期数，输出工作日、休息日。</p><p>(1-5) 工作日，(6-7)休息日。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入星期数</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入星期&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//3</span></span><br><span class="line"><span class="comment">//2.利用switch进行匹配</span></span><br><span class="line">----------------------------------------------------</span><br><span class="line">利用<span class="keyword">case</span>穿透简化代码</span><br><span class="line"><span class="keyword">switch</span> (week)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;工作日&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;休息日&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;没有这个星期&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">----------------------------------------------------</span><br><span class="line">利用JDK12简化代码书写</span><br><span class="line"><span class="keyword">switch</span> (week) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> -&gt; System.out.println(<span class="string">&quot;工作日&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>, <span class="number">7</span> -&gt; System.out.println(<span class="string">&quot;休息日&quot;</span>);</span><br><span class="line">    <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;没有这个星期&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四章-循环结构"><a href="#第四章-循环结构" class="headerlink" title="第四章 循环结构"></a>第四章 循环结构</h2><h3 id="4-1-for循环结构（掌握）"><a href="#4-1-for循环结构（掌握）" class="headerlink" title="4.1 for循环结构（掌握）"></a>4.1 for循环结构（掌握）</h3><p>​循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 </p><h4 id="4-1-1-for循环格式："><a href="#4-1-1-for循环格式：" class="headerlink" title="4.1.1 for循环格式："></a>4.1.1 for循环格式：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化语句;条件判断语句;条件控制语句) &#123;</span><br><span class="line">循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>格式解释：</strong></p><ul><li>初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样</li><li>条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去</li><li>循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情</li><li>条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去</li></ul><p><strong>执行流程：</strong></p><p>①执行初始化语句</p><p>②执行条件判断语句，看其结果是true还是false</p><p>​             如果是false，循环结束</p><p>​             如果是true，继续执行</p><p>③执行循环体语句</p><p>④执行条件控制语句</p><p>⑤回到②继续</p><p><strong>for循环书写技巧：</strong></p><ul><li>确定循环的开始条件</li><li>确定循环的结束条件</li><li>确定循环要重复执行的代码</li></ul><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.确定循环的开始条件</span></span><br><span class="line"><span class="comment">//2.确定循环的结束条件</span></span><br><span class="line"><span class="comment">//3.确定要重复执行的代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//需求：打印5次HelloWorld</span></span><br><span class="line"><span class="comment">//开始条件：1</span></span><br><span class="line"><span class="comment">//结束条件：5</span></span><br><span class="line"><span class="comment">//重复代码：打印语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="for循环练习-输出数据"><a href="#for循环练习-输出数据" class="headerlink" title="for循环练习-输出数据"></a>for循环练习-输出数据</h5><ul><li>需求：在控制台输出1-5和5-1的数据 </li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//需求：输出数据1-5</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"><span class="comment">//需求：输出数据5-1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">5</span>; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="for循环练习-求和"><a href="#for循环练习-求和" class="headerlink" title="for循环练习-求和"></a>for循环练习-求和</h5><ul><li>需求：求1-5之间的数据和，并把求和结果在控制台输出  </li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//从1开始到5结束的数据，使用循环结构完成</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line"><span class="comment">//将反复进行的事情写入循环结构内部</span></span><br><span class="line">             <span class="comment">// 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中</span></span><br><span class="line">sum = sum + i;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sum += i;sum = sum + i;</span></span><br><span class="line"><span class="comment">第一次：sum = sum + i = 0 + 1 = 1;</span></span><br><span class="line"><span class="comment">第二次：sum = sum + i = 1 + 2 = 3;</span></span><br><span class="line"><span class="comment">第三次：sum = sum + i = 3 + 3 = 6;</span></span><br><span class="line"><span class="comment">第四次：sum = sum + i = 6 + 4 = 10;</span></span><br><span class="line"><span class="comment">第五次：sum = sum + i = 10 + 5 = 15;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class="line">System.out.println(<span class="string">&quot;1-5之间的数据和是：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>本题要点：<ul><li>今后遇到的需求中，如果带有求和二字，请立即联想到求和变量</li><li>求和变量的定义位置，必须在循环外部，如果在循环内部则计算出的数据将是错误的</li></ul></li></ul><h5 id="for循环练习-求偶数和"><a href="#for循环练习-求偶数和" class="headerlink" title="for循环练习-求偶数和"></a>for循环练习-求偶数和</h5><ul><li>需求：求1-100之间的偶数和，并把求和结果在控制台输出 }</li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="comment">//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数</span></span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//sum += i；</span></span><br><span class="line">sum = sum + i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class="line">System.out.println(<span class="string">&quot;1-100之间的偶数和是：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="for循环练习-统计次数"><a href="#for循环练习-统计次数" class="headerlink" title="for循环练习-统计次数"></a>for循环练习-统计次数</h5><p>需求：</p><p>​  键盘录入两个数字，表示一个范围。</p><p>​           统计这个范围中。</p><p>​           既能被3整除，又能被5整除数字有多少个？</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-2-while循环"><a href="#4-2-while循环" class="headerlink" title="4.2 while循环"></a>4.2 while循环</h3><h4 id="4-2-1-格式："><a href="#4-2-1-格式：" class="headerlink" title="4.2.1 格式："></a>4.2.1 格式：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span>(条件判断语句)&#123;</span><br><span class="line">循环体;</span><br><span class="line">条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="练习1：打印5次HelloWorld"><a href="#练习1：打印5次HelloWorld" class="headerlink" title="练习1：打印5次HelloWorld"></a>练习1：打印5次HelloWorld</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= <span class="number">5</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(i);</span><br></pre></td></tr></table></figure><h5 id="练习2：珠穆朗玛峰"><a href="#练习2：珠穆朗玛峰" class="headerlink" title="练习2：珠穆朗玛峰"></a>练习2：珠穆朗玛峰</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义一个变量表示珠穆朗玛峰的高度</span></span><br><span class="line"><span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">8844430</span>;</span><br><span class="line"><span class="comment">//2.定义一个变量表示纸张的厚度</span></span><br><span class="line"><span class="type">double</span> <span class="variable">paper</span> <span class="operator">=</span> <span class="number">0.1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个计数器（变量），用来统计折叠的次数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.循环折叠纸张</span></span><br><span class="line"><span class="comment">//只有纸张的厚度 &lt; 穆朗玛峰的高度 循环才继续，否则循环就停止</span></span><br><span class="line"><span class="comment">//坑：只有判断为真，循环才会继续</span></span><br><span class="line"><span class="keyword">while</span>(paper &lt; height)&#123;</span><br><span class="line">    <span class="comment">//折叠纸张</span></span><br><span class="line">    paper = paper * <span class="number">2</span>;</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.打印一下纸张的厚度</span></span><br><span class="line">System.out.println(count);<span class="comment">//27</span></span><br></pre></td></tr></table></figure><h3 id="4-3-do…while循环"><a href="#4-3-do…while循环" class="headerlink" title="4.3 do…while循环"></a>4.3 do…while循环</h3><p>本知识点了解即可</p><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    循环体;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125;<span class="keyword">while</span>(条件判断语句);</span><br></pre></td></tr></table></figure><p>特点：</p><p>​先执行，再判断。</p><h3 id="4-4-三种格式的区别："><a href="#4-4-三种格式的区别：" class="headerlink" title="4.4 三种格式的区别："></a>4.4 三种格式的区别：</h3><p>​for和while循环，是先判断，再执行。</p><p>​do…while是先执行，再判断。</p><p>​当知道循环次数或者循环范围的时候，用for循环。</p><p>​当不知道循环次数，也不知道循环范围，但是知道循环的结束条件时，用while循环。</p><h2 id="6-循环高级数组"><a href="#6-循环高级数组" class="headerlink" title="6_循环高级数组"></a>6_循环高级数组</h2><h3 id="1-概念：-1"><a href="#1-概念：-1" class="headerlink" title="1.概念："></a>1.概念：</h3><p>​指的是一种容器，可以同来存储同种数据类型的多个值。</p><p>​但是数组容器在存储数据的时候，需要结合隐式转换考虑。</p><p>比如：</p><p>​定义了一个int类型的数组。那么boolean。double类型的数据是不能存到这个数组中的，</p><p>​但是byte类型，short类型，int类型的数据是可以存到这个数组里面的。</p><p>建议：</p><p>​容器的类，和存储的数据类型保持一致。</p><p>举例：</p><p>​整数1 2 3 4 56 就可以使用int类型的数组来存储。</p><p>​小数1.1 1.2 1.3 1.4 就可以使用double类型的数组来存储。</p><p>​字符串”aaa”  “bbb”  “ccc” 就可以使用String类型的数组来存储。</p><h3 id="2-数组的定义"><a href="#2-数组的定义" class="headerlink" title="2.数组的定义"></a>2.数组的定义</h3><h4 id="格式一："><a href="#格式一：" class="headerlink" title="格式一："></a>格式一：</h4><p>​数据类型 [] 数组名</p><p>比如：int [] array</p><h4 id="格式二："><a href="#格式二：" class="headerlink" title="格式二："></a>格式二：</h4><p>​数据类型  数组名 []</p><p>比如： int array []</p><h4 id="详解："><a href="#详解：" class="headerlink" title="详解："></a>详解：</h4><p>数据类型：限定了数组以后能存什么类型的数据。</p><p>方括号：表示现在定义的是一个数组。</p><p>数组名：就是一个名字而已，方便以后使用。</p><h4 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h4><p>​方法括号跟数组名，谁写在前面，谁写在后面都是一样的。</p><p>​平时习惯性使用第一种方式。</p><h3 id="3-数组的静态初始化"><a href="#3-数组的静态初始化" class="headerlink" title="3.数组的静态初始化"></a>3.数组的静态初始化</h3><h4 id="完整格式："><a href="#完整格式：" class="headerlink" title="完整格式："></a>完整格式：</h4><p>​数据类型[] 数组名 &#x3D; new 数据类型[]{元素1，元素2，元素3，元素4…};</p><p>比如：</p><p>​int[] arr &#x3D; new int[]{11,22,33};</p><p>​double[] arr &#x3D; new double[]{1.1,1.2,1.3};</p><h4 id="格式详解："><a href="#格式详解：" class="headerlink" title="格式详解："></a>格式详解：</h4><p>​数据类型：限定了数组以后能存什么类型的数据。</p><p>​方括号：表示现在定义的是一个数组。</p><p>​数组名：其实就是名字而已，方便以后使用，在起名字的时候遵循小驼峰命名法。</p><p>​arr   namesArr</p><p>​new：就是给数组在内存中开辟了一个空间。</p><p>​数据类型：限定了数组以后能存什么类型的数据。</p><p>​  前面和后面的数据类型一定要保持一致。</p><p>​int[] arr &#x3D; new double[]{11,22,33};&#x2F;&#x2F;错误写法</p><p>​方括号：表示现在定义的是一个数组。</p><p>​大括号：表示数组里面的元素。元素也就是存入到数组中的数据。</p><p>​多个元素之间，一定要用逗号隔开。</p><h4 id="注意点：-1"><a href="#注意点：-1" class="headerlink" title="注意点："></a>注意点：</h4><ul><li>等号前后的数据类型必须保持一致。</li><li>数组一旦创建之后，长度不能发生变化。</li></ul><h4 id="简化格式"><a href="#简化格式" class="headerlink" title="简化格式:"></a>简化格式:</h4><p>​数据类型[] 数组名 &#x3D; {元素1，元素2，元素3，元素4…};</p><p>比如：</p><p>​int[] array &#x3D; {1,2,3,4,5};</p><p>​double[] array &#x3D; {1.1,1.2,1.3};</p><h4 id="练习1："><a href="#练习1：" class="headerlink" title="练习1："></a>练习1：</h4><p>定义数组存储5个学生的年龄。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>给数组限定什么类型？ <span class="type">int</span></span><br><span class="line"><span class="number">2.</span>利用静态初始化完成创建并添加元素</span><br><span class="line"><span class="type">int</span>[] agesArr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] agesArr = &#123;<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>&#125;;</span><br></pre></td></tr></table></figure><h4 id="练习2："><a href="#练习2：" class="headerlink" title="练习2："></a>练习2：</h4><p>定义数组存储3个学生的姓名。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>给数组限定什么类型？ String</span><br><span class="line"><span class="number">2.</span>利用静态初始化完成创建并添加元素</span><br><span class="line">String[] namesArr = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;wangwu&quot;</span>&#125;;</span><br><span class="line">String[] namesArr = &#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;wangwu&quot;</span>&#125;;</span><br></pre></td></tr></table></figure><h4 id="练习3："><a href="#练习3：" class="headerlink" title="练习3："></a>练习3：</h4><p>定义数组存储4个学生的身高。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>给数组限定什么类型？ <span class="type">double</span></span><br><span class="line"><span class="number">2.</span>利用静态初始化完成创建并添加元素</span><br><span class="line"><span class="type">double</span>[] heightsArr = <span class="keyword">new</span> <span class="title class_">double</span>[]&#123;<span class="number">1.85</span>,<span class="number">1.82</span>,<span class="number">1.78</span>,<span class="number">1.65</span>&#125;;</span><br><span class="line"><span class="type">double</span>[] heightsArr = &#123;<span class="number">1.85</span>,<span class="number">1.82</span>,<span class="number">1.78</span>,<span class="number">1.65</span>&#125;;</span><br></pre></td></tr></table></figure><h3 id="4-地址值"><a href="#4-地址值" class="headerlink" title="4.地址值"></a>4.地址值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">System.out.println(arr);<span class="comment">//[I@6d03e736</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span>[] arr2 = &#123;<span class="number">1.1</span>,<span class="number">2.2</span>,<span class="number">3.3</span>&#125;;</span><br><span class="line">System.out.println(arr2);<span class="comment">//[D@568db2f2</span></span><br></pre></td></tr></table></figure><p>打印数组的时候，实际出现的是数组的地址值。</p><p>数组的地址值：就表示数组在内存中的位置。</p><p>以[I@6d03e736为例：</p><p>[ ：表示现在打印的是一个数组。</p><p>I：表示现在打印的数组是int类型的。</p><p>@：仅仅是一个间隔符号而已。</p><p>6d03e736：就是数组在内存中真正的地址值。（十六进制的）</p><p>但是，我们习惯性会把[I@6d03e736这个整体称之为数组的地址值。</p><p>地址值对于我们来京，作用不大，简单了解。</p><h3 id="5-数组元素访问"><a href="#5-数组元素访问" class="headerlink" title="5.数组元素访问"></a>5.数组元素访问</h3><h4 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h4><p>​数组名[索引];</p><h4 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h4><ul><li><p>获取数组中对应索引上的值</p></li><li><p>修改数组中对应索引上的值</p><p>一旦修改之后，原来的值就会被覆盖了。</p></li></ul><h4 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrDemo2</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        数组中元素访问的格式：</span></span><br><span class="line"><span class="comment">                数组名[索引];</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         作用：</span></span><br><span class="line"><span class="comment">            1.获取指定索引上对应的元素</span></span><br><span class="line"><span class="comment">            2.修改指定索引上对应的元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">       <span class="comment">//需求1：获取arr数组中，3索引上的值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> arr[<span class="number">3</span>];</span><br><span class="line">        System.out.println(number);</span><br><span class="line">        System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//需求2：将arr数组中，3索引上的值修改为10</span></span><br><span class="line">            arr[<span class="number">3</span>] = <span class="number">10</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;修改之后为:&quot;</span> + arr[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-索引"><a href="#6-索引" class="headerlink" title="6.索引"></a>6.索引</h3><p>​也叫角标、下标</p><p>​就是数组容器中每一个小格子对应的编号。</p><p>索引的特点：</p><ul><li>索引一定是从0开始的。</li><li>连续不间断。</li><li>逐个+1增长。</li></ul><h3 id="7-数组的遍历"><a href="#7-数组的遍历" class="headerlink" title="7.数组的遍历"></a>7.数组的遍历</h3><p>遍历：就是把数组里面所有的内容一个一个全部取出来。</p><p>数组的长度：数组名.length;</p><p>通用代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">    <span class="comment">//在循环的过程中，i依次表示数组中的每一个索引</span></span><br><span class="line">    sout(arr[i]);<span class="comment">//就可以把数组里面的每一个元素都获取出来，并打印在控制台上了。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-数组的动态初始化"><a href="#8-数组的动态初始化" class="headerlink" title="8.数组的动态初始化"></a>8.数组的动态初始化</h3><p>格式：</p><p>​数据类型[] 数组名 &#x3D; new 数据类型[数组的长度];</p><p>举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义一个数组，存3个人的年龄，年龄未知</span></span><br><span class="line"><span class="type">int</span>[] agesArr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.定义一个数组，存班级10名学生的考试成绩，考试成绩暂时未知，考完才知道。</span></span><br><span class="line"><span class="type">int</span>[] scoresArr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p>数组的默认初始化值：</p><p>整数类型：0</p><p>小数类型：0.0</p><p>布尔类型：false</p><p>字符类型：’\u0000’</p><p>引用类型：null</p><h3 id="9-数组两种初始化方式的区别"><a href="#9-数组两种初始化方式的区别" class="headerlink" title="9.数组两种初始化方式的区别"></a>9.数组两种初始化方式的区别</h3><p>静态初始化：int[] arr &#x3D; {1,2,3,4,5};</p><p>动态初始化：int[] arr &#x3D; new int[3];</p><p>静态初始化：手动指定数组的元素，系统会根据元素的个数，计算出数组的长度。</p><p>动态初始化：手动指定数组长度，由系统给出默认初始化值。</p><p>使用场景：</p><p>只明确元素个数，但是不明确具体的数据，推荐使用动态初始化。</p><p>已经明确了要操作的所有数据，推荐使用静态初始化。</p><p>举例：</p><ul><li><p>使用数组来存储键盘录入的5个整数。</p><p>int[] arr &#x3D; new int[5];</p></li><li><p>将全班的学生成绩存入数组中，已知学生成绩为：66,77,88,99,100</p><p>int[] arr &#x3D; new int[5];</p><p>arr[0] &#x3D; 66;</p><p>arr[1] &#x3D; 77;</p><p>… 虽然可以实现，但是太麻烦了。</p><p>建议使用静态初始化：int[] arr &#x3D; {66,77,88,99,100};</p></li></ul><h3 id="10-数组常见问题"><a href="#10-数组常见问题" class="headerlink" title="10.数组常见问题"></a>10.数组常见问题</h3><p>当访问了数组中不存在的索引，就会引发索引越界异常。</p><p>避免：</p><p>​针对于任意一个数组，索引的范围：<br>       最小索引：0<br>       最大索引：数组的长度 - 1<br>​               数组名.length - 1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrDemo6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="comment">//用索引来访问数组中的元素</span></span><br><span class="line">        System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">10</span>]);<span class="comment">//ArrayIndexOutOfBoundsException</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-数组的练习"><a href="#11-数组的练习" class="headerlink" title="11.数组的练习"></a>11.数组的练习</h3><h4 id="练习1：求和"><a href="#练习1：求和" class="headerlink" title="练习1：求和"></a>练习1：求和</h4><p>需求：定义一个数组，存储1,2,3,4,5</p><p>遍历数组得到每一个元素，求数组里面所有的数据和</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*定义一个数组，存储1,2,3,4,5</span></span><br><span class="line"><span class="comment">        遍历数组得到每一个元素，求数组里面所有的数据和*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.定义一个数组，并添加数据1,2,3,4,5</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求和变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//2.遍历数组得到每一个数据，累加求和</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">//i 依次表示数组里面的每一个索引</span></span><br><span class="line">    <span class="comment">//arr[i] 依次表示数组里面的每一个元素</span></span><br><span class="line">    sum = sum + arr[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当循环结束之后，sum的值就是累加之后的结果</span></span><br><span class="line">System.out.println(sum);</span><br></pre></td></tr></table></figure><h4 id="练习2：统计个数"><a href="#练习2：统计个数" class="headerlink" title="练习2：统计个数"></a>练习2：统计个数</h4><p>需求：定义一个数组，存储1,2,3,4,5,6,7,8,9,10</p><p>遍历数组得到每一个元素，统计数组里面一共有多少个能被3整除的数字</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.定义一个数组 存储1,2,3,4,5,6,7,8,9,10</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br><span class="line"><span class="comment">//定义一个变量，用来统计次数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//2.遍历数组得到每一个元素</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">//i 表示数组里面的每一个索引</span></span><br><span class="line">    <span class="comment">//arr[i] 表示数组里面的每一个元素</span></span><br><span class="line">    <span class="comment">//3.判断当前的元素是否为3的倍数，如果是那么统计变量就需要自增一次。</span></span><br><span class="line">    <span class="keyword">if</span>(arr[i] % <span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// System.out.println(arr[i]);</span></span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环结束之后，就表示数组里面所有的数字都判断完毕了，直接打印count即可</span></span><br><span class="line">System.out.println(<span class="string">&quot;数组中能被3整除的数字有&quot;</span> + count + <span class="string">&quot;个&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="练习3：变化数据"><a href="#练习3：变化数据" class="headerlink" title="练习3：变化数据"></a>练习3：变化数据</h4><p>需求：</p><p>定义一个数组，存储1,2,3,4,5,6,7,8,9,10</p><p>遍历数组得到每一个元素。</p><p>要求：</p><p>1，如果是奇数，则将当前数字扩大两倍</p><p>2，如果是偶数，则将当前数字变成二分之一</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.定义一个数组，存1,2,3,4,5,6,7,8,9,10</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line"><span class="comment">//2.遍历数组得到每一个元素</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">//i 依次表示数组里面的每一个索引</span></span><br><span class="line">    <span class="comment">//arr[i] 依次表示数组里面的每一个元素</span></span><br><span class="line">    <span class="comment">//3.对每一个元素进行判断</span></span><br><span class="line">    <span class="keyword">if</span>(arr[i] % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//偶数 变成二分之一</span></span><br><span class="line">        arr[i] = arr[i] / <span class="number">2</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//奇数 扩大两倍</span></span><br><span class="line">        arr[i] = arr[i] * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历数组</span></span><br><span class="line"><span class="comment">//一个循环尽量只做一件事情。</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    System.out.println(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="练习4：求最值"><a href="#练习4：求最值" class="headerlink" title="练习4：求最值"></a>练习4：求最值</h4><p>需求：求数组中的最大值</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义数组求最大值：33,5,22,44,55</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//扩展问题：</span></span><br><span class="line"><span class="comment">//1.根据求最大值的思路，自己改写一下求最小智</span></span><br><span class="line"><span class="comment">//2.为什么max要记录为arr[0],默认值不能为0吗？</span></span><br><span class="line"><span class="comment">//不能写0</span></span><br><span class="line"><span class="comment">//max的初始化值一定要是数组中的值。</span></span><br><span class="line"><span class="comment">//3.循环中开始条件一定是0吗？</span></span><br><span class="line"><span class="comment">//循环的开始条件如果为0，那么第一次循环的时候是自己跟自己比了一下，对结果没有任何影响，但是效率偏低</span></span><br><span class="line"><span class="comment">//为了提高效率，减少一次循环的次数，循环开始条件可以写1.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.定义数组用来存储5个值</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">33</span>,<span class="number">5</span>,<span class="number">22</span>,<span class="number">44</span>,<span class="number">55</span>&#125;;</span><br><span class="line"><span class="comment">//2.定义一个变量max用来存储最大值</span></span><br><span class="line"><span class="comment">//临时认为0索引的数据是最大的</span></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//3.循环获取数组中的每一个元素</span></span><br><span class="line"><span class="comment">//拿着每一个元素跟max进行比较</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">//i 索引  arr[i] 元素</span></span><br><span class="line">    <span class="keyword">if</span>(arr[i] &gt; max)&#123;</span><br><span class="line">        max = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.当循环结束之后，max记录的就是数组中的最大值</span></span><br><span class="line">System.out.println(max);<span class="comment">//55</span></span><br></pre></td></tr></table></figure><h4 id="练习5：统计个数"><a href="#练习5：统计个数" class="headerlink" title="练习5：统计个数"></a>练习5：统计个数</h4><p>需求：生成10个1~100之间的随机数存入数组。</p><p>1）求出所有数据的和</p><p>2）求所有数据的平均数</p><p>3）统计有多少个数据比平均值小</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.定义数组</span></span><br><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="comment">//2.把随机数存入到数组当中</span></span><br><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">//每循环一次，就会生成一个新的随机数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(<span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//把生成的随机数添加的数组当中</span></span><br><span class="line">    <span class="comment">//数组名[索引] = 数据;</span></span><br><span class="line">    arr[i] = number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1）求出所有数据的和</span></span><br><span class="line"><span class="comment">//定义求和变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">//循环得到每一个元素</span></span><br><span class="line">    <span class="comment">//并把元素累加到sum当中</span></span><br><span class="line">    sum = sum + arr[i];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;数组中所有数据的和为：&quot;</span> + sum);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2）求所有数据的平均数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">avg</span> <span class="operator">=</span> sum / arr.length;</span><br><span class="line">System.out.println(<span class="string">&quot;数组中平均数为：&quot;</span> + avg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3）统计有多少个数据比平均值小</span></span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[i] &lt; avg)&#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当循环结束之后，就表示我已经找到了所有的比平均数小的数据</span></span><br><span class="line">System.out.println(<span class="string">&quot;在数组中，一共有&quot;</span> + count + <span class="string">&quot;个数据，比平均数小&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历数组，验证答案</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="练习6：交换数据"><a href="#练习6：交换数据" class="headerlink" title="练习6：交换数据"></a>练习6：交换数据</h4><p>需求：定义一个数组，存入1,2,3,4,5。按照要求交换索引对应的元素。</p><p>交换前：1,2,3,4,5</p><p>交换后：5,2,3,4,1</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义数组存储数据</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="comment">//2.利用循环去交换数据</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,j = arr.length - <span class="number">1</span>; i &lt; j; i++,j--)&#123;</span><br><span class="line">    <span class="comment">//交换变量i和变量j指向的元素</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">    arr[i] = arr[j];</span><br><span class="line">    arr[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环结束之后，那么数组中的数据就实现了头尾交换</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="练习7：打乱数据"><a href="#练习7：打乱数据" class="headerlink" title="练习7：打乱数据"></a>练习7：打乱数据</h4><p>需求：定义一个数组，存入1~5。要求打乱数组中所有数据的顺序。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义数组存储1~5</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="comment">//2.循环遍历数组，从0索引开始打乱数据的顺序</span></span><br><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="comment">//生成一个随机索引</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">randomIndex</span> <span class="operator">=</span> r.nextInt(arr.length);</span><br><span class="line">    <span class="comment">//拿着随机索引指向的元素 跟 i 指向的元素进行交换</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">    arr[i] = arr[randomIndex];</span><br><span class="line">    arr[randomIndex] = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环结束之后，那么数组中所有的数据已经打乱顺序了</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-无限循环"><a href="#7-无限循环" class="headerlink" title="7.无限循环"></a>7.无限循环</h3><p>概念：</p><pre><code>又叫死循环。循环一直停不下来。</code></pre><p>for格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(;;)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><p>初始化语句可以空着不写，表示循环之前不定义任何的控制变量。</p><p>条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。</p><p>条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。</p><p>while格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><pre><code>小括号里面就不能省略了，true一定要写出来，否则代码会报错。</code></pre><p>do…while格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>解释：</p><pre><code>小括号里面就不能省略了，true一定要写出来，否则代码会报错。</code></pre><p>无限循环的注意事项：</p><ul><li>最为常用的格式：while</li><li>无限循环下面不能再写其他代码了，因为永远执行不到。</li></ul><h3 id="8-条件控制语句"><a href="#8-条件控制语句" class="headerlink" title="8.条件控制语句"></a>8.条件控制语句</h3><ul><li>break</li><li>continue</li></ul><p>break:</p><pre><code>不能单独存在的。可以用在switch和循环中，表示结束，跳出的意思。</code></pre><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.吃1~5号包子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;在吃第&quot;</span> + i + <span class="string">&quot;个包子&quot;</span>);</span><br><span class="line">    <span class="comment">//2.吃完第三个的时候就不吃了</span></span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>;<span class="comment">//结束整个循环。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="continue"><a href="#continue" class="headerlink" title="continue:"></a>continue:</h3><pre><code>不能单独存在的。只能存在于循环当中。表示：跳过本次循环，继续执行下次循环。</code></pre><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.吃1~5号包子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//2.第3个包子有虫子就跳过，继续吃下面的包子</span></span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="comment">//跳过本次循环（本次循环中，下面的代码就不执行了），继续执行下次循环。</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;在吃第&quot;</span> + i + <span class="string">&quot;个包子&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-Random"><a href="#9-Random" class="headerlink" title="9. Random"></a>9. Random</h3><p>Random跟Scanner一样，也是Java提前写好的类，我们不需要关心是如何实现的，只要直接使用就可以了。</p><p>使用步骤：</p><ol><li>导包</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line">导包的动作必须出现在类定义的上边。</span><br></pre></td></tr></table></figure><ol start="2"><li>创建对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span> ();</span><br><span class="line">上面这个格式里面，只有r是变量名，可以变，其他的都不允许变。</span><br></pre></td></tr></table></figure><ol start="3"><li>生成随机数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(随机数的范围);</span><br><span class="line">上面这个格式里面，只有number是变量名，可以变，其他的都不允许变。</span><br><span class="line">随机数范围的特点：从<span class="number">0</span>开始，不包含指定值。比如：参数为<span class="number">10</span>，生成的范围[<span class="number">0</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.导包</span></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RandomDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//2.创建对象</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="comment">//3.生成随机数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(<span class="number">100</span>);<span class="comment">//包左不包右，包头不包尾</span></span><br><span class="line">        <span class="comment">//0 ~ 99</span></span><br><span class="line">        System.out.println(number);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript</title>
      <link href="/2023/09/15/JavaScript/"/>
      <url>/2023/09/15/JavaScript/</url>
      
        <content type="html"><![CDATA[<h2 id="JS-进阶"><a href="#JS-进阶" class="headerlink" title="JS 进阶"></a>JS 进阶</h2><h3 id="一、作用域"><a href="#一、作用域" class="headerlink" title="一、作用域"></a>一、作用域</h3><blockquote><p>规定变量能够访问的范围</p></blockquote><h4 id="1-1-局部作用域"><a href="#1-1-局部作用域" class="headerlink" title="1.1 局部作用域"></a>1.1 局部作用域</h4><ul><li>函数作用域<ul><li>在函数内部声明的变量只能在函数内部被访问，外部无法直接访问</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 声明 counter 函数</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">counter</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">    <span class="comment">// 函数内部声明的变量</span></span><br><span class="line">    <span class="keyword">const</span> s = x + y</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(s) <span class="comment">// 18</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 设用 counter 函数</span></span><br><span class="line">  <span class="title function_">counter</span>(<span class="number">10</span>, <span class="number">8</span>)</span><br><span class="line">  <span class="comment">// 访问变量 s</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(s)<span class="comment">// 报错</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>块作用域<ul><li>在 中使用 {} 包裹的代码称为代码块，代码块内部声明的变量外部将【有可能】无法被访问。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// age 只能在该代码块中被访问</span></span><br><span class="line">    <span class="keyword">let</span> age = <span class="number">18</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">// 正常</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 超出了 age 的作用域</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(age) <span class="comment">// 报错</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> flag = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">    <span class="comment">// str 只能在该代码块中被访问</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">&#x27;hello world!&#x27;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// 正常</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 超出了 age 的作用域</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// 报错</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> t = <span class="number">1</span>; t &lt;= <span class="number">6</span>; t++) &#123;</span><br><span class="line">    <span class="comment">// t 只能在该代码块中被访问</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(t); <span class="comment">// 正常</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 超出了 t 的作用域</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(t); <span class="comment">// 报错</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>总结：</p><ol><li><code>let</code> 声明的变量会产生块作用域，<code>var</code> 不会产生块作用域</li><li><code>const</code> 声明的常量也会产生块作用域</li><li>不同代码块之间的变量无法互相访问</li><li>推荐使用 <code>let</code> 或 <code>const</code></li></ol><h4 id="1-2-全局作用域"><a href="#1-2-全局作用域" class="headerlink" title="1.2 全局作用域"></a>1.2 全局作用域</h4><blockquote><p>script 标签和 .js 文件的【最外层】就是所谓的全局作用域，在此声明的变量在函数内部也可以被访问。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 此处是全局 function sayHi()&#123;&quot; &quot;&#125;</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 此处为局部</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 此处为全局</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="1-3-作用域链"><a href="#1-3-作用域链" class="headerlink" title="1.3 作用域链"></a>1.3 作用域链</h4><blockquote><p>作用域链本质上是底层的变量查找机制。<br>在函数被执行时，我优先查找当前函数作用域中的变量，如果当前作用域查找不到，则会一次查找父级作用域直到全局作用域</p></blockquote><h4 id="1-4-垃圾回收机制简称-GC"><a href="#1-4-垃圾回收机制简称-GC" class="headerlink" title="1.4 垃圾回收机制简称 GC"></a>1.4 垃圾回收机制简称 GC</h4><p>JS 中内存的分配和回收都是自动完成的，内存在不使用的时候会被垃圾回收器自动回收。</p><h5 id="1-4-1-内存泄漏"><a href="#1-4-1-内存泄漏" class="headerlink" title="1.4.1 内存泄漏"></a>1.4.1 内存泄漏</h5><p>不在用到的内存，没有及时释放，就叫内存泄漏<br>注意</p><ul><li>全局变量一般不会回收(关闭页面回收)；</li><li>一般情况下局部变量的值, 不用了, 会被自动回收掉</li></ul><h4 id="1-5-闭包"><a href="#1-5-闭包" class="headerlink" title="1.5 闭包"></a>1.5 闭包</h4><blockquote><p>内层函数 + 外层函数的变量 &#x3D; 闭包</p><p>函数执行后返回结果是一个内部函数，并被外部变量所引用， 如果内部函数持有外层函数的变量，即形成了闭包。</p><p>面试：一个本该被销毁的变量空间，由于外部的引用，导致无法被销毁，形成闭包</p></blockquote><p><strong>闭包的特点</strong></p><ul><li>保护：防止像全局变量那样被污染，数据在函数内部，外界访问不了。（不太懂）</li><li>保存：可以像全局变量那样，延长变量的生命周期。</li><li>闭包使用不当可能会导致内存泄露</li></ul><p><img src="/2023/09/15/JavaScript/image-20230915103132748.png" alt="image-20230915103132748"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">outer</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> a = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> fn1 = <span class="title function_">outer</span>();</span><br><span class="line"><span class="title function_">fn1</span>();</span><br></pre></td></tr></table></figure><p>闭包的作用<br>封闭数据，实现数据私有，外部也可以访问函数内部的变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">count</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`函数被调用了<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fn;</span><br><span class="line">&#125;</span><br><span class="line">缺点: 导致内存泄漏(</span><br><span class="line">  如果你写了大量的闭包,</span><br><span class="line">  产生了多个独立空间但是没有及时销毁,</span><br><span class="line">  导致内存泄漏</span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> fun = <span class="title function_">count</span>();</span><br></pre></td></tr></table></figure><h4 id="1-6-变量提升"><a href="#1-6-变量提升" class="headerlink" title="1.6 变量提升"></a>1.6 变量提升</h4><p>变量提升是 中比较“奇怪”的现象，它允许在变量声明之前即被访问，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 访问变量 str console.log(str + &#x27;world!&#x27;); // 声明变量 str var str = &#x27;hello</span></span><br><span class="line">  <span class="string">&#x27;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-7-执行上下文"><a href="#1-7-执行上下文" class="headerlink" title="1.7 执行上下文"></a>1.7 执行上下文</h4><blockquote><ul><li>执行上下文就是当前 lavaScript 代码被解析和执行时存在的环境（抽象概念）。</li><li>js 引擎内部有一个执行上下文栈（Execution Context Stack，简称 ECS），它是用于执行代码的调用栈。</li><li>Execute Context Stack &#x3D;&#x3D;&#x3D;&gt; ECS</li></ul></blockquote><blockquote><p><strong>执行上下文执行流程</strong></p><p>JS 在执行代码时，肯定先执行全局代码，就会产生 ECG(全局执行上下文)&#x3D;&#x3D;注意：只要有代码就有全局执行上下文&#x3D;&#x3D;，这个 ECG 就要入栈。当我们调用一个函数，就会产生一个（局部执行上下文 EC(fn)），此时，这个局部执行上下文 EC(fn)也要入栈，当函数调用完毕后，这个 EC(fn)在堆内没有引用就要出栈（被删除）释放内存，调用其它函数又进入其他 EC</p><p>执行完毕后又，出以此类推,当全局代码执行完后，EC(G)也要出栈。</p></blockquote><blockquote><p><strong>执行上下文的作用</strong></p><h3 id="全局代码和函数代码中产生的-EC"><a href="#全局代码和函数代码中产生的-EC" class="headerlink" title="全局代码和函数代码中产生的 EC"></a>全局代码和函数代码中产生的 EC</h3><p><strong>js 引擎会在执行代码之前，会在堆内存中创建一个全局对象：Global Object（GO）</strong></p><ul><li>该对象 所有的作用域（scope）都可以访问；</li><li>里面会包含 Date、Array、String、Number、setTimeout、setInterval 等等；</li><li>其中还有一个 window 属性指向自己；说白了，GO 就是 window</li><li>只要我们写的全局变量或在全局中写的函数，都会挂载到 window 上面</li></ul></blockquote><p><img src="/2023/09/15/JavaScript/image-20230921212028835.png" alt="image-20230921212028835"></p><p>执行上下文生命周期</p><p>创建阶段————执行阶段————回收阶段</p><p><strong>ECF 中包含三部分内容：</strong></p><blockquote><p>函数调用未执行内部任何代码之前</p></blockquote><ul><li>第一部分：在解析函数成为 AST 树结构时，会创建一个 Activation Object（AO）： AO 中包含形参、arguments、函数定义和指向函数对象、定义的变量；</li><li>第二部分：作用域链：由 VO（在函数中就是 AO 对象）和父级 VO 组成，查找时会一层层查找；</li><li>第三部分：this 绑定的值：这个我们后续会详细解析；</li></ul><p><strong>ECG 被放入到 ECS 中里面包含两部分内容：</strong></p><blockquote><p>在代码执行前</p></blockquote><ul><li><p>第一部分：&#x3D;&#x3D;在代码执行前&#x3D;&#x3D;，在 parser 转成 AST 的过程中，会将全局定义的变量、函数等加入到 GlobalObject 中，但是并不会赋值；这个过程也称之为变量的作用域提升（hoisting）</p></li><li><p>第二部分：在代码执行中，对变量赋值，或者执行其他的函数；</p></li><li></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="keyword">var</span> ary = [<span class="number">12</span>, <span class="number">13</span>];</span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">oldArr</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(oldArr); <span class="comment">//12 13</span></span><br><span class="line">        oldArr[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">        oldArr = [<span class="number">100</span>];</span><br><span class="line">        oldArr[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(oldArr); <span class="comment">//0</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">fn</span>(ary);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(ary); <span class="comment">// 100 13</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230915202832879.png" alt="image-20230915202832879"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;Hello World!&#x27;</span>; <span class="comment">// 1.进入全局上下文执行环境</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">first</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Inside first function&#x27;</span>);</span><br><span class="line">  <span class="title function_">second</span>(); <span class="comment">// 3.进入 second 函数上下文执行环境；second 函数执行完成后，返回 first 函数上下文执行环境</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Again inside first function&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">second</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Inside second function&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">try</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Inside try function&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">first</span>(); <span class="comment">// 2.进入 first 函数上下文执行环境</span></span><br><span class="line"><span class="title function_">try</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Inside Global Execution Context&#x27;</span>); <span class="comment">// 4.first 函数执行完成后，返回 全局上下文执行环境；如果没有其他代码需要执行，则执行栈会把 全局执行上下文 从执行栈中弹出 pop</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 最终打印结果：</span></span><br><span class="line"><span class="comment">// Inside first function</span></span><br><span class="line"><span class="comment">// Inside second function</span></span><br><span class="line"><span class="comment">// Again inside first function</span></span><br><span class="line"><span class="comment">// Inside Global Execution Context</span></span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230915205506179.png" alt="image-20230915205506179"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func1</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Inside func1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">func2</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Inside func2&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">func1</span>()</span><br><span class="line"><span class="title function_">func2</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">初始状态：</span><br><span class="line">栈底</span><br><span class="line">----------------------------</span><br><span class="line">| 全局执行上下文 (<span class="title class_">Global</span>) |</span><br><span class="line">----------------------------</span><br><span class="line">栈顶</span><br><span class="line"></span><br><span class="line"><span class="title function_">func1</span>() 被调用：</span><br><span class="line">栈底</span><br><span class="line">----------------------------</span><br><span class="line">| 全局执行上下文 (<span class="title class_">Global</span>) |</span><br><span class="line">----------------------------</span><br><span class="line">| 函数执行上下文 (func1) |</span><br><span class="line">----------------------------</span><br><span class="line">栈顶</span><br><span class="line"></span><br><span class="line"><span class="title function_">func1</span>() 执行完毕：</span><br><span class="line">栈底</span><br><span class="line">----------------------------</span><br><span class="line">| 全局执行上下文 (<span class="title class_">Global</span>) |</span><br><span class="line">----------------------------</span><br><span class="line">栈顶</span><br><span class="line"></span><br><span class="line"><span class="title function_">func2</span>() 被调用：</span><br><span class="line">栈底</span><br><span class="line">----------------------------</span><br><span class="line">| 全局执行上下文 (<span class="title class_">Global</span>) |</span><br><span class="line">----------------------------</span><br><span class="line">| 函数执行上下文 (func2) |</span><br><span class="line">----------------------------</span><br><span class="line">栈顶</span><br><span class="line"></span><br><span class="line"><span class="title function_">func2</span>() 执行完毕：</span><br><span class="line">栈底</span><br><span class="line">----------------------------</span><br><span class="line">| 全局执行上下文 (<span class="title class_">Global</span>) |</span><br><span class="line">----------------------------</span><br><span class="line">栈顶</span><br><span class="line">程序执行完毕：</span><br><span class="line">栈底</span><br><span class="line">----------------------------</span><br><span class="line">| 全局执行上下文 (<span class="title class_">Global</span>) |</span><br><span class="line">----------------------------</span><br><span class="line">栈顶</span><br></pre></td></tr></table></figure><h4 id="1-8-this"><a href="#1-8-this" class="headerlink" title="1.8 this"></a>1.8 this</h4><blockquote><p><code>this</code>关键字是一个指向当前对象引用的特殊关键字。</p></blockquote><p><strong>分类</strong></p><ul><li>绑定一：默认绑定；</li><li>绑定二：隐式绑定；</li><li>绑定三：显示绑定；</li><li>绑定四：new 绑定；</li></ul><p>默认绑定：当一个函数独立调用时候,此时里面的 this 就是默认绑定,指向的是 window</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">//widow</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure><p>隐式绑定: 实际上就是对 对象 打点调用 打点调用对象身上的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">//obj</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  fn,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">&quot;wang&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;wc&quot;</span>,</span><br><span class="line">    <span class="attr">running</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot;在跑步&quot;</span>); <span class="comment">//wc</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">coding</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot;在写代码&quot;</span>); <span class="comment">//wc</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  obj.<span class="title function_">running</span>();</span><br><span class="line">  obj.<span class="title function_">coding</span>();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>绑定三：显示绑定；</p><blockquote><p>后面会说</p></blockquote><p>构造器</p><blockquote><p>构造器就是用来构建对象的构造函数 通过构造器（） 可以构造一个对象</p></blockquote><p><img src="/2023/09/15/JavaScript/image-20230925104316333.png" alt="image-20230925104316333"></p><p>Js 内置构造器</p><p>Number Array Boolean String Function Object</p><p>new 绑定:对于构造器来说 里面的 this 默认绑定的是 window,<code>当我们使用new的时候 里面的this指向发生了改变 指向是生成的实例化对象</code></p><p>new(运算符&#x2F;操作符做了什么事情)</p><ol><li>开辟了新的堆空间(对象)</li><li>让构造器中的 this 指向我们新的堆空间(实例化对象)</li><li>执行了构造器函数</li><li>返回了一个新的对象(返回的这个堆空间的地址,把地址给了 car1)</li></ol><p><strong>绑定优先级</strong></p><p>new 绑定 – 显示绑定 – 隐式绑定</p><h3 id="二、函数"><a href="#二、函数" class="headerlink" title="二、函数"></a>二、函数</h3><h4 id="2-1-函数提升"><a href="#2-1-函数提升" class="headerlink" title="2.1 函数提升"></a>2.1 函数提升</h4><blockquote><p>函数提升与变量提升比较类似，是指函数在声明之前即可被调用。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 调用函数 foo() // 声明函数 function foo()&#123;&quot; &quot;&#125;</span></span><br><span class="line">  &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;声明之前即被调用...&quot;</span>)&#125;</span><br><span class="line">  <span class="comment">// 不存在提升现象 bar() // 错误 var bar = function () &#123;console.log(</span></span><br><span class="line">    <span class="string">&quot;函数表达式不存在提升现象...&quot;</span></span><br><span class="line">  )&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="2-2-函数参数"><a href="#2-2-函数参数" class="headerlink" title="2.2 函数参数"></a>2.2 函数参数</h4><p>函数参数的使用细节，能够提升函数应用的灵活度。</p><h5 id="2-2-1-默认值"><a href="#2-2-1-默认值" class="headerlink" title="2.2.1 默认值"></a>2.2.1 默认值</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 设置参数默认值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params">name = <span class="string">&quot;小明&quot;</span>, age = <span class="number">18</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;p&gt;大家好，我叫<span class="subst">$&#123;name&#125;</span>，我今年<span class="subst">$&#123;age&#125;</span>岁了。&lt;/p&gt;`</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>(<span class="string">&quot;小红&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>(<span class="string">&quot;小刚&quot;</span>, <span class="number">21</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-2-2-动态参数"><a href="#2-2-2-动态参数" class="headerlink" title="2.2.2 动态参数"></a>2.2.2 动态参数</h5><p><code>arguments</code> 是函数内部内置的伪数组变量，它包含了调用函数时传入的所有实参。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 求生函数，计算所有参数的和</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(arguments)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> s = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">      s += <span class="variable language_">arguments</span>[i];</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(s);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用求和函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sum</span>(<span class="number">5</span>, <span class="number">10</span>); <span class="comment">// 两个参数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sum</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>); <span class="comment">// 两个参数</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>总结：</p><ol><li><code>arguments</code> 是一个伪数组(无法使用数组的方法)</li><li><code>arguments</code> 的作用是动态获取函数的实参</li></ol><h5 id="2-2-3-剩余参数"><a href="#2-2-3-剩余参数" class="headerlink" title="2.2.3 剩余参数"></a>2.2.3 剩余参数</h5><blockquote><p>剩余参数允许我们将一个不定数量的参数表示为一个数组</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">config</span>(<span class="params">baseURL, ...other</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(baseURL) <span class="comment">// 得到 &#x27;http://baidu.com&#x27;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(other)  <span class="comment">// other  得到 [&#x27;get&#x27;, &#x27;json&#x27;]</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 调用函数</span></span><br><span class="line">  <span class="title function_">config</span>(<span class="string">&#x27;http://baidu.com&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;json&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>总结：</p><ol><li><code>...</code> 是语法符号，置于最末函数形参之前，用于获取多余的实参</li><li>借助 <code>...</code> 获取的剩余实参，是个真数组</li></ol><h5 id="2-2-4-扩-展：展开运算符"><a href="#2-2-4-扩-展：展开运算符" class="headerlink" title="2.2.4 扩 展：展开运算符"></a>2.2.4 扩 展：展开运算符</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">const</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="comment">// 展开运算符，可以展开数组，不会修改原数组 //</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(...arr); <span class="comment">// 1.求数组最大值 // console.log(Math.max(1,2,3)); //</span></span><br><span class="line">  ...arr1 === <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(...arr1)); <span class="comment">//3 // 2.合并数组 const arr=</span></span><br><span class="line">  [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] <span class="keyword">const</span> arr = [...arr1,...arr2]</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230915103304696.png" alt="image-20230915103304696"></p><h4 id="2-3-箭头函数"><a href="#2-3-箭头函数" class="headerlink" title="2.3 箭头函数"></a>2.3 箭头函数</h4><h5 id="2-3-1-基本语法"><a href="#2-3-1-基本语法" class="headerlink" title="2.3.1 基本语法"></a>2.3.1 基本语法</h5><p>箭头函数是一种声明函数的简洁语法，它与普通函数并无本质的区别，差异性更多体现在语法格式上。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 箭头函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">foo</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;^_^ 长相奇怪的函数...&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">foo</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 更简洁的语法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;form&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  form.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">(<span class="params">ev</span>) =&gt;</span> ev.<span class="title function_">preventDefault</span>());</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>总结：</p><ol><li>箭头函数属于表达式函数，因此不存在函数提升</li><li>箭头函数只有一个参数时可以省略圆括号 <code>()</code></li><li>箭头函数函数体只有一行代码时可以省略花括号 <code>&#123;&#125;</code>，并自动做为返回值被返回</li><li>箭头函数可以直接返回一个对象 const fn &#x3D; (unname) &#x3D;&gt; ({uname:uname})</li><li>箭头函数中没有 <code>arguments</code>，只能使用 <code>...</code> 动态获取实参</li></ol><h5 id="2-3-2-箭头函数的-this"><a href="#2-3-2-箭头函数的-this" class="headerlink" title="2.3.2 箭头函数的 this"></a>2.3.2 箭头函数的 this</h5><blockquote><p>箭头函数的 this 是上一层作用域的 this 指向</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">uname</span>: <span class="string">&quot;pink老师&quot;</span>,</span><br><span class="line">  <span class="attr">sayHi</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">// obj</span></span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">count</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">// obj</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">count</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="title function_">sayHi</span>();</span><br></pre></td></tr></table></figure><h3 id="三、解构赋值"><a href="#三、解构赋值" class="headerlink" title="三、解构赋值"></a>三、解构赋值</h3><h4 id="3-1-数组解构"><a href="#3-1-数组解构" class="headerlink" title="3.1 数组解构"></a>3.1 数组解构</h4><blockquote><p>数组解构可以将数组里的元素，批量赋值给若干个变量</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">const</span> [max,min,avg] = arr; <span class="variable language_">console</span>.<span class="title function_">log</span>(max); <span class="comment">//1 let a = 1</span></span><br><span class="line">  <span class="keyword">let</span> b = <span class="number">2</span>; [b,a] = [a,b]</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230915103330212.png" alt="image-20230915103330212"><br><img src="/2023/09/15/JavaScript/image-20230915103355683.png" alt="image-20230915103355683"></p><ol><li>变量的数量大于单元值数量时，多余的变量将被赋值为？</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [a,b,c,e] = [<span class="number">1</span>,<span class="number">2</span>] <span class="literal">undefined</span></span><br></pre></td></tr></table></figure><ol start="2"><li>按需导入，忽略某些返回值：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [a,b,,e] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] e = <span class="number">4</span></span><br></pre></td></tr></table></figure><ol start="3"><li>变量的数量小于单元值数量时，可以通过什么剩余获取所有的值？</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [a,b,...tel] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]  剩余参数... 获取剩余单元值，但只能置于最末位</span><br></pre></td></tr></table></figure><ol start="4"><li>防止有 undefined 传递单元值的情况，可以设置默认值：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [a = <span class="string">&quot;手机&quot;</span>, b = <span class="string">&quot;华为&quot;</span>] = [<span class="string">&quot;小米&quot;</span>]; <span class="comment">//a = 小米 b = 华为</span></span><br></pre></td></tr></table></figure><h5 id="3-1-1-多维数组结构"><a href="#3-1-1-多维数组结构" class="headerlink" title="3.1.1 多维数组结构"></a>3.1.1 多维数组结构</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]];</span><br><span class="line"><span class="keyword">let</span> [a, b, [c, d]] = arr;</span><br></pre></td></tr></table></figure><h4 id="3-2-对象解构"><a href="#3-2-对象解构" class="headerlink" title="3.2 对象解构"></a>3.2 对象解构</h4><blockquote><p>对象解构式将对象属性和方法批量赋值给若干个变量</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//属性名与变量名要相同</span></span><br><span class="line">  <span class="comment">// const &#123; name, age &#125; = &#123; name: &quot;wyj&quot;, age: 20 &#125;;</span></span><br><span class="line">  <span class="comment">//对象解构变量名，可以重新改名  旧变量名：新变量名</span></span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="attr">name</span>: uname, age &#125; = &#123; <span class="attr">name</span>: <span class="string">&quot;wyj&quot;</span>, <span class="attr">age</span>: <span class="number">20</span> &#125;;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(uname, age);  <span class="comment">//wyj 20</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="3-2-1-数组对象解构"><a href="#3-2-1-数组对象解构" class="headerlink" title="3.2.1 数组对象解构"></a>3.2.1 数组对象解构</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pig = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">uname</span>: <span class="string">&quot;佩奇&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> [&#123; uname, age &#125;] = pig;</span><br></pre></td></tr></table></figure><h5 id="3-2-2-多级对象解构"><a href="#3-2-2-多级对象解构" class="headerlink" title="3.2.2 多级对象解构"></a>3.2.2 多级对象解构</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多级对象解构</span></span><br><span class="line"><span class="keyword">const</span> pig = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;佩奇&quot;</span>,</span><br><span class="line">  <span class="attr">family</span>: &#123;</span><br><span class="line">    <span class="attr">mother</span>: <span class="string">&quot;猪妈妈&quot;</span>,</span><br><span class="line">    <span class="attr">father</span>: <span class="string">&quot;猪爸爸&quot;</span>,</span><br><span class="line">    <span class="attr">sister</span>: <span class="string">&quot;乔治&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">6</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  name,</span><br><span class="line">  <span class="attr">family</span>: &#123; mother, father, sister &#125;,</span><br><span class="line">&#125; = pig;</span><br><span class="line"><span class="comment">//数组对象解构</span></span><br><span class="line"><span class="keyword">const</span> person = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;佩奇&quot;</span>,</span><br><span class="line">    <span class="attr">family</span>: &#123;</span><br><span class="line">      <span class="attr">mother</span>: <span class="string">&quot;猪妈妈&quot;</span>,</span><br><span class="line">      <span class="attr">father</span>: <span class="string">&quot;猪爸爸&quot;</span>,</span><br><span class="line">      <span class="attr">sister</span>: <span class="string">&quot;乔治&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">6</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> [</span><br><span class="line">  &#123;</span><br><span class="line">    name,</span><br><span class="line">    <span class="attr">family</span>: &#123; mother, father, sister &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">] = person;</span><br></pre></td></tr></table></figure><h3 id="四、深入对象"><a href="#四、深入对象" class="headerlink" title="四、深入对象"></a>四、深入对象</h3><blockquote><p>了解面向对象的基础概念，能够利用构造函数创建对象。</p></blockquote><h5 id="4-1-构造函数"><a href="#4-1-构造函数" class="headerlink" title="4.1 构造函数"></a>4.1 构造函数</h5><blockquote><p>构造函数（构造器）是专门用于创建对象的函数，如果一个函数使用 new 关键字调用，那么这个函数就是构造函数。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 定义函数,首字母要大写</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">Foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;通过 new 也能调用函数...&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 调用函数</span></span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Foo</span>();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol><li>使用 <code>new</code> 关键字调用函数的行为被称为实例化</li><li>实例化构造函数时没有参数时可以省略 <code>()</code></li><li>构造函数的返回值即为新创建的对象</li><li>构造函数内部的 <code>return</code> 返回的值无效！</li></ol><h5 id="4-1-1-实例成员"><a href="#4-1-1-实例成员" class="headerlink" title="4.1.1 实例成员"></a>4.1.1 实例成员</h5><blockquote><p>通过构造函数创建的对象称为实例对象，实例对象中的属性和方法称为实例成员（实例变量）。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 构造函数</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 构造函数内部的 this 就是实例对象</span></span><br><span class="line">    <span class="comment">// 实例对象中动态添加属性</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;小明&#x27;</span></span><br><span class="line">    <span class="comment">// 实例对象动态添加方法</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;大家好~&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 实例化，p1 是实例对象</span></span><br><span class="line">  <span class="comment">// p1 实际就是 构造函数内部的 this</span></span><br><span class="line">  <span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(p1)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(p1.<span class="property">name</span>) <span class="comment">// 访问实例属性</span></span><br><span class="line">  p1.<span class="title function_">sayHi</span>() <span class="comment">// 调用实例方法</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol><li>构造函数内部 <code>this</code> 实际上就是实例对象，为其动态添加的属性和方法即为实例成员</li><li>为构造函数传入参数，动态创建结构相同但值不同的对象</li></ol><p>注：构造函数创建的实例对象彼此独立互不影响。</p><h5 id="4-1-2-静态成员"><a href="#4-1-2-静态成员" class="headerlink" title="4.1.2 静态成员"></a>4.1.2 静态成员</h5><blockquote><p>在 中底层函数本质上也是对象类型，因此允许直接为函数动态添加属性或方法，构造函数的属性和方法被称为静态成员。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 构造函数</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">    <span class="comment">// 省略实例成员</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 静态属性</span></span><br><span class="line">  <span class="title class_">Person</span>.<span class="property">eyes</span> = <span class="number">2</span></span><br><span class="line">  <span class="title class_">Person</span>.<span class="property">arms</span> = <span class="number">2</span></span><br><span class="line">  <span class="comment">// 静态方法</span></span><br><span class="line">  <span class="title class_">Person</span>.<span class="property">walk</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;^_^人都会走路...&#x27;</span>)</span><br><span class="line">    <span class="comment">// this 指向 Person</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">eyes</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol><li>静态成员指的是添加到构造函数本身的属性和方法</li><li>一般公共特征的属性或方法静态成员设置为静态成员</li><li>静态成员方法中的 <code>this</code> 指向构造函数本身</li></ol><h3 id="五、内置构造函数"><a href="#五、内置构造函数" class="headerlink" title="五、内置构造函数"></a>五、内置构造函数</h3><blockquote><p>在 中最主要的数据类型有 6 种，分别是字符串、数值、布尔、undefined、null 和 对象，常见的对象类型数据包括数组和普通对象。其中字符串、数值、布尔、undefined、null 也被称为简单类型或基础类型，对象也被称为引用类型。<br>在 内置了一些构造函数，绝大部的数据处理都是基于这些构造函数实现的</p></blockquote><h4 id="5-1-引用类型"><a href="#5-1-引用类型" class="headerlink" title="5.1 引用类型"></a>5.1 引用类型</h4><p>Object</p><ol><li>推荐使用字面量方式声明对象，而不是 <code>Object</code> 构造函数</li><li><code>Object.assign</code> 静态方法创建新的对象(浅拷贝)</li><li><code>Object.keys</code> 静态方法获取对象中所有属性 返回一个数组</li><li><code>Object.values</code> 表态方法获取对象中所有属性值 返回一个数组</li></ol><p>Array</p><blockquote><p>内置的构造函数，用于创建数组</p></blockquote><p>forEach</p><blockquote><p>遍历数组（适合遍历数组对象） 只遍历没有返回值</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="comment">//item当前数组元素，index当前数组索引号</span></span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item, index</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>filter</p><blockquote><p>筛选数组符合条件的元素，并返回筛选之后元素的新数组</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line">   <span class="keyword">const</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>];</span><br><span class="line"><span class="comment">//item当前数组元素，index当前数组索引号</span></span><br><span class="line">   <span class="keyword">const</span> result = arr.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">item, index</span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line">     <span class="comment">// return item + 20 无效</span></span><br><span class="line">     <span class="keyword">return</span> item &gt;= <span class="number">20</span>;</span><br><span class="line">     或者 arr.<span class="title function_">filter</span>(item = &gt; item &gt;= <span class="number">20</span>)</span><br><span class="line">   &#125;);</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>map</p><blockquote><p>根据当前数组生成一个新的数组，非破坏性方法：不会影响原数组</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="keyword">let</span> result = arr.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item * <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>reduce<br>作用：reduce 返回函数累计处理的结果，经常用于求和等<br>:::info<br>基本语法：<br>arr.reduce(function(累计值，当前元素【,索引号】【,原数组】){},起始值)<br>:::<br>参数：<br>起始值可以省略，如果写就作为第一次累计的起始值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.<span class="title function_">reduce</span>(<span class="keyword">function</span> (<span class="params">prev, item</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> prev + item;</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//简写</span></span><br><span class="line"><span class="keyword">const</span> re = arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">prev, item</span>) =&gt;</span> prev + item);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(re);</span><br></pre></td></tr></table></figure><p>find</p><blockquote><p><strong>find()</strong> 方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 <a href="https://developer.mozilla.org/zh-CN/docs/Web//Reference/Global_Objects/undefined">undefined</a>。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;小米&quot;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">1999</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;华为&quot;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">3999</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> mi = arr.<span class="title function_">find</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> item.<span class="property">name</span> === <span class="string">&quot;小米&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mi);</span><br></pre></td></tr></table></figure><p>every</p><blockquote><p><strong>every()</strong> 方法测试一个数组内的所有元素是否都能通过某个指定函数的测试。它返回一个布尔值。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isBigEnough</span>(<span class="params">element, index, array</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> element &gt;= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">[<span class="number">12</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>].<span class="title function_">every</span>(isBigEnough); <span class="comment">// false</span></span><br><span class="line">[<span class="number">12</span>, <span class="number">54</span>, <span class="number">18</span>, <span class="number">130</span>, <span class="number">44</span>].<span class="title function_">every</span>(isBigEnough); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>from</p><blockquote><p>从可迭代的对象中创建一个新的数组实例</p><p>伪数组转换为真数组</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="string">&quot;foo&quot;</span>));</span><br></pre></td></tr></table></figure><p>总结：</p><ol><li>推荐使用字面量方式声明数组，而不是 <code>Array</code> 构造函数</li><li>实例方法 <code>forEach</code> 用于遍历数组，替代 <code>for</code> 循环 (重点)</li><li>实例方法 <code>filter</code> 过滤数组单元值，生成新数组(重点)</li><li>实例方法 <code>map</code> 迭代原数组，生成新数组(重点)</li><li>实例方法 <code>join</code> 数组元素拼接为字符串，返回字符串(重点)</li><li>实例方法  <code>find</code>   查找元素， 返回符合测试条件的第一个数组元素值，如果没有符合条件的则返回 undefined(重点)</li><li>实例方法<code>every</code> 检测数组所有元素是否都符合指定条件，如果<strong>所有元素</strong>都通过检测返回 true，否则返回 false(重点)</li><li>实例方法<code>some</code> 检测数组中的元素是否满足指定条件   <strong>如果数组中有</strong>元素满足条件返回 true，否则返回 false</li><li>实例方法 <code>concat</code>   合并两个数组，返回生成新数组</li><li>实例方法 <code>sort</code> 对原数组单元值排序</li><li>实例方法 <code>splice</code> 删除或替换原数组单元</li><li>实例方法 <code>reverse</code> 反转数组</li><li>实例方法 <code>findIndex</code>   查找元素的索引值</li></ol><h4 id="5-2-包装类型"><a href="#5-2-包装类型" class="headerlink" title="5.2 包装类型"></a>5.2 包装类型</h4><blockquote><p>之所以具有对象特征的原因是字符串、数值、布尔类型数据是 底层使用 Object 构造函数“包装”来的，被称为包装类型。</p></blockquote><p>String<br>split</p><blockquote><p>把字符串 转换为 数组   和 join() 相反<br>split 方法使用指定的分隔符字符串将一个<a href="https://developer.mozilla.org/zh-CN/docs/Web//Reference/Global_Objects/String">String</a>对象分割成子字符串数组，以一个指定的分割字串来决定每个拆分的位置。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&quot;2022-12-18&quot;</span>;</span><br><span class="line">str.<span class="title function_">split</span>(<span class="string">&quot;-&quot;</span>); <span class="comment">//[&#x27;2022&#x27;,&#x27;12&#x27;,&#x27;18&#x27;]</span></span><br></pre></td></tr></table></figure><p>substring</p><blockquote><p><strong>substring()</strong> 方法返回一个字符串在开始索引到结束索引之间的一个子集，或从开始索引直到字符串的末尾的一个子集。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">substring</span>(开始的索引号[,结束的索引号])</span><br><span class="line"><span class="keyword">const</span> str = <span class="string">&#x27;今天又要做核酸了&#x27;</span></span><br><span class="line"><span class="keyword">const</span> str = <span class="string">&quot;今天又要做核酸了&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> a =str.<span class="title function_">substring</span>(<span class="number">5</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);  <span class="comment">//核酸了</span></span><br></pre></td></tr></table></figure><p>startsWith()</p><blockquote><p>检查字符串是否以某个字符开头</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;To be, or not to be, that is the question.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(str.<span class="title function_">startsWith</span>(<span class="string">&quot;To be&quot;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="title function_">alert</span>(str.<span class="title function_">startsWith</span>(<span class="string">&quot;not to be&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="title function_">alert</span>(str.<span class="title function_">startsWith</span>(<span class="string">&quot;not to be&quot;</span>, <span class="number">10</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>includes</p><blockquote><p>判断一个字符串是否包含在另一个字符串中</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&quot;To be, or not to be, that is the question.&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&quot;To be&quot;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&quot;question&quot;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&quot;nonexistent&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&quot;To be&quot;</span>, <span class="number">1</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&quot;TO BE&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&quot;&quot;</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><ol><li>实例属性 <code>length</code> 用来获取字符串的度长(重点)</li><li>实例方法 <code>split(&#39;分隔符&#39;)</code> 用来将字符串拆分成数组(重点)</li><li>实例方法 <code>substring（需要截取的第一个字符的索引[,结束的索引号]）</code> 用于字符串截取(重点)</li><li>实例方法 <code>startsWith(检测字符串[, 检测位置索引号])</code> 检测是否以某字符开头(重点)</li><li>实例方法 <code>includes(搜索的字符串[, 检测位置索引号])</code> 判断一个字符串是否包含在另一个字符串中，根据情况返回 true 或 false(重点)</li><li>实例方法 <code>toUpperCase</code> 用于将字母转换成大写</li><li>实例方法 <code>toLowerCase</code> 用于将就转换成小写</li><li>实例方法 <code>indexOf</code>   检测是否包含某字符</li><li>实例方法 <code>endsWith</code> 检测是否以某字符结尾</li><li>实例方法 <code>replace</code> 用于替换字符串，支持正则匹配</li><li>实例方法 <code>match</code> 用于查找字符串，支持正则匹配</li></ol><p>Number<br>toFixed</p><blockquote><p>保留小数位的长度</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> num = <span class="number">10.923</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num.<span class="title function_">toFixed</span>(<span class="number">1</span>));</span><br><span class="line"><span class="keyword">const</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num.<span class="title function_">toFixed</span>(<span class="number">2</span>)); <span class="comment">//10.00</span></span><br></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title></a></h3><h3 id="六、函数式编程"><a href="#六、函数式编程" class="headerlink" title="六、函数式编程"></a>六、函数式编程</h3><blockquote><p>JS 支持两种编程方式，分别是函数式编程和面向对象编程。</p></blockquote><p>面向对象编程是一种程序设计思想，它具有 3 个显著的特征：封装、继承、多态。</p><h5 id="6-1-封装"><a href="#6-1-封装" class="headerlink" title="6.1 封装"></a>6.1 封装</h5><p>封装的本质是将具有关联的代码组合在一起，其优势是能够保证代码复用且易于维护，函数是最典型也是最基础的代码封装形式，面向对象思想中的封装仍以函数为基础，但提供了更高级的封装形式。</p><ol><li>命名空间</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 普通对象（命名空间）形式的封装</span></span><br><span class="line">  <span class="keyword">let</span> beats = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;狼&#x27;</span>,</span><br><span class="line">    <span class="attr">setName</span>: <span class="keyword">function</span> (<span class="params">name</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">name</span> = <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  beats.<span class="title function_">setName</span>(<span class="string">&#x27;熊&#x27;</span>);</span><br><span class="line">  beats.<span class="title function_">getName</span>();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>构造函数</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 构造函数  公共的属性和方法 封装到 Star 构造函数里面了</span></span><br><span class="line">  <span class="comment">// 1.公共的属性写到 构造函数里面</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">Star</span>(<span class="params">uname, age</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">uname</span> = uname</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age</span><br><span class="line">    <span class="comment">// this.sing = function () &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(&#x27;唱歌&#x27;)</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 2. 公共的方法写到原型对象身上   节约了内存</span></span><br><span class="line">  <span class="title class_">Star</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sing</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;唱歌&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> ldh = <span class="keyword">new</span> <span class="title class_">Star</span>(<span class="string">&#x27;刘德华&#x27;</span>, <span class="number">55</span>)</span><br><span class="line">  <span class="keyword">const</span> zxy = <span class="keyword">new</span> <span class="title class_">Star</span>(<span class="string">&#x27;张学友&#x27;</span>, <span class="number">58</span>)</span><br><span class="line">  ldh.<span class="title function_">sing</span>() <span class="comment">//调用</span></span><br><span class="line">  zxy.<span class="title function_">sing</span>() <span class="comment">//调用</span></span><br><span class="line">  <span class="comment">// console.log(ldh === zxy)  // false</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ldh.<span class="property">sing</span> === zxy.<span class="property">sing</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// console.dir(Star.prototype)</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>总结：</p><ol><li><p>构造函数体现了面向对象的封装特性</p></li><li><p>构造函数实例创建的对象彼此独立、互不影响</p></li><li><p>构造函数存在浪费内存的问题</p></li><li><p>命名空间式的封装无法保证数据的独立性</p></li><li><p>原型对象</p></li></ol><ul><li>构造函数通过原型分配的函数是所有对象所 共享的。</li><li>规定，每一个构造函数都有一个 prototype 属性，指向另一个对象，所以我们也称为原型对象</li><li>这个对象可以挂载函数，对象实例化不会多次创建原型上函数，节约内存</li><li>我们可以把那些不变的方法，直接定义在 prototype 对象上，这样所有对象的实例就可以共享这些方法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 自己定义 数组扩展方法  求和 和 最大值</span></span><br><span class="line">  <span class="comment">// 1. 我们定义的这个方法，任何一个数组实例对象都可以使用</span></span><br><span class="line">  <span class="comment">// 2. 自定义的方法写到  数组.prototype 身上</span></span><br><span class="line">  <span class="comment">// 1. 最大值</span></span><br><span class="line">  <span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">  <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">max</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 展开运算符</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(...<span class="variable language_">this</span>)</span><br><span class="line">    <span class="comment">// 原型函数里面的this 指向谁？ 实例对象 arr</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 2. 最小值</span></span><br><span class="line">  <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">min</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 展开运算符</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">min</span>(...<span class="variable language_">this</span>)</span><br><span class="line">    <span class="comment">// 原型函数里面的this 指向谁？ 实例对象 arr</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">max</span>())</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>].<span class="title function_">max</span>())</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">min</span>())</span><br><span class="line">  <span class="comment">// const arr = new Array(1, 2)</span></span><br><span class="line">  <span class="comment">// console.log(arr)</span></span><br><span class="line">  <span class="comment">// 3. 求和 方法</span></span><br><span class="line">  <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sum</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">prev, item</span>) =&gt;</span> prev + item, <span class="number">0</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">sum</span>())</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">11</span>, <span class="number">21</span>, <span class="number">31</span>].<span class="title function_">sum</span>())</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="6-2-constructor-属性"><a href="#6-2-constructor-属性" class="headerlink" title="6.2 constructor 属性"></a>6.2 constructor 属性</h5><blockquote><p>每个原型对象里面都有个 constructor 属性（constructor 构造函数）</p></blockquote><p>作用<br>该属性指向该原型对象的构造函数， 简单理解，就是指向我的爸爸，我是有爸爸的孩子<br><img src="/2023/09/15/JavaScript/image-20230915103418934.png" alt="image-20230915103418934"><br>使用场景：<br>如果有多个对象的方法，我们可以给原型对象采取对象形式赋值.<br>但是这样就会覆盖构造函数原型对象原来的内容，这样修改后的原型对象 constructor 就不再指向当前构造函数了 此时，我们可以在修改后的原型对象中，添加一个 constructor 指向原来的构造函数。<br><img src="/2023/09/15/JavaScript/image-20230915103436510.png" alt="image-20230915103436510"></p><h5 id="6-3-对象原型"><a href="#6-3-对象原型" class="headerlink" title="6.3 对象原型"></a>6.3 对象原型</h5><blockquote><p>对象都会有一个属性 <strong>proto</strong> 指向构造函数的 prototype 原型对象，之所以我们对象可以使用构造函数 prototype 原型对象的属性和方法，就是因为对象有 <strong>proto</strong></p></blockquote><p>注意：</p><ul><li><strong>proto</strong> 是 JS 非标准属性</li><li>[[prototype]]和<strong>proto</strong>意义相同</li><li>用来表明当前实例对象指向哪个原型对象 prototype</li><li><strong>proto</strong>对象原型里面也有一个 constructor 属性，指向创建该实例对象的构造函数</li></ul><p><img src="/2023/09/15/JavaScript/image-20230915103538727.png" alt="image-20230915103538727"></p><h5 id="6-4-继承"><a href="#6-4-继承" class="headerlink" title="6.4 继承"></a>6.4 继承</h5><p><strong>原型继承</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">Father</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Father</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">say</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;say..&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">Son</span>(<span class="params">name, age, className</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">className</span> = className</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 需求:想让子类继承父类 起始就是拿到父类身上的方法</span></span><br><span class="line">    <span class="comment">// 原型继承  对于私有属性来说 没什么意义</span></span><br><span class="line">    <span class="comment">//           对于公有属性来说 可以继承</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 核心代码</span></span><br><span class="line">    <span class="title class_">Son</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Father</span>()  <span class="comment">//修改Son的原型对象指向</span></span><br><span class="line">    <span class="title class_">Son</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Son</span></span><br><span class="line">    <span class="keyword">let</span> son1 = <span class="keyword">new</span> <span class="title class_">Son</span>(<span class="string">&#x27;张三&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;高三&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(son1);</span><br><span class="line">    son1.<span class="title function_">say</span>()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>如果父中的数据类型是引用数据类型，子对象修改了，另一个子对象也会受影响</li><li>创建 Child 对象是，不能传参</li></ul><p><strong>继承之组合继承</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组合继承: 两种技术的组合, 原型链技术, 借用构造函数(call)结合, 发挥二者之长, 实现继承的方式</span></span><br><span class="line"><span class="comment">// 1. 原型链技术: 改造原型链, 实现继承方法</span></span><br><span class="line"><span class="comment">//    Student.prototype = new Person()</span></span><br><span class="line"><span class="comment">// 2. 实例属性的构造过程没有得到复用, 可以用借用构造函数的方式, 实现复用</span></span><br><span class="line"><span class="comment">//    Person.call(this, name, age)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;会说话&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">name, age, className</span>) &#123;</span><br><span class="line">  <span class="comment">// 不仅要执行Person构造函数, 且要让执行构造函数时的this指向创建出来的实例stu</span></span><br><span class="line">  <span class="comment">// call</span></span><br><span class="line">  <span class="comment">// 1. 调用函数</span></span><br><span class="line">  <span class="comment">// 2. 改变函数执行时的this指向</span></span><br><span class="line">  <span class="title class_">Person</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, name, age);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">className</span> = className;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stu = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;zs&quot;</span>, <span class="number">7</span>, <span class="string">&quot;一年级一班&quot;</span>);</span><br><span class="line">stu.<span class="title function_">sayHi</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stu);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法通过 原型继承</span></span><br><span class="line"><span class="comment">// 属性通过 父构造函数的.call(this, name, age)</span></span><br></pre></td></tr></table></figure><p><strong>Object.create</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="comment">// Object 是一个内置构造器</span></span><br><span class="line">       <span class="comment">// 有一个方法 create</span></span><br><span class="line">       <span class="comment">// Object.create</span></span><br><span class="line">       <span class="comment">// 作用:创建一个对象,并且可以指定对象的原型对象</span></span><br><span class="line">       <span class="comment">// 不需要再使用构造器了</span></span><br><span class="line">       <span class="keyword">let</span> obj = &#123;</span><br><span class="line">           <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 想把谁当成原型对象,在参数里面就写谁</span></span><br><span class="line">       <span class="keyword">let</span> res = <span class="title class_">Object</span>.<span class="title function_">create</span>(obj)</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">       <span class="comment">// 你也可以定义一个没有原型对象的对象</span></span><br><span class="line">       <span class="comment">// 原型对象和对象本身就已经没关系了 衍生出了寄生继承</span></span><br><span class="line">       <span class="keyword">let</span> res2 = <span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="literal">null</span>)</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(res2)</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="6-5-原型链"><a href="#6-5-原型链" class="headerlink" title="6.5 原型链"></a>6.5 原型链</h5><p>① 当访问一个对象的属性（包括方法）时，首先查找这个对象自身有没有该属性。<br>② 如果没有就查找它的原型（也就是 <strong>proto</strong>指向的 prototype 原型对象）<br>③ 如果还没有就查找原型对象的原型（Object 的原型对象）<br>④ 依此类推一直找到 Object 为止（null）<br>⑤ <strong>proto</strong>对象原型的意义就在于为对象成员查找机制提供一个方向，或者说一条路线<br>⑥ 可以使用 instanceof 运算符用于检测构造函数 prototype 属性是否出现在某个实例对象的原型链上<br><img src="/2023/09/15/JavaScript/image-20230915103552684.png" alt="image-20230915103552684"></p><p>练习题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">Fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">a</span> = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Fn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">say</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">a</span> = <span class="number">2</span>;</span><br><span class="line">        <span class="comment">//say()没有调用所以没有this</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Fn</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Fn</span>();  <span class="comment">//改变了</span></span><br><span class="line">    <span class="keyword">let</span> f1 = <span class="keyword">new</span> <span class="title class_">Fn</span>();</span><br><span class="line">    <span class="title class_">Fn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">b</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">a</span> = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(f1.<span class="property">a</span>)</span><br><span class="line">    f1.<span class="title function_">say</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(f1.<span class="property">a</span>)</span><br><span class="line">    f1.<span class="title function_">b</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(f1.<span class="property">a</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230920223003569.png" alt="image-20230920223003569"></p><h5 id="6-6-深浅拷贝"><a href="#6-6-深浅拷贝" class="headerlink" title="6.6 深浅拷贝"></a>6.6 深浅拷贝</h5><p>开发中我们经常需要复制一个对象。如果直接用赋值会有下面问题：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">uname</span>: <span class="string">&#x27;pink&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> o = obj</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(o)</span><br><span class="line">  o.<span class="property">age</span> = <span class="number">20</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(o)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230915103603918.png" alt="image-20230915103603918"></p><h6 id="6-6-1-浅拷贝"><a href="#6-6-1-浅拷贝" class="headerlink" title="6.6.1 浅拷贝"></a>6.6.1 浅拷贝</h6><blockquote><p>拷贝的是地址</p></blockquote><p><img src="/2023/09/15/JavaScript/image-20230915103657398.png" alt="image-20230915103657398"></p><h6 id="6-6-2-深拷贝"><a href="#6-6-2-深拷贝" class="headerlink" title="6.6.2 深拷贝"></a>6.6.2 深拷贝</h6><blockquote><p>拷贝的是对象，不是地址</p></blockquote><p>常用方法<br>通过递归实现深拷贝</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="keyword">let</span> obj = &#123;</span><br><span class="line">        <span class="attr">uname</span>: <span class="string">&quot;wyj&quot;</span>,</span><br><span class="line">        <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="attr">hobby</span>: [<span class="string">&quot;乒乓球&quot;</span>, <span class="string">&quot;足球&quot;</span>],</span><br><span class="line">        <span class="attr">family</span>: &#123;</span><br><span class="line">          <span class="attr">baby</span>: <span class="string">&quot;yyx&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> o = &#123;&#125;;</span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">deepCopy</span>(<span class="params">newObj, oldObj</span>) &#123;</span><br><span class="line">        <span class="comment">// 遍历旧的对象  注意:for ... in 也可以遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> oldObj) &#123;</span><br><span class="line">          <span class="comment">// 如果对象里有引用数据类型则进入判断</span></span><br><span class="line">          <span class="comment">// 处理数组问题，一定要先写数组，在写 对象</span></span><br><span class="line">          <span class="keyword">if</span> (oldObj[k] <span class="keyword">instanceof</span> <span class="title class_">Array</span>) &#123;</span><br><span class="line">            <span class="comment">// o  = &#123;hobby:[]&#125;</span></span><br><span class="line">            newObj[k] = [];</span><br><span class="line">            <span class="comment">// deepCopy([],[&quot;乒乓球&quot;, &quot;足球&quot;])</span></span><br><span class="line">            <span class="title function_">deepCopy</span>(newObj[k], oldObj[k]);</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (oldObj[k] <span class="keyword">instanceof</span> <span class="title class_">Object</span>) &#123;</span><br><span class="line">            newObj[k] = &#123;&#125;;</span><br><span class="line">            <span class="title function_">deepCopy</span>(newObj[k], oldObj[k]);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 将旧的值赋值给新的值  相当于 o.uname = &#x27;wyj&#x27;</span></span><br><span class="line">            newObj[k] = oldObj[k];</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(newObj[k]);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">deepCopy</span>(o, obj);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>利用 lodash 实现深拷贝</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先引入</span></span><br><span class="line"><span class="keyword">let</span> o = &#123;&#125;;</span><br><span class="line">o = _.<span class="title function_">cloneDeep</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj === o); <span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>利用 JSON 实现深拷贝</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">o = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">o.<span class="property">family</span>.<span class="property">baby</span> = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o);</span><br></pre></td></tr></table></figure><h5 id="6-7-异常处理"><a href="#6-7-异常处理" class="headerlink" title="6.7 异常处理"></a>6.7 异常处理</h5><blockquote><p>了解 中程序异常处理的方法，提升代码运行的健壮性。</p></blockquote><h6 id="6-7-1throw-抛异常"><a href="#6-7-1throw-抛异常" class="headerlink" title="6.7.1throw 抛异常"></a>6.7.1throw 抛异常</h6><p>异常处理是指预估代码执行过程中可能发生的错误，然后最大程度的避免错误的发生导致整个程序无法继续运行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">counter</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (!x || !y) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// throw &#x27;参数不能为空!&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// new Error  可以让错误更加精确</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;参数不能为空!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> x + y;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">counter</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>总结：</p><ol><li><code>throw</code> 抛出异常信息，程序也会终止执行</li><li><code>throw</code> 后面跟的是错误提示信息</li><li><code>Error</code> 对象配合 <code>throw</code> 使用，能够设置更详细的错误信息</li></ol><h6 id="6-7-2-try-…catch"><a href="#6-7-2-try-…catch" class="headerlink" title="6.7.2 try …catch"></a>6.7.2 try …catch</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 查找 DOM 节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.p&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      p.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// try 代码段中执行有错误时，会执行 catch 代码段</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 查看错误信息</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">message</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 终止代码继续执行</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">finally</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">alert</span>(<span class="string">&quot;执行&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;如果出现错误，我的语句不会执行&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">foo</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>总结：</p><ol><li><code>try...catch</code> 用于捕获错误信息</li><li>将预估可能发生错误的代码写在 <code>try</code> 代码段中</li><li>如果 <code>try</code> 代码段中出现错误后，会执行 <code>catch</code> 代码段，并截获到错误信息</li><li>finally 在 try 语句块之后执行的语句块。无论是否有异常抛出或捕获这些语句都将执行。</li></ol><h6 id="6-7-3-debugger"><a href="#6-7-3-debugger" class="headerlink" title="6.7.3 debugger"></a>6.7.3 debugger</h6><blockquote><p>在代码中书写 debugger 相当于在控制台里打个断点</p></blockquote><h5 id="6-8-this-指向"><a href="#6-8-this-指向" class="headerlink" title="6.8 this 指向"></a>6.8 this 指向</h5><h6 id="6-8-1-普通函数-this"><a href="#6-8-1-普通函数-this" class="headerlink" title="6.8.1 普通函数 this"></a>6.8.1 普通函数 this</h6><blockquote><p>谁调用 this 值就指向谁</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 函数表达式</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> sayHello = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 函数的调用方式决定了 this 的值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>() <span class="comment">// window</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="title function_">sayHi</span>()</span></span><br></pre></td></tr></table></figure><p>注： 普通函数没有明确调用者时 this 值为 window，严格模式下没有调用者时 this 的值为 undefined。</p><h6 id="6-8-2-箭头函数-this"><a href="#6-8-2-箭头函数-this" class="headerlink" title="6.8.2 箭头函数 this"></a>6.8.2 箭头函数 this</h6><blockquote><p>箭头函数中并不存在 this ！箭头函数中访问的 this 不过是箭头函数所在作用域的 this 。</p></blockquote><p>在开发中【使用箭头函数前需要考虑函数中 <code>this</code> 的值】，<strong>事件回调函数</strong>使用箭头函数时，<code>this</code> 为全局的 <code>window</code>，因此 DOM 事件回调函数不推荐使用箭头函数，如下代码所示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// DOM 节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.btn&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 箭头函数 此时 this 指向了 window</span></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通函数 此时 this 指向了 DOM 对象</span></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同样由于箭头函数 <code>this</code> 的原因，<strong>基于原型的面向对象也不推荐采用箭头函数</strong>，如下代码所示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 原型对像上添加了箭头函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">walk</span> = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;人都要走路...&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">// window</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//原型中this 要指向 实例本身</span></span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>();</span></span><br><span class="line"><span class="language-javascript">  p1.<span class="title function_">walk</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>总结：</p><ol><li>函数内不存在 this，沿用上一级的，过程：向外层作用域中，一层<br>一层查找 this，直到有 this 的定义</li><li>不适用<br>构造函数，原型函数，字面量对象中函数，dom 事件函数</li><li>适用<br>需要使用上层 this 的地方</li></ol><h5 id="6-9-this-改变"><a href="#6-9-this-改变" class="headerlink" title="6.9 this 改变"></a>6.9 this 改变</h5><blockquote><p>以上归纳了普通函数和箭头函数中关于 this 默认值的情形，不仅如此 中还允许指定函数中 this 的指向，有 3 个方法可以动态指定普通函数中 this 的指向：</p></blockquote><h6 id="6-9-1-call-了解"><a href="#6-9-1-call-了解" class="headerlink" title="6.9.1 call() 了解"></a>6.9.1 call() 了解</h6><blockquote><p>使用 call 方法调用函数，同时指定函数中 this 的值，使用方法如下代码所示：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">uname</span>: <span class="string">&quot;pink&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">// window</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 改变 this 指向</span></span></span><br><span class="line"><span class="language-javascript">  fn.<span class="title function_">call</span>(obj, <span class="number">1</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>总结：</p><ol><li><code>call</code> 方法能够在调用函数的同时指定 <code>this</code> 的值</li><li>使用 <code>call</code> 方法调用函数时，第 1 个参数为 <code>this</code> 指定的值</li><li><code>call</code> 方法的其余参数会依次自动传入函数做为函数的参数</li></ol><h6 id="6-9-2-apply"><a href="#6-9-2-apply" class="headerlink" title="6.9.2 apply()"></a>6.9.2 apply()</h6><blockquote><p>使用 call 方法调用函数，同时指定函数中 this 的值，使用方法如下代码所示：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">//&#123;age: 18&#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1.调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2.改变this指向</span></span></span><br><span class="line"><span class="language-javascript">  fn.<span class="title function_">apply</span>(obj, [<span class="number">1</span>, <span class="number">2</span>]);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 3.返回值  本身就是在调用函数，所以返回值就是函数的返回值</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 使用场景： 求数组最大值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> arr = [<span class="number">100</span>, <span class="number">44</span>, <span class="number">77</span>];</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> max = <span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="title class_">Math</span>, arr);</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Math</span>.<span class="title function_">max</span>(...arr);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>总结：</p><ol><li><code>apply</code> 方法能够在调用函数的同时指定 <code>this</code> 的值</li><li>使用 <code>apply</code> 方法调用函数时，第 1 个参数为 <code>this</code> 指定的值</li><li><code>apply</code> 方法第 2 个参数为数组，数组的单元值依次自动传入函数做为函数的参数</li></ol><h6 id="6-9-3-bind-重点"><a href="#6-9-3-bind-重点" class="headerlink" title="6.9.3 bind() 重点"></a>6.9.3 bind() 重点</h6><blockquote><p>bind 方法并不会调用函数，而是创建一个指定了 this 值的新函数，使用方法如下代码所示：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. bind 不会调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 能改变this指向</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 3. 返回值是个函数， 但是这个函数里面的this是更改过的指向obj</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> fun = fn.<span class="title function_">bind</span>(obj); <span class="comment">//返回函数</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>场景：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 需求，有一个按钮，点击里面就禁用，2秒钟之后开启</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 禁用按钮</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">disabled</span> = <span class="literal">true</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 在这个普通函数里面，我们要this由原来的window 改为 btn</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">disabled</span> = <span class="literal">false</span></span><br><span class="line">    &#125;.<span class="title function_">bind</span>(<span class="variable language_">this</span>), <span class="number">2000</span>)   <span class="comment">// 这里的this 和 btn 一样</span></span><br><span class="line">  &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>总结:</p><ol><li><pre><code>    bind 不会调用函数</code></pre></li><li><pre><code>    能改变this指向</code></pre></li><li><pre><code>    返回值是个函数， 但是这个函数里面的this是更改过的指向obj</code></pre></li></ol><h6 id="6-9-4-call-apply-bind-总结"><a href="#6-9-4-call-apply-bind-总结" class="headerlink" title="6.9.4 call() apply() bind() 总结"></a>6.9.4 call() apply() bind() 总结</h6><p>相同点:<br>都可以改变函数内部的 this 指向.<br>区别点:</p><ol><li>call 和 apply 会调用函数, 并且改变函数内部 this 指向.</li><li>call 和 apply 传递的参数不一样, call 传递参数 aru1, aru2..形式 apply 必须数组形式[arg]</li><li>bind 不会调用函数, 可以改变函数内部 this 指向.</li></ol><p>主要应用场景:</p><ul><li>call 调用函数并且可以传递参数</li><li>apply 经常跟数组有关系. 比如借助于数学对象实现数组最大值最小值</li><li>bind 不调用函数,但是还想改变 this 指向. 比如改变定时器内部的 this 指向.</li></ul><h3 id="七、面向对象编程"><a href="#七、面向对象编程" class="headerlink" title="七、面向对象编程"></a><strong>七、面向对象编程</strong></h3><p>代码演示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">class</span> <span class="title class_">School</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        a = <span class="number">2</span>; <span class="comment">//实例变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        b = <span class="number">3</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 特殊的方法constructor,当你new这个类时，这个方法会自动执行，在这个方法，可以做一些初始化</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">constructor</span>(<span class="params">name, address</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">name</span> = name; <span class="comment">//将传递的参数赋值给实例变量   console.log(School.msg()); console.log(School.a);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">address</span> = address;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//实例方法，不能通过类名访问实例方法。例如：</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">msg</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`我的学校名：<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>,学校地址为：<span class="subst">$&#123;<span class="variable language_">this</span>.address&#125;</span>`</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> school = <span class="keyword">new</span> <span class="title class_">School</span>(<span class="string">&quot;野鸡大学&quot;</span>, <span class="string">&quot;安徽合肥&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-1-三大特性"><a href="#7-1-三大特性" class="headerlink" title="7.1 三大特性"></a>7.1 三大特性</h4><h5 id="1-封装"><a href="#1-封装" class="headerlink" title="1.封装"></a>1.封装</h5><blockquote><p>在面向对象编程中，封装（Encapsulation）是一种编程范式，它指的是将一个类的属性和方法封装在一起，使得外部无法直接访问类的属性和方法。这有助于保护类的私有属性和方法，提高代码的可维护性和可扩展性。</p></blockquote><h5 id="2-继承"><a href="#2-继承" class="headerlink" title="2.继承"></a>2.继承</h5><blockquote><p>子类可以继承父类中的实例方法和实例变量，这里的继承并不是 copy，父类的实例变量和实例方法还是父类的，子仅仅是继承了而已。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        name = <span class="number">12</span>; <span class="comment">//实例变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">20</span>; <span class="comment">//实例变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Base.f1&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">class</span> <span class="title class_">Foo</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Base</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">f2</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;before&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="title function_">f1</span>(); <span class="comment">//自生没有f1实例方法，调用父类的实例方法</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Foo.f2&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> obj = <span class="keyword">new</span> <span class="title class_">Foo</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      obj.<span class="title function_">f1</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      obj.<span class="title function_">f2</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>); <span class="comment">//继承父类的实例变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">age</span>); <span class="comment">//继承父类的实例变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>当一个对象打点一个方法时，优先去当前对象所关联的那个类中找，没有的话，才去她的父类中找。</li><li>this 是谁，只能你去 new 一个对象时，才能确定 this 是谁。</li></ul><h5 id="3-多态"><a href="#3-多态" class="headerlink" title="3.多态"></a>3.多态</h5><blockquote><p>多态，从字面翻译就是多种形态，在 JS 和 Python 中的多态和 JAVA 中的多态不太一样，或者说，JS 和 Python 天生支持多态。先写一下 JAVA 中的多态，如下：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.malu;</span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">void</span>  <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃鱼&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;吃骨头&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Cat</span> <span class="variable">cat1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        show(cat1);</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">dog1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        show(dog1);</span><br><span class="line">        <span class="comment">//注意JAVA对于参数的类型有限制，类的类型同样有限制，</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(Animal a)</span>&#123;  <span class="comment">//如果参数是 Cat类，传入Dog类就会报错，但是传递父类就不会，形成包裹关系</span></span><br><span class="line">        a.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230927202126872.png" alt="image-20230927202126872"></p><p>在 JAVA 或其它语言中多态是基于：接口或抽象类和抽象方法来实现的，让数据可以以多种形式存在。在 JS 和 Python 中，由于没有对数据类型有限制，也就是说 JS 和 Python 是弱数据类型语言，所以它天生支持多态。如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">move</span>(<span class="params">distance</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> moved <span class="subst">$&#123;distance&#125;</span> meters.`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(name);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">move</span>(<span class="params">distance</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Dog.move&quot;</span>);</span><br><span class="line">    <span class="variable language_">super</span>.<span class="title function_">move</span>(distance);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(name);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">move</span>(<span class="params">distance</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Cat.move&quot;</span>);</span><br><span class="line">    <span class="variable language_">super</span>.<span class="title function_">move</span>(distance);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&quot;Buddy&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> cat = <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;Whiskers&quot;</span>);</span><br><span class="line">dog.<span class="title function_">move</span>(<span class="number">10</span>); <span class="comment">// 输出: Dog.move, Buddy moved 10 meters.</span></span><br><span class="line">cat.<span class="title function_">move</span>(<span class="number">5</span>); <span class="comment">// 输出: Cat.move, Whiskers moved 5 meters.</span></span><br></pre></td></tr></table></figure><p>在程序设计中，有一个概念，叫鸭子类型。在鸭子类型中，关注点在于对象的行为，能作什么；而不是关注对象所属的类型，例如：一只鸟走起来像鸭子、游泳起来像鸭子、叫起来也像鸭子，那么这只鸟可以被称为鸭子。</p><p>总结：</p><ul><li>封装：将数据和操作数据的方法封装到一个类（对象）中，方便后面使用。</li><li>继承：将类中的公共方法提取到基类中，子类去继承这个基类。</li><li>多态：JS 和 Python 天生支持多态（这种方式叫鸭子类型）</li></ul><h4 id="7-2-成员"><a href="#7-2-成员" class="headerlink" title="7.2 成员"></a>7.2 成员</h4><blockquote><p>什么是封装？把数据和操作数据的方法封装到一个类中（对象）。数据和方法对于类来说，都是它的成员。这些成员又分：</p><ul><li>实例变量</li><li>静态变量</li><li>实例方法</li><li>静态方法</li></ul></blockquote><h5 id="1-实例变量"><a href="#1-实例变量" class="headerlink" title="1.实例变量"></a>1.实例变量</h5><blockquote><p>不属于类的变量，它是属于某个对象的。如 new School 属于这个对象的</p></blockquote><p><img src="/2023/09/15/JavaScript/image-20230927203917246.png" alt="image-20230927203917246"></p><h5 id="2-静态变量"><a href="#2-静态变量" class="headerlink" title="2.静态变量"></a>2.静态变量</h5><blockquote><p>静态变量属于类的，只能通过类名进行访问</p></blockquote><p><img src="/2023/09/15/JavaScript/image-20230927204659668.png" alt="image-20230927204659668"></p><h5 id="3-实例方法"><a href="#3-实例方法" class="headerlink" title="3.实例方法"></a>3.实例方法</h5><p>实例方法，只能通过对象来调用，在 Python 中，实例方法也可以通过类进行调用。在 JS，JAVA，C#中，实例方法只能通过对象来调用，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">class</span> <span class="title class_">School</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">static</span> country = <span class="string">&quot;中国&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">constructor</span>(<span class="params">name, age</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">name</span> = name;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">age</span> = age;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">show</span>(<span class="params"></span>) &#123;  <span class="comment">//实例方法，他是处于对象的原型中</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> msg1 = <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> - <span class="subst">$&#123;<span class="variable language_">this</span>.age&#125;</span> - <span class="subst">$&#123;<span class="variable language_">this</span>.country&#125;</span>`</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> msg2 = <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> - <span class="subst">$&#123;<span class="variable language_">this</span>.age&#125;</span> - <span class="subst">$&#123;School.country&#125;</span>`</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(msg1);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(msg2);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> obj1 = <span class="keyword">new</span> <span class="title class_">School</span>(<span class="string">&quot;yj&quot;</span>, <span class="number">11</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      obj1.<span class="title function_">show</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230927205105981.png" alt="image-20230927205105981"></p><h5 id="4-静态方法"><a href="#4-静态方法" class="headerlink" title="4.静态方法"></a>4.静态方法</h5><blockquote><p>静态方法是通过类进行调用，不能通过对象调用</p></blockquote><p><img src="/2023/09/15/JavaScript/image-20230927210949878.png" alt="image-20230927210949878"></p><h4 id="7-3-公有与私有"><a href="#7-3-公有与私有" class="headerlink" title="7.3 公有与私有"></a>7.3 公有与私有</h4><p>JS 中的成员修饰符就是指：公有和私有。</p><ul><li>公有，在任何地方都可以调用这个成员。</li><li>私有，只有在类的内部才可以调用改成员（声明#变量。成员是以#开头，则表示该成员为私有）。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        #name;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">constructor</span>(<span class="params">name, age</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.#name = name;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">age</span> = age;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">show</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> msg = <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.#name&#125;</span> - <span class="subst">$&#123;<span class="variable language_">this</span>.age&#125;</span>`</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(msg);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;wc&quot;</span>, <span class="number">10</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      p1.<span class="title function_">show</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 只能在类的内部使用</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// console.log(Person.#name); //报错</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// console.log(p1.#name); //报错</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-4-对象嵌套"><a href="#7-4-对象嵌套" class="headerlink" title="7.4.对象嵌套"></a>7.4.对象嵌套</h4><blockquote><p>在基于面向对象进行编程时，对象之间可以存在各种各样的关系，例如：组合、关联、依赖等（Java 中的称呼），用大白话来说就是各种嵌套。</p></blockquote><p>情景 1</p><p>定义一个学校类，有学校的名称，如：北京校区，上海校区。定义一个班级类，有班级名称，班级所属的校区。如全栈班在北京校区，云计算班在上海校区。再定义一个学生了，有学生名字，学生的年龄，学生所属的班级。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">class</span> <span class="title class_">School</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">name</span> = name;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> s1 = <span class="keyword">new</span> <span class="title class_">School</span>(<span class="string">&#x27;北京校区&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> s2 = <span class="keyword">new</span> <span class="title class_">School</span>(<span class="string">&#x27;上海校区&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">class</span> <span class="title class_">Classes</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">constructor</span>(<span class="params">title, school_object</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">title</span> = title;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">school_object</span> = school_object;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> c1 = <span class="keyword">new</span> <span class="title class_">Classes</span>(<span class="string">&#x27;前端班&#x27;</span>, s1);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> c2 = <span class="keyword">new</span> <span class="title class_">Classes</span>(<span class="string">&#x27;全栈班&#x27;</span>, s2);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">constructor</span>(<span class="params">name, age, class_object</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">name</span> = name;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">age</span> = age;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">class_object</span> = class_object</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">message</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> data = <span class="string">`我在 <span class="subst">$&#123;<span class="variable language_">this</span>.class_object.school_object.name&#125;</span>, 我是一名 <span class="subst">$&#123;<span class="variable language_">this</span>.class_object.title&#125;</span> 学生，我叫：<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>，我今年<span class="subst">$&#123;<span class="variable language_">this</span>.age&#125;</span>岁了。`</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> wc = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;wc&#x27;</span>, <span class="number">10</span>, c1);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> xq = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;xq&#x27;</span>, <span class="number">11</span>, c2);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> ml = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;ml&#x27;</span>, <span class="number">12</span>, c2);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    wc.<span class="title function_">message</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    xq.<span class="title function_">message</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    ml.<span class="title function_">message</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230927212652223.png" alt="image-20230927212652223"></p><h3 id="八、防抖节流"><a href="#八、防抖节流" class="headerlink" title="八、防抖节流"></a>八、防抖节流</h3><h5 id="7-1-节流"><a href="#7-1-节流" class="headerlink" title="7.1 节流"></a>7.1 节流</h5><blockquote><p>连续触发事件，但是在规定时间内只执行一次函数（英雄技能冷却）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">      .<span class="property">box</span> &#123;</span><br><span class="line">        <span class="attr">width</span>: 500px;</span><br><span class="line">        <span class="attr">height</span>: 500px;</span><br><span class="line">        background-<span class="attr">color</span>: #ccc;</span><br><span class="line">        <span class="attr">color</span>: #fff;</span><br><span class="line">        text-<span class="attr">align</span>: center;</span><br><span class="line">        font-<span class="attr">size</span>: 100px;</span><br><span class="line">      &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> i = <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">function</span> <span class="title function_">mouseMove</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        box.<span class="property">innerHTML</span> = i++;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 如果存在大量操作 dom 的情况，可能卡顿</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 节流函数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn, t</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> startTime = <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">if</span> (now - startTime &gt;= t) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">fn</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            startTime = now;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 当点击事件使用函数调用，当页面打开会立即调用。且不会再次调用执行，return就可以多次执行。这里存在闭包</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      box.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousemove&quot;</span>, <span class="title function_">throttle</span>(mouseMove, <span class="number">1000</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="7-2-防抖"><a href="#7-2-防抖" class="headerlink" title="7.2 防抖"></a>7.2 防抖</h5><blockquote><p>所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间 （英雄回城）</p></blockquote><p>使用场景：输入框，只有输入完在查找</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .<span class="property">box</span> &#123;</span><br><span class="line">      <span class="attr">width</span>: 500px;</span><br><span class="line">      <span class="attr">height</span>: 500px;</span><br><span class="line">      background-<span class="attr">color</span>: #ccc;</span><br><span class="line">      <span class="attr">color</span>: #fff;</span><br><span class="line">      text-<span class="attr">align</span>: center;</span><br><span class="line">      font-<span class="attr">size</span>: 100px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> i = <span class="number">1</span>  <span class="comment">// 让这个变量++</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 鼠标移动函数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">mouseMove</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      box.<span class="property">innerHTML</span> = ++i</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 如果里面存在大量操作 dom 的情况，可能会卡顿</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 防抖函数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn, t</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> timeId</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 如果有定时器就清除</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (timeId) <span class="built_in">clearTimeout</span>(timeId)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 开启定时器 200</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        timeId = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="title function_">fn</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;, t)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// box.addEventListener(&#x27;mousemove&#x27;, mouseMove)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, <span class="title function_">debounce</span>(mouseMove, <span class="number">200</span>))</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>Lodash 节流和防抖</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>) <span class="keyword">let</span> i = <span class="number">1</span> <span class="comment">// 让这个变量++ //</span></span><br><span class="line">  鼠标移动函数 <span class="keyword">function</span> <span class="title function_">mouseMove</span>(<span class="params"></span>)&#123;<span class="string">&quot; &quot;</span>&#125;</span><br><span class="line">  &#123;</span><br><span class="line">    (box.<span class="property">innerHTML</span> = ++i)</span><br><span class="line">    <span class="comment">// 如果里面存在大量操作 dom 的情况，可能会卡顿</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// box.addEventListener(&#x27;mousemove&#x27;, mouseMove) // lodash 节流写法 // box.addEventListener(&#x27;mousemove&#x27;,</span></span><br><span class="line">  _.<span class="title function_">throttle</span>(mouseMove, <span class="number">500</span>)) <span class="comment">// lodash 防抖的写法 box.addEventListener(&#x27;mousemove&#x27;,</span></span><br><span class="line">  _.<span class="title function_">debounce</span>(mouseMove, <span class="number">500</span>))</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="九、-迭代器-可迭代对象-生成器"><a href="#九、-迭代器-可迭代对象-生成器" class="headerlink" title="九、 迭代器 可迭代对象 生成器"></a>九、 迭代器 可迭代对象 生成器</h3><h4 id="9-1-迭代器"><a href="#9-1-迭代器" class="headerlink" title="9.1.迭代器"></a>9.1.迭代器</h4><blockquote><p>创建一个迭代器类（类型），new 这个类，就可以得到一个对象，这个对象叫迭代器对象。要求这个对象必须有一个 next 方法。迭代器英文叫 Iterator，先创建出这个类，如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="keyword">class</span> <span class="title class_">Iter</span> &#123;</span><br><span class="line">        names = [<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王二&quot;</span>, <span class="string">&quot;麻子&quot;</span>];</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">        <span class="title function_">next</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">index</span> &lt; <span class="variable language_">this</span>.<span class="property">names</span>.<span class="property">length</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">done</span>: <span class="literal">true</span>, <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">names</span>[<span class="variable language_">this</span>.<span class="property">index</span>++] &#125;;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">done</span>: <span class="literal">true</span>, <span class="attr">value</span>: <span class="literal">undefined</span> &#125;;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> it = <span class="keyword">new</span> <span class="title class_">Iter</span>();</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/JavaScript/image-20230927215947773.png" alt="image-20230927215947773"></p><h4 id="9-1-可迭代对象"><a href="#9-1-可迭代对象" class="headerlink" title="9.1.可迭代对象"></a>9.1.可迭代对象</h4><p>一个对象是否是可迭代对象，需要满足两个条件：</p><ul><li>满足条件 1：必须实现一个特定的函数: [Symbol.iterator]</li><li>满足条件 2：这个函数需要返回一个迭代器(这个迭代器用于迭代当前的对象)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">class</span> <span class="title class_">Iter</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">constructor</span>(<span class="params">data</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">data</span> = data;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">index</span> = <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        [<span class="title class_">Symbol</span>.<span class="property">iterator</span>]() &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">//满足条件1：必须实现一个特定的函数: [Symbol.iterator]</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> that = <span class="variable language_">this</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> dataIterator = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">next</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">if</span> (that.<span class="property">index</span> &lt; that.<span class="property">data</span>.<span class="property">length</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">return</span> &#123; <span class="attr">done</span>: <span class="literal">true</span>, <span class="attr">value</span>: that.<span class="property">data</span>[that.<span class="property">index</span>++] &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">return</span> &#123; <span class="attr">done</span>: <span class="literal">true</span>, <span class="attr">value</span>: <span class="literal">undefined</span> &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span> dataIterator; <span class="comment">//满足条件2：这个函数需要返回一个迭代器(这个迭代器用于迭代当前的对象)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> t1 = <span class="keyword">new</span> <span class="title class_">Iter</span>([<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王二&quot;</span>, <span class="string">&quot;麻子&quot;</span>]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> it = t1[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(it.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>JS 天生就是可迭代对象，如下：</p><ul><li>数组</li><li>Set</li><li>arguments</li><li>字符串</li><li>JS 中的对象不是可迭代对象</li></ul><p>可迭代对象的应用场景</p><blockquote><p>可迭代对象的应用场景: 把一个非可迭代对象 转化成 可迭代对象，如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> info = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">name</span>: <span class="string">&quot;马路&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">age</span>: <span class="number">18</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">height</span>: <span class="number">1.88</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        [<span class="title class_">Symbol</span>.<span class="property">iterator</span>]() &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">//满足条件1：必须实现一个特定的函数: [Symbol.iterator]</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> values = <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable language_">this</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> index = <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">let</span> dataIterator = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">next</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">if</span> (index &lt; values.<span class="property">length</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">return</span> &#123; <span class="attr">done</span>: <span class="literal">true</span>, <span class="attr">value</span>: values[index++] &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">return</span> &#123; <span class="attr">done</span>: <span class="literal">true</span>, <span class="attr">value</span>: <span class="literal">undefined</span> &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">return</span> dataIterator; <span class="comment">//满足条件2：这个函数需要返回一个迭代器(这个迭代器用于迭代当前的对象)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> iterator = info[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>可迭代对象的应用场景: 一些类的构造方法中, 也是传入的可迭代对象，语法：new Set([iterable])。代码演示：</p><p><img src="/2023/09/15/JavaScript/image-20230927222235352.png" alt="image-20230927222235352"></p><p><img src="/2023/09/15/JavaScript/image-20230928110859555.png" alt="image-20230928110859555"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dom </tag>
            
            <tag> Bom </tag>
            
            <tag> Es </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue</title>
      <link href="/2023/09/15/Vue/"/>
      <url>/2023/09/15/Vue/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-2"><a href="#Vue-2" class="headerlink" title="Vue 2"></a>Vue 2</h1><blockquote><p>Vue 是一个用于构建用户界面的渐进式框架</p><ul><li>构建用户界面：基于数据动态渲染页面</li><li>渐进式：可以自底向上逐层的应用，简单应用只需要一个轻量小巧的核心库，复杂应用可以引入各式各样的 Vue 插件</li><li>框架： 一套完整的项目解决方案，提高开发效率</li></ul></blockquote><ol><li><p>遵循 MVVM 模式</p></li><li><p>编码简洁，体积小，运行效率高，适合移动&#x2F;PC 端开发</p></li><li><p>它本身只关注 UI,可以引入其它第三方库开发项目</p></li><li><p>采用组件化模式，提高代码复用率、且让代码更好维护</p></li><li><p>声明式编码，让编码人员无需直接操作 D0M，提高开发效率<br><img src="/2023/09/15/Vue/image-20230915113521924.png" alt="image-20230915113521924"></p></li><li><p>使用虚拟 DOM 和 Diff 算法，尽量复用 DOM 节点</p></li></ol><p><img src="/2023/09/15/Vue/image-20230915113537754.png" alt="image-20230915113537754"><br>7 .与其他 JS 框架的关联<br>·借鉴 angular 的模板和数据绑定技术<br>·借鉴 react 的组件化和虚拟 DoM 技术</p><h2 id="01-创建-vue-实例"><a href="#01-创建-vue-实例" class="headerlink" title="01_创建 vue 实例"></a>01_创建 vue 实例</h2><blockquote><p>实例与容器是一一对应的<br>真实开发中只有一个 Vue 实例，并且会配合着组件一起使用</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1. 创建容器 2. 引包 3.创建实例 4.添加配置项 =&gt; 完成渲染</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      //容器</span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      //&#123;&#123;xxx&#125;&#125;js表达式</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 指定需要配置选择器的容器（Vue管理的是哪个盒子）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// data提供数据，数据供el所指定的容器取使用。</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">msg</span>: <span class="string">&quot;Hello world&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="02-模板语法-数据绑定"><a href="#02-模板语法-数据绑定" class="headerlink" title="02_模板语法 数据绑定"></a>02_模板语法 数据绑定</h2><blockquote><p>Vue 的一种模板语法</p><p>插值语法</p><p>作用：利用 表达式 进行插值渲染</p><p>语法：</p><p>指令语法</p><p>功能：用于解析标签(包括：标签属性、标签体内容、绑定事件)</p><p>举例：或简写为</p><p>x 同样要写 js 表达式，可以直接读取到 data 中的所有属性</p><p>备注：Vue 中有很多的指令，且形式都是 V-XXX ,此处只是拿 v-bind 举例</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>模板语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h4</span>&gt;</span>你好，&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;tencent.url.toUpperCase()&quot;</span> <span class="attr">x</span>=<span class="string">&quot;hello&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span>点我去看&#123;&#123; tencent.name &#125;&#125;1&lt;/a</span><br><span class="line">      &gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;tencent.url&quot;</span> <span class="attr">x</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>点我去看&#123;&#123; tencent.name &#125;&#125;2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>; <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&quot;jack&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">tencent</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>: <span class="string">&quot;开端&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">url</span>: <span class="string">&quot;https://v.qq.com/x/cover/mzc00200mp8vo9b/n0041aa087e.html&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>数据绑定</strong></p><blockquote><p>Vue 中有 2 种数据绑定的方式： 1.单向绑定(v-bind)：数据只能从 data 流向页面。 2.双向绑定(v-model)：数据不仅能从 data 流向页面，还可以从页面流向 data。<br>备注： 1.双向绑定一般都应用在表单类元素上（如：input、select 等）<br>2.v-model:value 可以简写为 v-model，因为 v-model 默认收集的就是 value 值。</p></blockquote><p><img src="https://telegraph-image-et0.pages.dev/file/fbcf28e64d4cbca19a79f.gif" alt="img"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 普通写法 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 单向数据绑定：&lt;input type=&quot;text&quot; v-bind:value=&quot;name&quot;&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="comment">双向数据绑定：&lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;&gt;&lt;br/&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line">      单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 如下代码是错误的，因为v-model只能应用在表单类元素（输入类元素）上 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;h2 v-model:x=&quot;name&quot;&gt;你好啊&lt;/h2&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>; <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="03-el-与-data-的两种写法"><a href="#03-el-与-data-的两种写法" class="headerlink" title="03_el 与 data 的两种写法"></a>03_el 与 data 的两种写法</h2><p><strong>e1</strong>有 2 种写法</p><ul><li>创建 Vue 实例对象的时候配置 e1 属性</li><li>先创建 Vue 实例，随后再通过 vm.$mount(‘#root’)指定 e1 的值</li></ul><p>data 有 2 种写法</p><ul><li>对象式：data:{ }</li><li>函数式：data（）{ return { } }</li></ul><p>如何选择：目前哪种写法都可以，以后到组件时，data 必须使用函<br>数，否则会报错.<br>一个重要的原则<br>由 Vue 管理的函数，一定不要写箭头函数，否则 this 就不再是 Vue 实<br>例了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>el与data的两种写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>; <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// el的两种写法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const v = new Vue(&#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// //el:&#x27;#root&#x27;, // 第一种写法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// data: &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// name:&#x27;cess&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(v)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// v.$mount(&#x27;#root&#x27;) // 第二种写法</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// data的两种写法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// data的第一种写法：对象式</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// data:&#123;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// name:&#x27;cess&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//data的第二种写法：函数式</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;@@@&quot;</span>, <span class="variable language_">this</span>); <span class="comment">// 此处的this是Vue实例对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>: <span class="string">&quot;cess&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="03-MVVM-模型-数据代理"><a href="#03-MVVM-模型-数据代理" class="headerlink" title="03_MVVM 模型 数据代理"></a>03_MVVM 模型 数据代理</h2><blockquote><p>遵循 MVVM 模型<br><img src="/2023/09/15/Vue/image-20230915113606478.png" alt="image-20230915113606478"><br>MVVM<br>M:模型 Model。data 中的数据<br>V:视图 View。模板代码<br>VM:模 ViewModel。Vue 实例<br>观察发现<br>data 中所有的属性，最后都出现在了 vm 身上<br>vm 身上所有的属性及 Vue 原型身上所有的属性，在 Vue 模板中都<br>可以直接使用</p></blockquote><p><img src="/2023/09/15/Vue/image-20230915113621248.png" alt="image.png"><br><strong>数据代理</strong><br><strong>Object.defineproperty 方法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> number = <span class="number">18</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(person, <span class="string">&quot;age&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// value:18,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// enumerable:true, // 控制属性是否可以枚举，默认值是false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// writable:true, // 控制属性是否可以被修改，默认值是false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// configurable:true // 控制属性是否可以被删除，默认值是false</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 当有人读取person的age属性时，get函数(getter)就会被调用，且返回值就是age的值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">get</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;有人读取age属性了&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> number;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 当有人修改person的age属性时，set函数(setter)就会被调用，且会收到修改的具体值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">set</span>(<span class="params">value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;有人修改了age属性，且值是&quot;</span>, value);</span></span><br><span class="line"><span class="language-javascript">      number = value;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(Object.keys(person))</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>数据代理：通过一个对像代理对另一个对象中属性的操作(读&#x2F;写)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> obj = &#123; <span class="attr">x</span>: <span class="number">100</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> obj2 = &#123; <span class="attr">y</span>: <span class="number">200</span> &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj2, <span class="string">&quot;x&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">get</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> obj.<span class="property">x</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">set</span>(<span class="params">value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      obj.<span class="property">x</span> = value;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Vue 中的数据代理通过 vm 对象来代理 data 对象中属性的操作（读&#x2F;写）</li><li>Vue 中数据代理的好处：更加方便的操作 data 中的数据</li><li>基本原理<ol><li>通过 object.defineProperty()data 对象中所有属性添加到 vm 上</li><li>为每一个添加到 vm 上的属性，都指定一个 gettersetter</li><li>在 getter&#x2F;setter 内部去操作（读&#x2F;写）data 中对应的属性</li><li>数据劫持？</li></ol></li></ol><p><img src="/2023/09/15/Vue/image-20230915113747350.png" alt="image-20230915113747350"><br>Vue 将 data 中的数据拷贝了一份到<strong>_data 属性</strong>中，又将_data 里面的属性提到 Vue 实例中（如 name),通过 defineProperty 实现数据代理，这样通过 geter,&#x2F;setter 操作 name,进而操作 data 中的 name。而_data 又对 data 进行数据劫持，实现响应式</p><h2 id="04-事件处理"><a href="#04-事件处理" class="headerlink" title="04_事件处理"></a>04_事件处理</h2><p><strong>事件的基本用法</strong> 1.使用 v-on:xxx 或**@xxx**绑定事件，其中 xx 是事件名 2.事件的回调需要配置在 methods 对象中，最终会在 vm 上<br>3.methods 中配置的函数，不要用箭头函数，否则 this 就不是 vm 了<br>4.methods 中配置的函数，都是被 Vue 所管理的函数，this 的指向是 vm 或组件实例对象<br>5.@click&#x3D;”demo”i 和@click&#x3D;”demo($event)”效果一致，但后者可以传参</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来看&#123;&#123;name&#125;&#125;的笔记<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button v-on:click=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo1&quot;</span>&gt;</span>点我提示信息1（不传参）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo2($event,66)&quot;</span>&gt;</span>点我提示信息2（传参）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>; <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&quot;cess&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">showInfo1</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">target</span>.<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// console.log(this) // 此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&quot;同学你好！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">showInfo2</span>(<span class="params">event, number</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(event, number);</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">target</span>.<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// console.log(this) // 此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&quot;同学你好！！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>事件修饰符</strong></p><blockquote><p><strong>Vue 中的事件修饰符<br>1.prevent 阻止默认事件（常用）<br>2.stop 阻止事件冒泡（常用）<br>3.once 事件只触发一次（常用）</strong>4.capture 使用事件的捕获模式<br>5.self 只有 event.target 是当前操作的元素时才触发事件<br>6.passive 事件的默认行为立即执行，无需等待事件回调执行完毕修饰符可以连续写，比如可以这么用：@click.prevent.stop&#x3D;”showInfo”**</p></blockquote><p><strong>键盘事件</strong></p><blockquote><p><strong>键盘上的每个按键都有自己的名称和编码，例如：Etr（13)。而 Vue 还对一些常用按键起了别名方便使用</strong></p></blockquote><ol><li><strong>Vue 中常用的按键别名</strong></li></ol><p><strong>回车 enter</strong><br><strong>删除 delete 捕获“删除”和“退格”键退出 esc</strong><br><strong>空格 space</strong><br><strong>换行 tab 特殊，必须配合 keydown 去使用上 up</strong><br><strong>下 down</strong><br><strong>左 1eft</strong><br><strong>右 right</strong></p><ol start="2"><li><strong>Vue 未提供别名的按键，可以使用按键原始的 key 值去绑定，但注意要转为 kebab-case(多单词小写短横线写法)</strong></li><li><strong>系统修饰键（用法特殊）ctrl alt shift meta(meta 就是 win 键)</strong><ol><li><strong>配合 keyup 使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发指定 ctr+y 使用@keyup.ctr.y</strong></li><li><strong>配合 keydown 使用：正常触发事件</strong></li></ol></li></ol><p><strong>4.也可以使用 keyCode 去指定具体的按键（不推荐）</strong><br><strong>5.Vue.config.keyCodes.自定义键名&#x3D;键码，可以去定制按键别名</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>键盘事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎打开&#123;&#123;name&#125;&#125;笔记<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">&quot;按下回车提示输入&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">keyup.enter</span>=<span class="string">&quot;showInfo&quot;</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">&quot;按下tab提示输入&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">keydown.tab</span>=<span class="string">&quot;showInfo&quot;</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">&quot;按下回车提示输入&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">keydown.huiche</span>=<span class="string">&quot;showInfo&quot;</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>; <span class="comment">// 阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">keyCodes</span>.<span class="property">huiche</span> = <span class="number">13</span>; <span class="comment">// 定义了一个别名按键</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>: <span class="string">&quot;cess&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">showInfo</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(e.key,e.keyCode)</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/Vue/image-20230915113802292.png" alt="image-20230915113802292"></p><h2 id="05-计算属性-侦听属性"><a href="#05-计算属性-侦听属性" class="headerlink" title="05_计算属性 侦听属性"></a>05_计算属性 侦听属性</h2><ol><li>插值语法实现</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_插值语法实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; firstName &#125;&#125;-&#123;&#123; lastName &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">firstName</span>: <span class="string">&quot;张&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">lastName</span>: <span class="string">&quot;三&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/Vue/image-20230915113809229.png" alt="image-20230915113809229"></p><ol start="2"><li>method 实现</li></ol><p><strong>数据发生改变，模板就会被重新解析</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_methods实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; fullName() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">firstName</span>: <span class="string">&quot;张&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">lastName</span>: <span class="string">&quot;三&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">fullName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&quot;-&quot;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>cpmputed 计算属性</li></ol><blockquote><p><strong>定义：要用的属性不存在，需要通过已有的属性计算得来</strong> &gt; <strong>原理：底层借助了 Objcet.defineproperty（）方法提供的 getter 和 setter</strong> &gt; <strong>get 函数什么时候执行？</strong></p><ul><li><strong>初次读取时会执行一次</strong></li><li><strong>当依赖的数据发生改变时会被再次调用</strong></li></ul><p><strong>4.优势：与 methods 实现相比，内部有缓存机制（复用），效率更高，调试方便</strong> &gt; <strong>5.备注</strong> &gt; <strong>a.计算属性最终会出现在 vm 上，直接读取使用即可</strong> &gt; <strong>b.如果计算属性要被修改，那必须写 set 函数去响应修改，且 set 中要引 l 起计算时依赖的数据发生改变</strong> &gt; <strong>c.如果计算属性确定不考虑修改，可以使用计算属性的简写形式</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_计算属性实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  测试：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;x&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  // 这里修改 不会调 fullName的get方法 全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br/&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br/&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">firstName</span>: <span class="string">&quot;张&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">lastName</span>: <span class="string">&quot;三&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">x</span>: <span class="string">&quot;你好&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//完整写法</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// fullName: &#123;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// get() &#123;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// console.log(&#x27;get被调用了&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// return this.firstName + &#x27;-&#x27; + this.lastName</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// set(value) &#123;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// console.log(&#x27;set&#x27;, value)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// const arr = value.split(&#x27;-&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// this.firstName = arr[0]</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// this.lastName = arr[1]</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 简写</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">fullName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;get被调用了&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&quot;-&quot;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.侦听属性<br><strong>watch</strong> 监视属性 1.当被监视的属性变化时，回调函数自动调用，进行相关操作 2.监视的属性必须存在，才能进行监视，既可以监视 data，也可以监视计算属性 3.配置项属性 immediate:false,改为 true,则初始化时调用一次 handler(newValue,oldValue) 4.监视有两种写法</p><ul><li>创建 Vue 时传入 watch:{}配置</li><li>通过 vm.$watch（）监视</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例_监视属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">isHot</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">info</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isHot</span> ? <span class="string">&quot;炎热&quot;</span> : <span class="string">&quot;凉爽&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">changeWeather</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">isHot</span> = !<span class="variable language_">this</span>.<span class="property">isHot</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 方式一</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/* watch:&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">isHot:&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">immediate:true,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">handler(newValue,oldValue)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">console.log(&#x27;isHot被修改了&#x27;,newValue,oldValue)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125; */</span></span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 方式二</span></span></span><br><span class="line"><span class="language-javascript">  vm.$watch(<span class="string">&quot;isHot&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">immediate</span>: <span class="literal">true</span>, <span class="comment">// 初始化时让handler调用一下</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//handler什么时候调用？当isHot发生改变时</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handler</span>(<span class="params">newValue, oldValue</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;isHot被修改了&quot;</span>, newValue, oldValue);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>深度侦听</p><ol><li>Vue 中的 watch 默认不监测对象内部值的改变（一层)</li><li>在 watch 中配置 deep:true 可以监测对象内部值的改变（多层）</li></ol><p>注意</p><ul><li>Vue 自身可以监测对象内部值的改变，但 Vue 提供的 watch 默认不可以</li><li>使用 watch 时根据监视数据的具体结构，决定是否采用深度监视</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例_深度监视<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>a的值是:&#123;&#123; numbers.a &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>b的值是:&#123;&#123; numbers.b &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.b++&quot;</span>&gt;</span>点我让b+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers = &#123;a:666,b:888&#125;&quot;</span>&gt;</span>彻底替换掉numbers<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  &#123;&#123;numbers.c.d.e&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">isHot</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">numbers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">a</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">b</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">c</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">d</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">e</span>: <span class="number">100</span>,</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 监视多级结构中某个属性的变化</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">/* &#x27;numbers.a&#x27;:&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">handler()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">console.log(&#x27;a被改变了&#x27;)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">&#125; */</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 监视多级结构中所有属性的变化</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">numbers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">deep</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">handler</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;numbers改变了&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>侦听属性简写<br>如果监视属性除了 handler 没有其他配置项的话，可以进行简写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例_监视属性_简写<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>今天天气很&#123;&#123; info &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123; <span class="attr">isHot</span>: <span class="literal">true</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">info</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isHot</span> ? <span class="string">&quot;炎热&quot;</span> : <span class="string">&quot;凉爽&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">changeWeather</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">isHot</span> = !<span class="variable language_">this</span>.<span class="property">isHot</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 正常写法</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// isHot: &#123;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// // immediate:true, //初始化时让handler调用一下</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// // deep:true, //深度监视</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// handler(newValue, oldValue) &#123;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//简写</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">isHot</span>(<span class="params">newValue, oldValue</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;isHot被修改了&quot;</span>, newValue, oldValue, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//正常写法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// vm.$watch(&#x27;isHot&#x27;, &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// immediate: true, //初始化时让handler调用一下</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// deep: true,//深度监视</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// handler(newValue, oldValue) &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue)</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;)l</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//简写</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// vm.$watch(&#x27;isHot&#x27;, (newValue, oldValue) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue, this)</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>计算属性 VS 侦听属性</strong><br>computed 和 watch 之间的区别</p><ul><li>computed 能完成的功能，watch 都可以完成 watch 能完成的功能，</li><li>computed 不一定能完成，例如 watch 可以进行异步操作</li></ul><p>两个重要的小原侧<br>所有被 Vue 管理的函数，最好写成普通函数，这样 this 的指向才是 vm 或组件实例对象。所有不被 Vue 所管理的函数（定时器的回调函数、ajax 的回调函数等、Promise 的回调函数)，最好写成箭头函数，这样 this 的指向才是 vm 或组件实例对象</p><h2 id="06-绑定样式-条件渲染"><a href="#06-绑定样式-条件渲染" class="headerlink" title="06_绑定样式 条件渲染"></a>06_绑定样式 条件渲染</h2><p><strong>c1ass</strong>样式<br>写法：<br>:c1ass&#x3D;”xxx”,Xx 可以是字符串、数组、对象<br>:style:&#x3D;”[a,b]”其中 a、b 是样式对象<br>:style:&#x3D;”{fontsize:xxx}”其中 Xx 是动态值</p><ul><li>字符串写法适用于：类名不确定，要动态获取</li><li>数组写法适用于：要绑定多个样式，个数不确定，名字也不确定</li><li>对象写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.basic</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.happy</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">3px</span> solid red;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>, <span class="number">0.644</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">30deg</span>, yellow, pink, orange, yellow);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.sad</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">4px</span> dashed <span class="built_in">rgb</span>(<span class="number">2</span>, <span class="number">197</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.normal</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.atguigu1</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: yellowgreen;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.atguigu2</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> red;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.atguigu3</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 绑定class样式--字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 绑定class样式--数组写法，适用于：要绑定的样式个数不确定、名字也不确定 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 绑定class样式--对象写法，适用于：要绑定的样式个数确定、名字也确定，但要动态决定用不用 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 绑定style样式--对象写法 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 绑定style样式--数组写法 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">mood</span>: <span class="string">&quot;normal&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">classArr</span>: [<span class="string">&quot;atguigu1&quot;</span>, <span class="string">&quot;atguigu2&quot;</span>, <span class="string">&quot;atguigu3&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">classObj</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">atguigu1</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">atguigu2</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">styleObj</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fontSize</span>: <span class="string">&quot;40px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">color</span>: <span class="string">&quot;red&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">styleObj2</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">backgroundColor</span>: <span class="string">&quot;orange&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">styleArr</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">fontSize</span>: <span class="string">&quot;40px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">color</span>: <span class="string">&quot;blue&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">backgroundColor</span>: <span class="string">&quot;gray&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      ],</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">changeMood</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> arr = [<span class="string">&quot;happy&quot;</span>, <span class="string">&quot;sad&quot;</span>, <span class="string">&quot;normal&quot;</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> index = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">3</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">mood</span> = arr[index];</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2023/09/15/Vue/image-20230915113844028.png" alt="image-20230915113844028" style="zoom:33%;">**条件渲染**v-if<ul><li>写法 跟 if else 语法类似<br>v-if&#x3D;”表达式”<br>v-else-if&#x3D;”表达式”<br>v-else</li><li>适用于：切换频率较低的场景，因为不展示的 DOM 元素直接被移除</li><li>注意：v-if 可以和 v-else-if，v-else 一起使用，但要求结构不能被打断</li></ul><p>v-show</p><ul><li>写法：v-show&#x3D;”表达式”</li><li>适用于：切换频率较高的场景</li><li>特点：不展示的 DOM 元素未被移除，仅仅是使用样式隐藏掉 display: none</li></ul><p><strong>备注：</strong>使用 v-if 的时，元素可能无法获取到，而使用 v-show 一定可以获取到 template 标签不影响结构，页面 html 中不会有此标签，但只能配合 v-if，不能配合 v-show<br><img src="/2023/09/15/Vue/image-20230915113902759.png" alt="image-20230915113902759" style="zoom: 50%;"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>条件渲染<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是:&#123;&#123; n &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 使用v-show做条件渲染 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;h2 v-show=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;h2 v-show=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 使用v-if做条件渲染 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;h2 v-if=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;h2 v-if=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- v-else和v-else-if --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-show=&quot;n === 1&quot;&gt;Angular&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-show=&quot;n === 2&quot;&gt;React&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-show=&quot;n === 3&quot;&gt;Vue&lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-if=&quot;n === 1&quot;&gt;Angular&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-else-if=&quot;n === 2&quot;&gt;React&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-else-if=&quot;n === 3&quot;&gt;Vue&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-else&gt;哈哈&lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- v-if与template的配合使用 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>尚硅谷<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">n</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>条件渲染<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是:&#123;&#123; n &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 使用v-show做条件渲染 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;h2 v-show=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;h2 v-show=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 使用v-if做条件渲染 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;h2 v-if=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;h2 v-if=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- v-else和v-else-if --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-show=&quot;n === 1&quot;&gt;Angular&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-show=&quot;n === 2&quot;&gt;React&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-show=&quot;n === 3&quot;&gt;Vue&lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-if=&quot;n === 1&quot;&gt;Angular&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-else-if=&quot;n === 2&quot;&gt;React&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-else-if=&quot;n === 3&quot;&gt;Vue&lt;/div&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;div v-else&gt;哈哈&lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- v-if与template的配合使用 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>尚硅谷<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">n</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="07-列表渲染-数据监视"><a href="#07-列表渲染-数据监视" class="headerlink" title="07_列表渲染 数据监视"></a>07_列表渲染 数据监视</h2><p>v-for 指令</p><ul><li>用于展示列表数据</li><li>语法：&lt;li v-for&#x3D;”(item,index) of items”:key&#x3D;”index”&gt;,这里 key 可以是 index,遍历对象的唯一标识</li><li>可遍历：数组、对象、字符串（用的少）、指定次数（用的少）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>基本列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>人员列表（遍历数组）<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123; p.name &#125;&#125;-&#123;&#123; p.age &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 遍历对象 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>汽车信息（遍历对象）<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,k) of car&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;k&quot;</span>&gt;</span>&#123;&#123; k &#125;&#125;-&#123;&#123; value &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 遍历字符串 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>测试遍历字符串（用得少）<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(char,index) of str&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123; char &#125;&#125;-&#123;&#123; index &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 遍历指定次数 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>测试遍历指定次数（用得少）<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(number,index) of 5&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123; index &#125;&#125;-&#123;&#123; number &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;001&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;002&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;李四&quot;</span>, <span class="attr">age</span>: <span class="number">19</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;003&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;王五&quot;</span>, <span class="attr">age</span>: <span class="number">20</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      ],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">car</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&quot;奥迪A8&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">price</span>: <span class="string">&quot;70万&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">color</span>: <span class="string">&quot;黑色&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">str</span>: <span class="string">&quot;hello&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2023/09/15/Vue/image-20230915113930479.png" alt="image-20230915113930479" style="zoom:50%;">**key 的作用与原理**![image-20230915113948862](image-20230915113948862.png)![image-20230915114002566](image-20230915114002566.png)面试题：react vue 中的 key 有什么作用？(key 的内部原理)<ol><li>虚拟 DOM 中 key 的作用：key 是虚拟 dom 中对象的标识，当数据发生变化时，Vue 会根据新数据生成</li></ol><p>新的虚拟 D0M,随后 Vue 进行新虚拟 DOM 与旧虚拟 DOM 的差异比较，比较规则如下</p><ol start="2"><li>对比规则<ol><li>旧虚拟 dom 中找到了与新虚拟 dom 相同的 key<ol><li>若虚拟 dom 中内容没变直接使用之前的真实 dom</li><li>若虚拟 DOM 中内容变了，则生成新的真实 DOM,随后替换掉页面中之前的真实 DOM</li></ol></li><li>旧虚拟 dom 中未找到与新虚拟 dom 相同的 key 创建新的真实 DOM，随后渲染到到页面</li></ol></li><li>用 index 作为 key 可能会引发的问题<ol><li>若对数据进行逆序添动加、逆序删除等破坏顺序操作，会产生没有必要的真实 D0M 更新&#x3D;&#x3D;&gt;界面效果没问题，但效率低</li><li>若结构中还包含输入类的 D0M：会产生错误 D0M 更新&#x3D;&#x3D;&gt;界面有问题</li></ol></li><li>开发中如何选择 key?<ol><li>最好使用每条数据的唯一标识作为 key,比如 id、手机号、身份证号、学号等唯一值</li><li>如果不存在对数据的逆序添加、逆序删除等破坏顺序的操作，仅用于渲染列表，使用 index 作为 ke</li></ol></li></ol><p>y 是没有问题的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>key的原理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表（遍历数组）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加一个老刘<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;001&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;002&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;李四&quot;</span>, <span class="attr">age</span>: <span class="number">19</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;003&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;王五&quot;</span>, <span class="attr">age</span>: <span class="number">20</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      ],</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">add</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> p = &#123; <span class="attr">id</span>: <span class="string">&quot;004&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;老刘&quot;</span>, <span class="attr">age</span>: <span class="number">40</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">persons</span>.<span class="title function_">unshift</span>(p);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>列表排序</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 遍历人员数组 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;keyword&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入名字！！！&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;p of filPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">          &#123;&#123;p.name&#125;&#125;--&#123;&#123;p.age&#125;&#125;--&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">keyword</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;001&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;马冬梅&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;002&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周冬梅&quot;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;003&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周杰伦&quot;</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123; <span class="attr">id</span>: <span class="string">&quot;004&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周兆伦&quot;</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          ],</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// filPersons: [],</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// watch实现</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 此时出现bug一开始并不会显示界面。</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 因为渲染页面的时候一开始filPersons是空的，此时用监听属性的完整写法immediate: true初始化就调用</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// #region</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// watch: &#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   keyword: &#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     immediate: true,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     handler(val) &#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//       this.filPersons = this.persons.filter((p) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//         return p.name.indexOf(val) !== -1;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//       &#125;);</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   &#125;,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#125;,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//#endregion</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 计算属性实现，明显容易很多，至于为什么计算属性一开始就会显示界面，因为计算属性一开始就会初始化数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">filPersons</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">persons</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">p</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(p);</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> p.<span class="property">name</span>.<span class="title function_">indexOf</span>(<span class="variable language_">this</span>.<span class="property">keyword</span>) !== -<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>列表排序<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遍历人员数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;keyword&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入名字！！！&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType=2&quot;</span>&gt;</span>年龄升序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 犯的错误真傻逼 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;button @click=&quot;sortType==2&quot;&gt;年龄升序&lt;/button&gt; --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType=1&quot;</span>&gt;</span>年龄降序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType=0&quot;</span>&gt;</span>原顺序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of filPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">keyWord</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">sortType</span>: <span class="number">0</span>, <span class="comment">//0原顺序，1降序，2升序</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="string">&quot;001&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;马冬梅&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="string">&quot;002&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周冬梅&quot;</span>, <span class="attr">age</span>: <span class="number">16</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="string">&quot;003&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周杰伦&quot;</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="string">&quot;004&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周兆伦&quot;</span>, <span class="attr">age</span>: <span class="number">17</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        ],</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">filPersons</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> arr = <span class="variable language_">this</span>.<span class="property">persons</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">p</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> p.<span class="property">name</span>.<span class="title function_">indexOf</span>(<span class="variable language_">this</span>.<span class="property">keyWord</span>) !== -<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">          &#125;);</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 排序</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">sortType</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">p1, p2</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">sortType</span> === <span class="number">1</span> ? p1.<span class="property">age</span> - p2.<span class="property">age</span> : p2.<span class="property">age</span> - p1.<span class="property">age</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> arr;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2023/09/15/Vue/image-20230915114020993.png" alt="image-20230915114020993" style="zoom:50%;">数据监测<blockquote><p>更新时的一个问题<br>this.persons[0]&#x3D;{id:’001’,name:’马老师’，age:50,sex:男}更改 data 数据，Vue 不监听，模板不改变</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>更新时的一个问题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateMei&quot;</span>&gt;</span>更新马冬梅的信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;001&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;马冬梅&quot;</span>, <span class="attr">age</span>: <span class="number">30</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;002&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周冬雨&quot;</span>, <span class="attr">age</span>: <span class="number">31</span>, <span class="attr">sex</span>: <span class="string">&quot;女&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;003&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;周杰伦&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">id</span>: <span class="string">&quot;004&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;温兆伦&quot;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      ],</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">updateMei</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// this.persons[0].name = &#x27;马老师&#x27; //奏效</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// this.persons[0].age = 50 //奏效</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// this.persons[0].sex = &#x27;男&#x27; //奏效</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// this.persons[0] = &#123;id:&#x27;001&#x27;,name:&#x27;马老师&#x27;,age:50,sex:&#x27;男&#x27;&#125; //不奏效</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">persons</span>.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">1</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">id</span>: <span class="string">&quot;001&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>: <span class="string">&quot;马老师&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">age</span>: <span class="number">50</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">sex</span>: <span class="string">&quot;男&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>模拟一个数据监测</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> data = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">address</span>: <span class="string">&quot;北京&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Observer</span>(<span class="params">obj</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 汇总对象中所有的属性形成一个数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 遍历</span></span></span><br><span class="line"><span class="language-javascript">    keys.<span class="title function_">forEach</span>(<span class="function">(<span class="params">k</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="variable language_">this</span>, k, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">get</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> obj[k];</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">set</span>(<span class="params">val</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="string">`<span class="subst">$&#123;k&#125;</span>被改了，我要去解析模板，生成虚拟DOM.....我要开始忙了`</span></span></span><br><span class="line"><span class="language-javascript">          );</span></span><br><span class="line"><span class="language-javascript">          obj[k] = val;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 创建一个监视的实例对象，用于监视data中属性的变化</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> obs = <span class="keyword">new</span> <span class="title class_">Observer</span>(data);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(obs.<span class="property">name</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 准备一个vm实例对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> vm = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">  vm.<span class="property">_data</span> = data = obs;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2023/09/15/Vue/image-20230915114109341.png" alt="image-20230915114109341" style="zoom:50%;"><img src="/2023/09/15/Vue/image-20230915114120710.png" alt="image-20230915114120710" style="zoom:50%;"><p><strong>原理</strong></p><ol><li>vue 会监视 data i 中所有层次的数据</li><li>如何监测对象中的数据？</li></ol><p>通过 setter 实现监视，且要在 new Vue()时就传入要监测的数据</p><pre><code>  - 对象创建后追加的属性，Vue默认不做响应式处理  - 如需给后添加的属性做响应式，请使用如下API        - Vue.set(target,propertyName/index,value)        - vm.$set(target,propertyName/index,value)</code></pre><ol start="3"><li>如何监测数组中的数据？</li></ol><p>通过包裹数组更新元素的方法实现，本质就是做了两件事</p><ul><li>调用原生对应的方法对数组进行更新</li><li>重新解析模板，进而更新页面</li></ul><p><img src="/2023/09/15/Vue/image-20230915114157075.png" alt="image-20230915114157075"> 4.在 Vue 修改数组中的某个元素一定要用如下方法 push() pop() unshift() shift() splice() sort() reverse()这几个方法被 Vue 重写了<br>Vue.set()或 vm.$set()<br>特别注意：Vue.set()和vm.$set()不能给 vm 或 vm 的根数据对象(data 等)添加属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>总结数据监视<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.age++&quot;</span>&gt;</span>年龄+1岁<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加性别属性，默认值：男<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.sex = &#x27;未知&#x27; &quot;</span>&gt;</span>修改性别<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addFriend&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateFirstFriendName&quot;</span>&gt;</span>修改第一个朋友的名字为：张三<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateHobby&quot;</span>&gt;</span>修改第一个爱好为：开车<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeSmoke&quot;</span>&gt;</span>过滤掉爱好中的抽烟<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>姓名：&#123;&#123; student.name &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>年龄：&#123;&#123; student.age &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(h,index) in student.hobby&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123; h &#125;&#125; <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(f,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123; f.name &#125;&#125;--&#123;&#123; f.age &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">student</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&#x27;tom&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">hobby</span>: [<span class="string">&#x27;抽烟&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>, <span class="string">&#x27;烫头&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">friends</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">name</span>: <span class="string">&#x27;jerry&#x27;</span>, <span class="attr">age</span>: <span class="number">35</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">name</span>: <span class="string">&#x27;tony&#x27;</span>, <span class="attr">age</span>: <span class="number">36</span> &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">addSex</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">student</span>, <span class="string">&#x27;sex&#x27;</span>, <span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">addFriend</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">student</span>.<span class="property">friends</span>.<span class="title function_">unshift</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;jack&#x27;</span>, <span class="attr">age</span>: <span class="number">70</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">updateFirstFriendName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">student</span>.<span class="property">friends</span>[<span class="number">0</span>].<span class="property">name</span> = <span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">addHobby</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">student</span>.<span class="property">hobby</span>.<span class="title function_">push</span>(<span class="string">&#x27;学习&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">updateHobby</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// this.student.hobby.splice(0,1,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// Vue.set(this.student.hobby,0,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.$set(<span class="variable language_">this</span>.<span class="property">student</span>.<span class="property">hobby</span>, <span class="number">0</span>, <span class="string">&#x27;开车&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">removeSmoke</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">student</span>.<span class="property">hobby</span> = <span class="variable language_">this</span>.<span class="property">student</span>.<span class="property">hobby</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">h</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> h !== <span class="string">&#x27;抽烟&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br></pre></td></tr></table></figure><img src="/2023/09/15/Vue/image-20230915114220663.png" alt="image-20230915114220663" style="zoom:50%;"><h2 id="08-收集表单数据"><a href="#08-收集表单数据" class="headerlink" title="08_收集表单数据"></a>08_收集表单数据</h2><p>收集表单数据</p><ul><li>若<input type="text">,则 v-model 收集的是 value 值，用户输入的内容就是 value 值</li><li>若&lt;input type&#x3D;:”radio”&#x2F;&gt;,则 v-model 收集的是 value 值，且要给标签配置 value 属性</li><li>若&lt;input type&#x3D;”checkbox”&#x2F;<ul><li>没有配置 value 属性，那么收集的是 checked 属性（勾选 or 未勾选，是布尔值)</li><li>配置了 value 属性<ul><li>v-model 的初始值是非数组，那么收集的就是 checked(勾选 or 未勾选，是布尔值)</li><li>v-model 的初始值是数组，那么收集的就是 value 组成的数组</li></ul></li></ul></li></ul><p>v-model 的三个修饰符</p><ul><li>lazy 失去焦点后再收集数据</li><li>number 输入字符串转为有效的数字</li><li>trim 输入首尾空格过滤</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>收集表单数据<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        收集表单数据：</span></span><br><span class="line"><span class="comment">            若：&lt;input type=&quot;text&quot;/&gt;，则v-model收集的是value值，用户输入的就是value值。</span></span><br><span class="line"><span class="comment">            若：&lt;input type=&quot;radio&quot;/&gt;，则v-model收集的是value值，且要给标签配置value值。</span></span><br><span class="line"><span class="comment">            若：&lt;input type=&quot;checkbox&quot;/&gt;</span></span><br><span class="line"><span class="comment">                1.没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）</span></span><br><span class="line"><span class="comment">                2.配置input的value属性:</span></span><br><span class="line"><span class="comment">                    (1)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）</span></span><br><span class="line"><span class="comment">                    (2)v-model的初始值是数组，那么收集的的就是value组成的数组</span></span><br><span class="line"><span class="comment">            备注：v-model的三个修饰符：</span></span><br><span class="line"><span class="comment">                lazy：失去焦点再收集数据</span></span><br><span class="line"><span class="comment">                number：输入字符串转为有效的数字</span></span><br><span class="line"><span class="comment">                trim：输入首尾空格过滤</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">        账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;userInfo.account&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.password&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;userInfo.age&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        性别： 男<span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value</span>=<span class="string">&quot;male&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">        女<span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value</span>=<span class="string">&quot;female&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        爱好： 学习<span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value</span>=<span class="string">&quot;study&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">        打游戏<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;game&quot;</span> /&gt;</span></span><br><span class="line">        吃饭<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        所属校区</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.city&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择校区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shenzhen&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;wuhan&quot;</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        其他信息：</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;userInfo.other&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.agree&quot;</span> /&gt;</span>阅读并接受<span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">          <span class="attr">href</span>=<span class="string">&quot;http://www.atguigu.com&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span>《用户协议》&lt;/a</span><br><span class="line">        &gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">userInfo</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">account</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">password</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">sex</span>: <span class="string">&quot;female&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">hobby</span>: [],</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">city</span>: <span class="string">&quot;beijing&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">other</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">agree</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">demo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">this</span>.<span class="property">userInfo</span>));</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/Vue/image-20230915114237076.png" alt="image-20230915114237076"><br>过滤器需要在补充吧！！！</p><h2 id="09-内置指令-自定义指令"><a href="#09-内置指令-自定义指令" class="headerlink" title="09_内置指令 自定义指令"></a>09_内置指令 自定义指令</h2><ol><li>v-text 指令</li></ol><blockquote><p>作用：向其所在的节点中渲染文本内容<br>与插值语法的区别：v-text 会替换掉节点中的内<br>容，则不会，更灵活</p></blockquote><ol start="2"><li>v-html 指令</li></ol><blockquote><p>作用：向指定节点中渲染包含 htm1 结构的内容<br>与插值语法的区别：<br>与插值语法的区别：v-html 会替换掉节点中的内<br>容，则不会，更灵活,<br>容易导致 xss 攻击<br>可识别 html 结构，但会存在安全性问题，因为利用识别的 html 可以获取用户的 cookie,进而登录用户账号</p></blockquote><ol start="3"><li>v-cloak 指令（没有值）</li></ol><blockquote><ul><li>本质是一个特殊属性，Vue 实例创建完毕并接管容器后，会删除 v-cloak 属性</li><li>使用 css 配合 v-cloak 可以解决网速慢，页面展示出的问题</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>v-cloak指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 够延迟5秒收到vue.js</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">&quot;http://localhost:8080/resource/5s/vue.js&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123; <span class="attr">name</span>: <span class="string">&quot;cess&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>v-once 指令</li></ol><blockquote><p>v-once 所在节点在初次动态渲染后，就视为静态内容了<br>以后数据的改变不会引起 v-once 所在结构的更新，<br>可以用于优化性能</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>v-once指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>初始化的n值是: &#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是: &#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123; <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>, <span class="attr">data</span>: &#123;<span class="attr">n</span>:<span class="number">1</span>&#125; &#125;)</span></span><br></pre></td></tr></table></figure><ol start="5"><li>v-pre 指令</li></ol><blockquote><p>跳过 v-pre 所在节点的编译过程<br>可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>v-pre指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>Vue其实很简单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123; <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>, <span class="attr">data</span>: &#123; <span class="attr">n</span>: <span class="number">1</span> &#125; &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>自定义指令</strong><br>局部指令</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123; directives:&#123; 指令名：配置对象 &#125; &#125;) </span><br><span class="line">new Vue(&#123;</span><br><span class="line">directives:&#123;</span><br><span class="line">指令名：回调函数</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>全局指令</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(指令名, 配置对象); 或; Vue.directive(指令名, 回调函数);</span><br><span class="line">Vue.directive(&quot;fbind&quot;, &#123; // 指令与元素成功绑定时（一上来） bind(element,</span><br><span class="line">binding) &#123; // element就是DOM元素，binding就是要绑定的 element.value =binding.value; &#125;, // 指令所在元素被插入页面时 inserted(element, binding) &#123;element.focus(); &#125;, // 指令所在的模板被重新解析时 </span><br><span class="line">update(element, binding) &#123;element.value = binding.value; &#125;, &#125;);</span><br></pre></td></tr></table></figure><p><strong>配置对象中常用的 3 个回调函数</strong><br><strong>bind(element,binding) 指令与元素成功绑定时调用</strong><br><strong>inserted(element,binding)指令所在元素被插入页面时调用</strong><br><strong>update(element,binding)指令所在模板结构被重新解析时调用</strong><br><strong>element 就是 D0M 元素，binding 就是要绑定的对象，它包含以下属性：</strong><br><strong>name value oldValue expression arg modifiers</strong><br>注意：</p><ul><li>指令定义时，不需要加 v-，使用指令的时候需要加 v-xxx</li><li>指令名如果是多个单词，要使用 kebab-case 命名方式，不要用 camelCase 命名</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前n的值是：&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>放大10倍后的n值是：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-big</span>=<span class="string">&quot;n&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-fbind</span>=<span class="string">&quot;n&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">n</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">directives</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">big</span>(<span class="params">e, binding</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;big&quot;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">        e.<span class="property">innerText</span> = binding.<span class="property">value</span> * <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">fbind</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 指令与元素成功绑定时（一上来）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">bind</span>(<span class="params">element, binding</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          element.<span class="property">value</span> = binding.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 指令所在元素被插入页面时</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">inserted</span>(<span class="params">element, binding</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          element.<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 指令所在的模板被重新解析时</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">update</span>(<span class="params">element, binding</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          element.<span class="property">value</span> = binding.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-生命周期"><a href="#10-生命周期" class="headerlink" title="10_生命周期"></a>10_生命周期</h2><blockquote><ul><li>又名生命周期回调函数、生命周期函数、生命周期钩子</li><li>是什么：Vue 在关键时刻帮我们调用的一些特殊名称的函数</li><li>生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的</li><li>生命周期函数中的 this 指向是 vm 或组件实例对象</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>引出生命周期<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;a&quot;</span>&gt;</span>你好啊<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;opacity&#125;&quot;</span>&gt;</span>看笔记学Vue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">a</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">opacity</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 🔴Vue 完成模板的解析并把初始的真实 DOM 元素放入页面后（挂载完毕）调用 mounted</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;mounted&quot;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">opacity</span> -= <span class="number">0.01</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">opacity</span> &lt;= <span class="number">0</span>) <span class="variable language_">this</span>.<span class="property">opacity</span> = <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="number">16</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 通过外部的定时器实现（不推荐）</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// setInterval(() =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// vm.opacity -= 0.01</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// if(vm.opacity &lt;= 0) vm.opacity = 1</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;,16)</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>分析生命周期![生命周期.png](生命周期 (1).png)<br><strong>总结</strong></p><ul><li><strong>常用生命周期</strong><ul><li><strong>mounted 发送 ajax 请求、启动定时器、绑定自定义事件、订阅消息等初始化操作</strong></li><li><strong>beforeDestroy 清除定时器、解绑自定义事件、取消订阅消息等收尾工作</strong></li></ul></li><li><strong>关于销毁 Vue 实例</strong><ul><li><strong>销段后借助 Vue 开发者工具看不到任何信息</strong></li><li><strong>销毁后自定义事件会失效，但原生 D0M 事件依然有效</strong></li><li><strong>一般不会在 beforeDestroy 操作数据，因为即便操作数据，也不会再触发更新流程了</strong></li></ul></li></ul><h2 id="11-组件化编程"><a href="#11-组件化编程" class="headerlink" title="11_组件化编程"></a>11_组件化编程</h2><p><strong>模块与组件、模块化与组件化</strong><br><img src="/2023/09/15/Vue/image-20230915114602714.png" alt="image-20230915114602714"><br><img src="/2023/09/15/Vue/image-20230915114615420.png" alt="image-20230915114615420"><br><img src="/2023/09/15/Vue/image-20230915114631374.png" alt="image-20230915114631374"><br><strong>非单文件组件</strong></p><blockquote><p><strong>非单文件组件：一个文件中包含有个组件</strong> &gt; <strong>单文件组件：一个文件中只包含有 1 个组件</strong></p></blockquote><p><strong>基本使用</strong><br><img src="/2023/09/15/Vue/image-20230915114649448.png" alt="image-20230915114649448"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>基本使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 第三步：编写组件标签 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//第一步：创建school组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> school = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// el:&#x27;#root&#x27;, //组件定义时，一定不要写el配置项，</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 因为最终所有的组件都要被一个vm管理，由vm决定服务于哪个容器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div class=&quot;demo&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h3&gt;学校名称：&#123;&#123;schoolName&#125;&#125;&lt;/h3&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h3&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h3&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;button @click=&quot;showName&quot;&gt;点我提示学校名&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">schoolName</span>: <span class="string">&quot;尚硅谷&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">address</span>: <span class="string">&quot;北京昌平&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">showName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">schoolName</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//第一步：创建student组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> student = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h3&gt;学生姓名：&#123;&#123;studentName&#125;&#125;&lt;/h3&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h3&gt;学生年龄：&#123;&#123;age&#125;&#125;&lt;/h3&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">studentName</span>: <span class="string">&quot;张三&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//第一步：创建hello组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> hello = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h3&gt;你好啊！&#123;&#123;name&#125;&#125;&lt;/h3&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&quot;cess&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//第二步：全局注册组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;hello&quot;</span>, hello);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//创建vm</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">msg</span>: <span class="string">&quot;你好啊！&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//第二步：注册组件（局部注册）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      school,</span></span><br><span class="line"><span class="language-javascript">      student,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2023/09/15/Vue/image-20230915114712220.png" alt="image-20230915114712220" style="zoom:50%;">**组件注意事项****关于组件名**<ul><li>一个单词组成<ul><li>第一种写法（首字母小写）：school</li><li>第二种写法（首字母大写）：School</li></ul></li><li>多个单词组成<ul><li>第一种写法(kebab-case 命名)：my-school</li><li>第二种写法(CamelCase 命名)：MySchool(需要 Vue 脚手架支持)</li></ul></li><li>备注<ul><li>组件名尽可能回避 HTML 中已有的元素名称，例如：h2、H2 都不行</li><li>可以使用 name 配置项指定组件在开发者工具中呈现的名字</li></ul></li></ul><p><strong>关于组件标签</strong></p><ul><li>第一种写法：<school></school></li><li>第二种写法：<schoo1>(需要 Vue 脚手架支持)</schoo1></li><li>备注：<strong>不使用脚手架时，<schoo1>会导致后续组件不能渲染</schoo1></strong></li><li><strong>一个简写方式：const school&#x3D;Vue.extend(options)可简写为 const school&#x3D;options,因为父组件 components 引入的时候会自动创建</strong></li></ul><p><strong>组件的嵌套</strong><br><img src="/2023/09/15/Vue/image-20230915114726839.png" alt="image-20230915114726839"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>组件的嵌套<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  Vue.config.productionTip = false;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  //定义student组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  const student = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    name: &quot;student&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    template: `</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>学生姓名：</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>学生年龄：</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    data() &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">      return &#123; name: &quot;尚硅谷&quot;, age: 18 &#125;;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  //定义school组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  const school = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    name: &quot;school&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    template: `</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>学校名称：</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    data() &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">      return &#123; name: &quot;尚硅谷&quot;, address: &quot;北京&quot; &#125;;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    //注册组件（局部）</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    components: &#123; student &#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  //定义hello组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  const hello = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    template: `<span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">msg</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span>`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    data() &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">      return &#123; msg: &quot;欢迎来到尚硅谷学习！&quot; &#125;;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  //定义app组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  const app = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    template: `</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    components: &#123; school, hello &#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  //创建vm</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  new Vue(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    el: &quot;#root&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    template: &quot;<span class="tag">&lt;<span class="name">app</span>&gt;</span><span class="tag">&lt;/<span class="name">app</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    //注册组件（局部）</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    components: &#123; app &#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2023/09/15/Vue/image-20230915114737943.png" alt="image-20230915114737943" style="zoom:50%;">**VueComponent**关于 **VueComponent**<ul><li><strong>每次调用 Vue.extend,返回的都是一个全新的 VueComponent 构造函数,即不同组件是不同的对象</strong></li><li><img src="/2023/09/15/Vue/image-20230915114801714.png" alt="image-20230915114801714"></li><li>school 组件本质是一个名为 VueComponent 的构造函数，且不是程序员定义的，而是 Vue.extend()生成的</li><li>我们只需要写**<school>或<school>:</school><strong>:,Vue 解析时会帮我们创建 school 组件的实例对象，即 Vue 帮我们执行的</strong>new VueComponent(options)**</school></li><li>关于 this 指向<ul><li>组件配置中 data 函数、methods 中的函数、watch 中的函数、computed 中的函数它们的 this 均是 VueComponent 实例对象</li><li>new Vue(options)配置中：data 函数、methods 中的函数、watch 中的函数、computed 中的函数它们的 this 均是 Vue 实例对象</li></ul></li><li>VueComponent 的实例对象，以后简称 vc(组件实例对象)Vue 的实例对象，以后简称 vm</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>VueComponent<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义school组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> school = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;school&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;button @click=&quot;showName&quot;&gt;点我提示学校名&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123; <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>, <span class="attr">address</span>: <span class="string">&quot;北京&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">showName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;showName&quot;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> test = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`&lt;span&gt;atguigu&lt;/span&gt;`</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义hello组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> hello = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;test&gt;&lt;/test&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123; <span class="attr">msg</span>: <span class="string">&quot;你好啊！&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123; test &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;@&#x27;,school)</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;#&#x27;,hello)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123; school, hello &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>VueComponent<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义school组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> school = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;school&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;button @click=&quot;showName&quot;&gt;点我提示学校名&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123; <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>, <span class="attr">address</span>: <span class="string">&quot;北京&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">showName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;showName&quot;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> test = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`&lt;span&gt;atguigu&lt;/span&gt;`</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义hello组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> hello = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;test&gt;&lt;/test&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123; <span class="attr">msg</span>: <span class="string">&quot;你好啊！&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123; test &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;@&#x27;,school)</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;#&#x27;,hello)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123; school, hello &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>VueComponent<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义school组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> school = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;school&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;button @click=&quot;showName&quot;&gt;点我提示学校名&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123; <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>, <span class="attr">address</span>: <span class="string">&quot;北京&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">showName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;showName&quot;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> test = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`&lt;span&gt;atguigu&lt;/span&gt;`</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义hello组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> hello = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;test&gt;&lt;/test&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123; <span class="attr">msg</span>: <span class="string">&quot;你好啊！&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123; test &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;@&#x27;,school)</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;#&#x27;,hello)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123; school, hello &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>VueComponent<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义school组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> school = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;school&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;button @click=&quot;showName&quot;&gt;点我提示学校名&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123; <span class="attr">name</span>: <span class="string">&quot;尚硅谷&quot;</span>, <span class="attr">address</span>: <span class="string">&quot;北京&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">showName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;showName&quot;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> test = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`&lt;span&gt;atguigu&lt;/span&gt;`</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义hello组件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> hello = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;test&gt;&lt;/test&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">`</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123; <span class="attr">msg</span>: <span class="string">&quot;你好啊！&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123; test &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;@&#x27;,school)</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(&#x27;#&#x27;,hello)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 创建vm</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123; school, hello &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>一个重要的内置关系</strong><br><img src="/2023/09/15/Vue/image-20230915114823746.png" alt="image-20230915114823746"><br>一个重要的内置关系：<strong>VueComponent.prototype.<strong>proto</strong>&#x3D;&#x3D;Vue.prototype</strong><br>为什么要有这个关系：让组件实例对象 Vc 可以访问到 Vue 原型上的属性、方法<br><strong>单文件组件</strong><br><strong>School.vue</strong></p><blockquote><p>一个页面就是一个组件，我们可以通过脚手架进行创建</p></blockquote><h2 id="12-初始化脚手架"><a href="#12-初始化脚手架" class="headerlink" title="12_初始化脚手架"></a>12_初始化脚手架</h2><blockquote><p><code>Veu 脚手架</code>是 <code>Vue</code>  官方提供的标准化开发工具（开放平台）</p></blockquote><h3 id="01-安装步骤"><a href="#01-安装步骤" class="headerlink" title="01_ 安装步骤"></a>01_ 安装步骤</h3><ol><li>下载缓慢，可以配置 npm 淘宝镜像 <code>npm config set register http://register.npm.taobao.org</code></li><li>全局安装 <code>npm install -g @cli</code>脚手架</li><li>切换到创建项目的目录，使用命令创建 <code>vue create xxx</code></li><li>选择 <code>vue</code>版本</li><li>启动项目 <code>npm run serve</code></li><li>打包项目 <code>npm run build</code></li><li>暂停项目 Ctrl+C</li></ol><blockquote><p>Vue脚手架隐藏了所有webpack相关的配置，若想查看具体webpack配置，请执行vue inspect output.js</p></blockquote><h3 id="02-脚手架文件结构"><a href="#02-脚手架文件结构" class="headerlink" title="02_脚手架文件结构"></a>02_脚手架文件结构</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.文件目录</span><br><span class="line">├── node<span class="emphasis">_modules</span></span><br><span class="line"><span class="emphasis">├── public</span></span><br><span class="line"><span class="emphasis">│ ├── favicon.ico: 页签图标</span></span><br><span class="line"><span class="emphasis">│ └── index.html: 主页面</span></span><br><span class="line"><span class="emphasis">├── src</span></span><br><span class="line"><span class="emphasis">│ ├── assets: 存放静态资源</span></span><br><span class="line"><span class="emphasis">│ │ └── logo.png</span></span><br><span class="line"><span class="emphasis">│ │── component: 存放组件</span></span><br><span class="line"><span class="emphasis">│ │ └── HelloWorld.vue</span></span><br><span class="line"><span class="emphasis">│ │── App.vue: 汇总所有组件</span></span><br><span class="line"><span class="emphasis">│ └── main.js: 入口文件</span></span><br><span class="line"><span class="emphasis">├── .gitignore: git版本管制忽略的配置</span></span><br><span class="line"><span class="emphasis">├── babel.config.js: babel的配置文件</span></span><br><span class="line"><span class="emphasis">├── package.json: 应用包配置文件</span></span><br><span class="line"><span class="emphasis">├── README.md: 应用描述文件</span></span><br><span class="line"><span class="emphasis">└── package-lock.json: 包版本控制文件</span></span><br></pre></td></tr></table></figure><h3 id="03-render-函数"><a href="#03-render-函数" class="headerlink" title="03_render 函数"></a>03_render 函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="comment">// 将App组件放进容器里面</span></span><br><span class="line">  <span class="comment">// render: h =&gt; h(App),</span></span><br><span class="line">  <span class="comment">// 完整形式</span></span><br><span class="line">  <span class="title function_">render</span>(<span class="params">createElement</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">App</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElement</span>(<span class="title class_">App</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="04-关于不同版本的函数"><a href="#04-关于不同版本的函数" class="headerlink" title="04_关于不同版本的函数"></a>04_关于不同版本的函数</h3><ol><li>vue.js与vue.runtime.Xxx.js的区别<ul><li>vue.js是完整版的Vue,包含：核心功能+模板解析器</li><li>vue.runtime.xxx.js是运行版的Vue,只包含核心功能，没有模板解析器esm就是ES6 module</li></ul></li><li>因为vue.runtime.xjs没有模板解析器，所以不能使用template配置项，需要使用render函数接收<br>到的createElement函数去指定具体内容</li></ol><h3 id="05-vue-config-js配置文件"><a href="#05-vue-config-js配置文件" class="headerlink" title="05_vue.config.js配置文件"></a>05_vue.config.js配置文件</h3><p><code>vue inspect&gt;output.js</code>可以查看到ue脚手架的默认配置<br>使用vue.config.js可以对脚手架进行个性化定制，和package.json同级目录，详见配置参考 |  <a href="https://cli.vuejs.org/zh/">Vue CLI</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@cli-service&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">lintOnSave</span>: <span class="literal">false</span>  <span class="comment">//语法检查</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="13-ref-propsmixinscoped"><a href="#13-ref-propsmixinscoped" class="headerlink" title="13_ref propsmixinscoped"></a>13_ref propsmixinscoped</h2><h3 id="01-ref-属性"><a href="#01-ref-属性" class="headerlink" title="01. ref 属性"></a>01. ref 属性</h3><p><code>ref</code>被用来给元素或子组件注册引用信息（ⅵd的替代者）</p><ul><li><p>应用在ht1标签上获取的是真实D0M元素，应用在组件标签上获取的是组件实例对象</p></li><li><p>使用方式</p><ul><li><p>打标识：&lt;h1ref&#x3D;”xxx”&gt;或&lt;Schoo1ref&#x3D;”xXx”&gt;</p><p>获取：this.$refs.XXx</p></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1 ref=&quot;title&quot;&gt;学校名称：野鸡大学&lt;/h1&gt;</span><br><span class="line">    &lt;h1&gt;校长：野鸡校长&lt;/h1&gt;</span><br><span class="line">    &lt;MyStudent ref=&quot;Ms&quot; name=&quot;王亚军&quot; :age=&quot;19&quot;&gt;&lt;/MyStudent&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import MyStudent from &quot;./Student.vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    MyStudent,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    console.log(this.$refs.title);</span><br><span class="line">    console.log(this.$refs.Ms);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/09/15/Vue/image-20230917133812233.png" alt="image-20230917133812233"></p><h3 id="02-props-配置项"><a href="#02-props-配置项" class="headerlink" title="02_props 配置项"></a>02_props 配置项</h3><p><code>props</code>让组件接收外部传过来的数据</p><ul><li><p>传递数据&lt;Demo name:&#x3D;”xxx”:age&#x3D;”18”&#x2F;&gt;这里age前加：，通过v-bind使得里面的18是数字</p></li><li><p>接收数据</p><ul><li>第一种方式（只接收）props:[‘name’,’age’]</li><li>第二种方式（限制类型）props:{name:String,age:Number}</li><li>第三种方式(限制类型、限制必要性、指定默认值)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>: &#123;</span><br><span class="line">  <span class="attr">name</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>, <span class="comment">//类型</span></span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>, <span class="comment">//必要性</span></span><br><span class="line">    <span class="attr">default</span>: <span class="string">&quot;wyj&quot;</span>, <span class="comment">// 默认值</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>Myschool.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1 ref=&quot;title&quot;&gt;学校名称：野鸡大学&lt;/h1&gt;</span><br><span class="line">    &lt;h1&gt;校长：野鸡校长&lt;/h1&gt;</span><br><span class="line">    &lt;MyStudent ref=&quot;Ms&quot; name=&quot;王亚军&quot; :age=&quot;19&quot;&gt;&lt;/MyStudent&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import MyStudent from &quot;./Student.vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    MyStudent,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    console.log(this.$refs.title);</span><br><span class="line">    console.log(this.$refs.Ms);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>Student.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;name:&#123;&#123; name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;age:&#123;&#123; age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  // props: [&quot;name&quot;, &quot;age&quot;],</span><br><span class="line">  // props: &#123; name: String, age: Number &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    name: &#123;</span><br><span class="line">      type: String, //类型</span><br><span class="line">      required: true, //必要性</span><br><span class="line">      default: &quot;wyj&quot;, // 默认值</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>备注：</strong>&#x3D;&#x3D;props是只读的&#x3D;&#x3D;，Vue底层会监测你对<code>props</code>的修改，如果进行了修改，就会发出警告，若业务需求确实需要<code>修改</code>，那么<code>请复制props的内容到data中</code>，然后去修改<code>data</code>中的数据</p></li></ul><h3 id="03-mixin-混入"><a href="#03-mixin-混入" class="headerlink" title="03_mixin 混入"></a>03_mixin 混入</h3><ol><li>功能：可以把多个组件共用的配置提取成一个混入对象</li></ol><img src="/2023/09/15/Vue/image-20230917135427538.png" alt="image-20230917135427538" style="zoom: 33%;"><ol><li><p>使用方式</p><ul><li>定义混入</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> comm = &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">showName</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">x</span>:<span class="number">666</span>,</span><br><span class="line">      <span class="attr">y</span>:<span class="number">111</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> comm1 = &#123;</span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好啊,我是混入&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>使用混入</p><ul><li>全局混入 <code>Vue.mixin(xxx)</code></li><li>局部混入&#96;&#96;mixins:[xxx1,xxx2]</li></ul><p><strong>备注：</strong></p><ol><li><p>组件和混入对象含有同名选项时，这些选项将以恰当的方式进行“合并”，在发生冲突时以组件优先</p><p><img src="https://telegraph-image-et0.pages.dev/file/364ce38fe5bb15d1fb677.gif" alt="img"></p></li><li><p>同名生命周期钩子将合并为一个数组，因此都将被调用。另外，混入对象的钩子将在组件自身钩子之前调用</p><p><img src="/2023/09/15/Vue/image-20230917152139861.png" alt="image-20230917152139861"></p></li></ol></li></ul></li></ol><p><strong>mixin.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> comm = &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">showName</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">x</span>:<span class="number">666</span>,</span><br><span class="line">      <span class="attr">y</span>:<span class="number">111</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> comm1 = &#123;</span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好啊,我是混入&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Student.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2 @click=&quot;showName&quot;&gt;name:&#123;&#123; name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;age:&#123;&#123; age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import &#123; comm, comm1 &#125; from &quot;../mixin&quot;;</span><br><span class="line">    export default &#123;</span><br><span class="line">      props: [&quot;name&quot;, &quot;age&quot;],</span><br><span class="line">      mixins: [comm, comm1],</span><br><span class="line">      mounted() &#123;</span><br><span class="line">        console.log(&quot;你好啊,组件&quot;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>main.js(全局引入)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="keyword">import</span> &#123; comm,comm1 &#125; <span class="keyword">from</span> <span class="string">&quot;./mixin&quot;</span>;  <span class="comment">//引入</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">mixin</span>(comm)  <span class="comment">//全局混入</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">mixin</span>(comm1)<span class="comment">//全局混入</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="comment">// 将App组件放进容器里面</span></span><br><span class="line">  <span class="comment">// render: h =&gt; h(App),</span></span><br><span class="line">  <span class="comment">// 完整形式</span></span><br><span class="line">  <span class="title function_">render</span>(<span class="params">createElement</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">App</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElement</span>(<span class="title class_">App</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="04-scoped样式"><a href="#04-scoped样式" class="headerlink" title="04_scoped样式"></a>04_scoped样式</h3><ol><li>作用：让样式在局部生效，防止冲突</li><li>写法：<style scoped></li></ol><blockquote><p>Vue中的webpack并没有安装最新版，导致有些插件也不能默认安装最新版，如<br>npm i less-loader@7而不是最新版</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2 class=&quot;text&quot; @click=&quot;showName&quot;&gt;name:&#123;&#123; name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;age:&#123;&#123; age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&quot;name&quot;, &quot;age&quot;],</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    console.log(&quot;你好啊,组件&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.text&#123;</span><br><span class="line">  color: aqua;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="14-Todo-List案例"><a href="#14-Todo-List案例" class="headerlink" title="14_Todo-List案例"></a>14_Todo-List案例</h2><h3 id="01-组件化编码流程"><a href="#01-组件化编码流程" class="headerlink" title="01_组件化编码流程"></a>01_组件化编码流程</h3><ol><li><p>拆分静态组件：组件要按照功能点拆分，命名不要与html元素冲突</p></li><li><p>实现动态组件：考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用</p><ul><li><p>一个组件在用：放在组件自身即可</p></li><li><p>一些组件在用：放在他们共同的父组件上<strong>（状态提升）</strong></p></li></ul></li><li><p>实现交互：从绑定事件开始</p></li></ol><p>props适用于</p><ul><li><p>父组件&#x3D;&#x3D;&#x3D;&#x3D;&gt;子组件通信&#x3D;&#x3D;</p></li><li><p>子组件&#x3D;&#x3D;&gt;父组件通信（要求父组件先给子组件一个函数）使用v-model时要切记：v-model<br>绑定的值不能是props传过来的值，因为props是不可以修改的</p><p><img src="/image-20230918205322800.png" alt="image-20230918205322800"></p></li><li><p><code>props</code>传过来的若是对象类型的值，修改对象中的属性时Vue不会报错，但不推荐这样做</p></li></ul><p><img src="/image-20230918174650394.png" alt="image-20230918174650394"></p><p><strong>Header.vue</strong></p><p><img src="/image-20230918203812997.png" alt="image-20230918203812997"></p><p><strong>App.vue</strong></p><p><img src="/image-20230918203908277.png" alt="image-20230918203908277"></p><h2 id="15-本地存储自定义事件"><a href="#15-本地存储自定义事件" class="headerlink" title="15_ 本地存储自定义事件"></a>15_ 本地存储自定义事件</h2><h3 id="01-WebStorage-js-本地存储"><a href="#01-WebStorage-js-本地存储" class="headerlink" title="01.WebStorage (js 本地存储)"></a>01.WebStorage (js 本地存储)</h3><p>存储内容大小一般支持5MB左右（不同浏览器可能还不一样）<br>浏览器端通过<code>Window.sessionStorage</code>和<code>Window..localStorage</code>属性来实现本地存<br>储机制</p><p><strong>API</strong></p><p>xxxStorage.<strong>setItem</strong>(‘key’,’value’)该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值<br>xxStorage.<strong>getItem</strong>(‘key’)该方法接受一个键名作为参数，返回键名对应的值<br>xxxStorage.<strong>removeItem</strong>(‘key’)该方法接受一个键名作为参数，并把该键名从存储中删除<br>xxxStorage.<strong>clear</strong>()该方法会清空存储中的所有数据</p><p><strong>备注</strong></p><ul><li>SessionStorage存储的内容会随着浏览器窗口关闭而消失</li><li>LocalStorage存储的内容，需要手动清除才会消失</li><li><strong>xxxStorage.getItem(xxx)如果xxx对应的value获取不到，那么getItem()的返回值是null</strong></li><li>JS0N.parse(null)的结果依然是null</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>localStorage<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>localStorage<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;saveData()&quot;</span>&gt;</span>点我保存一个数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;readData()&quot;</span>&gt;</span>点我读取一个数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;deleteData()&quot;</span>&gt;</span>点我删除一个数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;deleteAllData()&quot;</span>&gt;</span>点我清空一个数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> p = &#123;<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">saveData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;msg&#x27;</span>,<span class="string">&#x27;hello!!!&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;msg2&#x27;</span>,<span class="number">666</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;person&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(p))</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">readData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;msg&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;msg2&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> result = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;person&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(result))</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// console.log(localStorage.getItem(&#x27;msg3&#x27;))</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">deleteData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;msg2&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">deleteAllData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">localStorage</span>.<span class="title function_">clear</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>sessionStorage<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>sessionStorage<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;saveData()&quot;</span>&gt;</span>点我保存一个数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;readData()&quot;</span>&gt;</span>点我读取一个数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;deleteData()&quot;</span>&gt;</span>点我删除一个数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;deleteAllData()&quot;</span>&gt;</span>点我清空一个数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> p = &#123;<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">saveData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;msg&#x27;</span>,<span class="string">&#x27;hello!!!&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;msg2&#x27;</span>,<span class="number">666</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;person&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(p))</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">readData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;msg&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;msg2&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> result = <span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;person&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(result))</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// console.log(sessionStorage.getItem(&#x27;msg3&#x27;))</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">deleteData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">sessionStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;msg2&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">deleteAllData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">sessionStorage</span>.<span class="title function_">clear</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="02-TodoList本地存储优化"><a href="#02-TodoList本地存储优化" class="headerlink" title="02_TodoList本地存储优化"></a>02_TodoList本地存储优化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;todo-container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;todo-wrap&quot;&gt;</span><br><span class="line">        &lt;Header :addTodo=&quot;addTodo&quot;&gt;&lt;/Header&gt;</span><br><span class="line">        &lt;List</span><br><span class="line">          :todos=&quot;todos&quot;</span><br><span class="line">          :todoChange=&quot;todoChange&quot;</span><br><span class="line">          :todoDelete=&quot;todoDelete&quot;</span><br><span class="line">        &gt;&lt;/List&gt;</span><br><span class="line">        &lt;Footer</span><br><span class="line">          :todos=&quot;todos&quot;</span><br><span class="line">          :allCheck=&quot;allCheck&quot;</span><br><span class="line">          :clearAllTodo=&quot;clearAllTodo&quot;</span><br><span class="line">        &gt;&lt;/Footer&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Footer from &quot;./components/Footer.vue&quot;;</span><br><span class="line">import Header from &quot;./components/Header.vue&quot;;</span><br><span class="line">import List from &quot;./components/List.vue&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Footer,</span><br><span class="line">    Header,</span><br><span class="line">    List,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      //不然当获取数组长度时为空就会报错</span><br><span class="line">      todos: JSON.parse(localStorage.getItem(&quot;todos&quot;)) || [], //当本地存储没有取出数据，返回的是Null,所以需要||[]</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    addTodo(todo) &#123;</span><br><span class="line">      this.todos.unshift(todo);</span><br><span class="line">    &#125;,</span><br><span class="line">    todoChange(id) &#123;</span><br><span class="line">      this.todos.forEach((item) =&gt; &#123;</span><br><span class="line">        if (item.id == id) &#123;</span><br><span class="line">          item.done = !item.done;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    todoDelete(id) &#123;</span><br><span class="line">      this.todos = this.todos.filter((todo) =&gt; todo.id !== id);</span><br><span class="line">    &#125;,</span><br><span class="line">    allCheck(check) &#123;</span><br><span class="line">      this.todos.forEach((todo) =&gt; &#123;</span><br><span class="line">        todo.done = check;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    clearAllTodo() &#123;</span><br><span class="line">      this.todos = this.todos.filter((todo) =&gt; &#123;</span><br><span class="line">        return !todo.done;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    //只监视，报错了</span><br><span class="line">    // vue.runtime.esm.js:4605 [Vue warn]: Avoid using non-primitive value as key, use string/number value instead.</span><br><span class="line">    todos: &#123;</span><br><span class="line">      deep: true,</span><br><span class="line">      handler(value) &#123;</span><br><span class="line">        localStorage.setItem(&quot;todos&quot;, JSON.stringify(value));</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="03-组件自定义事件"><a href="#03-组件自定义事件" class="headerlink" title="03_组件自定义事件"></a>03_组件自定义事件</h3><p>一种组件间通信的方式，适用于：<code>子组件===&gt;父组件</code><br>使用场景：子组件想给父组件传数据，那么就要在父组件中给子组件绑定自定义事件<br>(事件的回调在父组件中)<br>绑定自定义事件<br>第一种方式，在父组件中&lt;Demo@事件名&#x3D;”方法”&#x2F;&gt;或&lt;Demo v-on:事件名&#x3D;”方法”&#x2F;&gt;<br>第二种方式，在父组件中this.$refs.demo.$on(‘事件名’，方法)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Student ref=&quot;student&quot; @demo=&quot;m1&quot; @click.native=&quot;show&quot;&gt;&lt;/Student&gt;</span><br><span class="line">——————————————————————————————————————————————————————————————————</span><br><span class="line"> methods: &#123;</span><br><span class="line">getStudentName（）&#123;</span><br><span class="line">。。。</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.$refs.student.$once(&#x27;getStudent&#x27;,this.getStudentName) //绑定自定义事件（一次性）</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>若想让自定义事件只能触发一次，可以使用once修饰符，或$once方法</p><p>触发自定义事件<code>this.$emit(&#39;事件名&#39;，数据)</code></p><p>解绑自定义事件<code>this.$off(&#39;事件名&#39;)</code><br>组件上也可以绑定原生D0M事件，需要使用<code>native</code>修饰符@click.native&#x3D;”show<br>上面绑定自定义事件，即使绑定的是原生事件也会被认为是自定义的，需要加native加了后就将此事件给组件的根元素<br>注意：通过<code>this.$refs.xxx.$on(&#39;事件名&#39;，回调函数)</code>绑定自定义事件时，回调函数要么配置在methods中，要么用箭头函数，否则this指向会出问题</p><p><strong>App.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 通过回调函数实现，子向父组件通信 --&gt;</span><br><span class="line">    &lt;School :getSchName=&quot;getSchName&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;hr /&gt;</span><br><span class="line">    &lt;!-- 自定义事件 --&gt;</span><br><span class="line">    &lt;!-- &lt;Student @getStudent=&quot;getStudentName&quot;&gt;&lt;/Student&gt; --&gt;</span><br><span class="line">    &lt;!-- 自定义的事件可以使用事件修饰符 --&gt;</span><br><span class="line">    &lt;!-- &lt;Student @getStudent.once=&quot;getStudentName&quot;&gt;&lt;/Student&gt; --&gt;</span><br><span class="line">    &lt;!-- 原生DOM事件也会当自定义事件 如果不想被当成自定义事件需要加上.native(Vue3废弃) --&gt;</span><br><span class="line">    &lt;Student ref=&quot;student&quot; @demo=&quot;m1&quot; @click=&quot;show&quot;&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;!-- &lt;Student ref=&quot;student&quot; @demo=&quot;m1&quot; @click.native=&quot;show&quot;&gt;&lt;/Student&gt; --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import School from &quot;./components/School&quot;;</span><br><span class="line">import Student from &quot;./components/Student&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  components: &#123; School, Student &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getSchName(name) &#123;</span><br><span class="line">      alert(&quot;APP收到了数据(学校名)&quot; + name);</span><br><span class="line">    &#125;,</span><br><span class="line">    getStudentName(name) &#123;</span><br><span class="line">      alert(&quot;APP收到了数据(学生名)&quot; + name);</span><br><span class="line">    &#125;,</span><br><span class="line">    show() &#123;</span><br><span class="line">      alert(1);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    m1() &#123;</span><br><span class="line">      alert(&quot;demo事件被触发了！！！&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.$refs.student.$on(&quot;getStudent&quot;, function (name) &#123;</span><br><span class="line">      alert(&quot;APP收到了数据(学生名)&quot; + name);</span><br><span class="line">    &#125;); //绑定自定义事件</span><br><span class="line">    // this.$refs.student.$once(&#x27;getStudent&#x27;,this.getStudentName) //绑定自定义事件（一次性）</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>Student.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;学生姓名：&#123;&#123; name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;学生性别：&#123;&#123; sex &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;sendStudentlName&quot;&gt;把学生名给App&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;sendDemo&quot;&gt;触发demo事件&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;sendDemo1&quot;&gt;原生DOM事件也会当自定义事件&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;finish&quot;&gt;解绑事件&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;death&quot;&gt;销毁当前Student组件的实例(vc)&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Student&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      name: &quot;张三&quot;,</span><br><span class="line">      sex: &quot;男&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sendStudentlName() &#123;</span><br><span class="line">      // 触发自定义绑定事件</span><br><span class="line">      this.$emit(&quot;getStudent&quot;, this.name);</span><br><span class="line">    &#125;,</span><br><span class="line">    finish() &#123;</span><br><span class="line">      this.$off([&quot;demo&quot;, &quot;getStudent&quot;]);</span><br><span class="line">      // this.$off(&quot;demo&quot;);</span><br><span class="line">      // this.$off(); 自定义事件全部解除</span><br><span class="line">    &#125;,</span><br><span class="line">    sendDemo() &#123;</span><br><span class="line">      this.$emit(&quot;demo&quot;, this.name);</span><br><span class="line">    &#125;,</span><br><span class="line">    sendDemo1() &#123;</span><br><span class="line">      this.$emit(&quot;click&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">    death() &#123;</span><br><span class="line">      this.$destroy(); //销毁了当前Student组件的实例，销毁后所有Student实例的自定义事件全都不奏效。</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="04-TodoList自定义事件优化"><a href="#04-TodoList自定义事件优化" class="headerlink" title="04_TodoList自定义事件优化"></a>04_TodoList自定义事件优化</h3><p><strong>App.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;todo-container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;todo-wrap&quot;&gt;</span><br><span class="line">        &lt;Header @addTodo=&quot;addTodo&quot;&gt;&lt;/Header&gt;</span><br><span class="line">        &lt;List</span><br><span class="line">          :todos=&quot;todos&quot;</span><br><span class="line">          :todoChange=&quot;todoChange&quot;</span><br><span class="line">          :todoDelete=&quot;todoDelete&quot;</span><br><span class="line">        &gt;&lt;/List&gt;</span><br><span class="line">        &lt;Footer</span><br><span class="line">          :todos=&quot;todos&quot;</span><br><span class="line">          @allCheck=&quot;allCheck&quot;</span><br><span class="line">          @clearAllTodo=&quot;clearAllTodo&quot;</span><br><span class="line">        &gt;&lt;/Footer&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Footer from &quot;./components/Footer.vue&quot;;</span><br><span class="line">import Header from &quot;./components/Header.vue&quot;;</span><br><span class="line">import List from &quot;./components/List.vue&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Footer,</span><br><span class="line">    Header,</span><br><span class="line">    List,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      todos: JSON.parse(localStorage.getItem(&quot;todos&quot;)) || [], //当本地存储没有取出数据，返回的是Null,所以需要||[]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    addTodo(todo) &#123;</span><br><span class="line">      this.todos.unshift(todo);</span><br><span class="line">    &#125;,</span><br><span class="line">    todoChange(id) &#123;</span><br><span class="line">      this.todos.forEach((item) =&gt; &#123;</span><br><span class="line">        if (item.id == id) &#123;</span><br><span class="line">          item.done = !item.done;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    todoDelete(id) &#123;</span><br><span class="line">      this.todos = this.todos.filter((todo) =&gt; todo.id !== id);</span><br><span class="line">    &#125;,</span><br><span class="line">    allCheck(check) &#123;</span><br><span class="line">      this.todos.forEach((todo) =&gt; &#123;</span><br><span class="line">        todo.done = check;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    clearAllTodo() &#123;</span><br><span class="line">      this.todos = this.todos.filter((todo) =&gt; &#123;</span><br><span class="line">        return !todo.done;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    //只监视，报错了</span><br><span class="line">    // vue.runtime.esm.js:4605 [Vue warn]: Avoid using non-primitive value as key, use string/number value instead.</span><br><span class="line">    todos: &#123;</span><br><span class="line">      deep: true,</span><br><span class="line">      handler(value) &#123;</span><br><span class="line">        localStorage.setItem(&quot;todos&quot;, JSON.stringify(value));</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">//样式省略----</span><br></pre></td></tr></table></figure><p><strong>Header.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;todo-header&quot;&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      type=&quot;text&quot;</span><br><span class="line">      placeholder=&quot;请输入你的任务名称，按回车键确认&quot;</span><br><span class="line">      @keyup.enter=&quot;add&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; nanoid &#125; from &quot;nanoid&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Header&quot;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    add(e) &#123;</span><br><span class="line">      if (!e.target.value) &#123;</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      let todoObj = &#123; id: nanoid(), title: e.target.value, done: false &#125;;</span><br><span class="line">      this.$emit(&quot;addTodo&quot;, todoObj);</span><br><span class="line">      e.target.value = &quot;&quot;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>Footer.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;todo-footer&quot; v-show=&quot;total&quot;&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input type=&quot;checkbox&quot; v-model=&quot;isAll&quot; /&gt;</span><br><span class="line">    &lt;/label&gt;</span><br><span class="line">    &lt;span&gt;</span><br><span class="line">      &lt;span&gt;已完成&#123;&#123; doneNumber &#125;&#125;&lt;/span&gt; / 全部&#123;&#123; total &#125;&#125;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;clearAll&quot;&gt;清除已完成任务&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Footer&quot;,</span><br><span class="line">  props: [&quot;todos&quot;, &quot;allCheck&quot;, &quot;clearAllTodo&quot;],</span><br><span class="line">  computed: &#123;</span><br><span class="line">    doneNumber() &#123;</span><br><span class="line">      return this.todos.reduce((pre, current) =&gt; &#123;</span><br><span class="line">        return pre + (current.done ? 1 : 0);</span><br><span class="line">      &#125;, 0);</span><br><span class="line">    &#125;,</span><br><span class="line">    total() &#123;</span><br><span class="line">      return this.todos.length;</span><br><span class="line">    &#125;,</span><br><span class="line">    isAll: &#123;</span><br><span class="line">      get() &#123;</span><br><span class="line">        return this.doneNumber == this.total &amp;&amp; this.total &gt; 0;</span><br><span class="line">      &#125;,</span><br><span class="line">      set(value) &#123;</span><br><span class="line">        this.$emit(&quot;allCheck&quot;, value);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    clearAll() &#123;</span><br><span class="line">      this.$emit(&quot;clearAllTodo&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="16-全局事件总线消息的订阅与发布"><a href="#16-全局事件总线消息的订阅与发布" class="headerlink" title="16_全局事件总线消息的订阅与发布"></a>16_全局事件总线消息的订阅与发布</h2><h3 id="01-全局事件总线"><a href="#01-全局事件总线" class="headerlink" title="01_全局事件总线"></a>01_全局事件总线</h3><ol><li>一种可以在任意组件间通信的方式，本质上就是一个对象，它必须满足以下条件<br>所有的组件对象都必须能看见他</li><li>这个对象必须能够使用$on、$emit、$off方法去绑定、触发和解绑事件</li></ol><img src="image-20230925144957990.png" alt="image-20230925144957990" style="zoom: 50%;" /><p><strong>使用步骤</strong></p><ol><li>定义全局事件总线</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"> ...</span><br><span class="line">  <span class="title function_">beforeCreate</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$buy</span> = <span class="variable language_">this</span>;  这里的<span class="variable language_">this</span>表示<span class="title class_">Vue</span>,$buy属性可以随意命名</span><br><span class="line">  &#125;</span><br><span class="line"> ...</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/image-20230925152913953.png" alt="image-20230925152913953"></p><ol start="2"><li>使用事件总线</li></ol><ul><li>接收数据：A组件想接收数据，则在A组件中给$bus绑定自定义事件，事件的回调留在A组件自身</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">methods<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">   getStudentName(name) <span class="punctuation">&#123;</span>...<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"> mounted() <span class="punctuation">&#123;</span></span><br><span class="line">   this.$buy.$on(<span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span> this.getStudentName);</span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><ul><li>提供数据：this.$bus.$emit(‘xXx’,data)</li></ul><ol start="3"><li>最好在beforeDestroy钩子中，用$off()去解绑当前组件所用到的事件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">   getStudentName(name) &#123;...&#125;,</span><br><span class="line"> &#125;,</span><br><span class="line"> mounted() &#123;</span><br><span class="line">   this.$buy.$on(&quot;xxx&quot;, this.getStudentName);</span><br><span class="line"> &#125;,</span><br><span class="line"> beforeDestroy() &#123;</span><br><span class="line">   this.$buy.$off(&quot;hello&quot;);</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p><strong>消息的订阅预发布（基本不用）</strong></p><blockquote><p>消息订阅与发布(pubsub)消息订阅与发布是一种组件间通信的方式，适用于任意组件间通信</p></blockquote><p>使用步骤：</p><p>1.安装oubsub: <code>npm i pubsub-js</code><br>2.引入：<code>import pubsub from&#39;pubsub-js&#39;</code><br>3.接收数据：A组件想接收数据，则在A组件中订阅消息，订阅的回调留在A组件自身</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">demo(msgName, data) &#123;...&#125; &#125;</span><br><span class="line">... </span><br><span class="line">mounted() &#123;</span><br><span class="line">this.pid = pubsub.subscribe(&#x27;xxx&#x27;,this.demo) </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>提供数据：pubsub.publish(‘XXx’,data)</li><li>最好在beforeDestroy钩子中，使用pubsub.unsubscribe(pid)取消订阅</li></ol><p><strong>App.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;app&quot;&gt;</span><br><span class="line">&lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</span><br><span class="line">&lt;School/&gt;</span><br><span class="line">&lt;Student/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student&#x27;</span><br><span class="line">import School from &#x27;./components/School&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">name:&#x27;App&#x27;,</span><br><span class="line">components:&#123;School,Student&#125;,</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">msg:&#x27;你好啊！&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.app&#123;</span><br><span class="line">background-color: gray;</span><br><span class="line">padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>School.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;school&quot;&gt;</span><br><span class="line">&lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import pubsub from &#x27;pubsub-js&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">name:&#x27;School&#x27;,</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">name:&#x27;尚硅谷&#x27;,</span><br><span class="line">address:&#x27;北京&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">mounted() &#123;</span><br><span class="line">// console.log(&#x27;School&#x27;,this)</span><br><span class="line">/* this.$bus.$on(&#x27;hello&#x27;,(data)=&gt;&#123;</span><br><span class="line">console.log(&#x27;我是School组件，收到了数据&#x27;,data)</span><br><span class="line">&#125;) */</span><br><span class="line">this.pubId = pubsub.subscribe(&#x27;hello&#x27;,(msgName,data)=&gt;&#123;</span><br><span class="line">console.log(this)</span><br><span class="line">// console.log(&#x27;有人发布了hello消息，hello消息的回调执行了&#x27;,msgName,data)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line">beforeDestroy() &#123;</span><br><span class="line">// this.$bus.$off(&#x27;hello&#x27;)</span><br><span class="line">pubsub.unsubscribe(this.pubId)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.school&#123;</span><br><span class="line">background-color: skyblue;</span><br><span class="line">padding: 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>Student.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;student&quot;&gt;</span><br><span class="line">&lt;h2&gt;学生姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;h2&gt;学生性别：&#123;&#123;sex&#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;button @click=&quot;sendStudentName&quot;&gt;把学生名给School组件&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import pubsub from &#x27;pubsub-js&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">name:&#x27;Student&#x27;,</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">name:&#x27;张三&#x27;,</span><br><span class="line">sex:&#x27;男&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">mounted() &#123;</span><br><span class="line">// console.log(&#x27;Student&#x27;,this.x)</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">sendStudentName()&#123;</span><br><span class="line">// this.$bus.$emit(&#x27;hello&#x27;,this.name)</span><br><span class="line">pubsub.publish(&#x27;hello&#x27;,666)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.student&#123;</span><br><span class="line">background-color: pink;</span><br><span class="line">padding: 5px;</span><br><span class="line">margin-top: 30px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="17-nextTick过渡与动画"><a href="#17-nextTick过渡与动画" class="headerlink" title="17_$nextTick过渡与动画"></a>17_$nextTick过渡与动画</h2><h3 id="nextTick"><a href="#nextTick" class="headerlink" title="$nextTick"></a><strong>$nextTick</strong></h3><blockquote><p>这是一个生命周期钩子<br><code>this.$nextTick(回调函数)</code>在下一次DoM更新结束后执行其指定的回调</p><p>什么时候用：当改变数据后，要基于更新后的<code>新D0M</code>进行某些操作时，要在<code>nextTick</code>所指定的回调函数中执行</p></blockquote><p><strong>Todo_list优化</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;li&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input type=&quot;checkbox&quot; :checked=&quot;todoObj.done&quot; @change=&quot;checkChange()&quot; /&gt;</span><br><span class="line">      &lt;span v-show=&quot;!todoObj.isEdit&quot;&gt;&#123;&#123; todoObj.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;Input v-show=&quot;todoObj.isEdit&quot; :value=&quot;todoObj.title&quot; @blur=&quot;handleBlur(todoObj, $event)&quot; ref=&quot;inputTitle&quot;&gt;&lt;/Input&gt;</span><br><span class="line">    &lt;/label&gt;</span><br><span class="line">    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;deleteBtn&quot;&gt;删除&lt;/button&gt;</span><br><span class="line">    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;editBtn(todoObj)&quot;&gt;编辑&lt;/button&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Item&quot;,</span><br><span class="line">  props: [&quot;todoObj&quot;],</span><br><span class="line">  methods: &#123;</span><br><span class="line">    checkChange() &#123;</span><br><span class="line">      this.$bus.$emit(&quot;todoChange&quot;, this.todoObj.id);</span><br><span class="line">    &#125;,</span><br><span class="line">    deleteBtn() &#123;</span><br><span class="line">      if (confirm(&quot;确认删除吗？？？&quot;)) &#123;</span><br><span class="line">        this.$bus.$emit(&quot;todoDelete&quot;, this.todoObj.id);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 尽量不要修改props</span><br><span class="line">    editBtn(todo) &#123;</span><br><span class="line">      if (todo.hasOwnProperty(&quot;isEdit&quot;)) &#123;</span><br><span class="line">        todo.isEdit = true;</span><br><span class="line">        console.log(&quot;我有isEdit属性&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.$set(todo, &quot;isEdit&quot;, true);</span><br><span class="line">        console.log(&quot;我没有isEdit属性&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      // 下次DOM更新在将焦点聚焦在Inpout框。 因为Vue是将代码全部执行完才会更新模板。此时v-show并没有input</span><br><span class="line">      this.$nextTick(function () &#123;</span><br><span class="line">        this.$refs.inputTitle.focus();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 输入框失去焦点</span><br><span class="line">    handleBlur(todo, e) &#123;</span><br><span class="line">      todo.isEdit = false;</span><br><span class="line">      if (!e.target.value.trim()) &#123;</span><br><span class="line">        return alert(&quot;输入不能为空！&quot;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      this.$bus.$emit(&quot;updateTodo&quot;, todo.id, e.target.value);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/image-20230926123030843.png" alt="image-20230926123030843"></p><h3 id="过渡与动画"><a href="#过渡与动画" class="headerlink" title="过渡与动画"></a><strong>过渡与动画</strong></h3><p>Vue封装的过度与动画：在插入、更新或移除D0M元素时，在合适的时候给元素添加样<br>式类名</p><p><img src="/image-20230926144515212.png" alt="image-20230926144515212"></p><p>写法</p><ol><li><p>准备好样式</p><ul><li><p>元素进入的样式</p><ul><li><p>v-enter   进入的起点</p></li><li><p>v-enter-active        进入过程中</p></li><li><p>v-enter-to              进入的终点</p></li><li><p>元素离开的样式</p></li><li><p>v-leave               离开的起点</p></li><li><p>v-leave-active    离开过程中</p></li><li><p>v-leave-to           离开的终点</p></li></ul></li></ul></li><li><p>使用<a href="transition:">transition:</a>包裹要过度的元素，并配置name属性，此时需要将上面样式名的v换为name</p></li><li><p>要让页面一开始就显示动画，需要添加appear</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;button @click=&quot;isShow = !isShow&quot;&gt;显示/隐藏&lt;/button&gt;</span><br><span class="line">&lt;transition name=&quot;hello&quot; appear&gt;</span><br><span class="line">&lt;h1 v-show=&quot;isShow&quot;&gt;你好啊！&lt;/h1&gt;</span><br><span class="line">&lt;/transition&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">name:&#x27;Test&#x27;,</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">isShow:true</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">h1&#123;</span><br><span class="line">background-color: orange;</span><br><span class="line">&#125;</span><br><span class="line">.hello-enter-active&#123;</span><br><span class="line">animation: atguigu 0.5s linear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.hello-leave-active&#123;</span><br><span class="line">animation: atguigu 0.5s linear reverse;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes atguigu &#123;</span><br><span class="line">from&#123;</span><br><span class="line">transform: translateX(-100%);</span><br><span class="line">&#125;</span><br><span class="line">to&#123;</span><br><span class="line">transform: translateX(0px);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>备注：若有多个元素需要过度，则需要使用<transition-group>,且每个元素都要指定key值</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;button @click=&quot;isShow = !isShow&quot;&gt;显示/隐藏&lt;/button&gt;</span><br><span class="line">&lt;transition-group name=&quot;hello&quot; appear&gt;</span><br><span class="line">&lt;h1 v-show=&quot;!isShow&quot; key=&quot;1&quot;&gt;你好啊！&lt;/h1&gt;</span><br><span class="line">&lt;h1 v-show=&quot;isShow&quot; key=&quot;2&quot;&gt;尚硅谷！&lt;/h1&gt;</span><br><span class="line">&lt;/transition-group&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li><p>第三方动画库Animate.css</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;button @click=&quot;isShow = !isShow&quot;&gt;显示/隐藏&lt;/button&gt;</span><br><span class="line">&lt;transition-group </span><br><span class="line">appear</span><br><span class="line">name=&quot;animate__animated animate__bounce&quot; </span><br><span class="line">enter-active-class=&quot;animate__swing&quot;</span><br><span class="line">leave-active-class=&quot;animate__backOutUp&quot;</span><br><span class="line">&gt;</span><br><span class="line">&lt;h1 v-show=&quot;!isShow&quot; key=&quot;1&quot;&gt;你好啊！&lt;/h1&gt;</span><br><span class="line">&lt;h1 v-show=&quot;isShow&quot; key=&quot;2&quot;&gt;尚硅谷！&lt;/h1&gt;</span><br><span class="line">&lt;/transition-group&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#x27;animate.css&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">name:&#x27;Test&#x27;,</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">isShow:true</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">h1&#123;</span><br><span class="line">background-color: orange;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="18-Vue中的Ajax-配置代理slot插槽"><a href="#18-Vue中的Ajax-配置代理slot插槽" class="headerlink" title="18_Vue中的Ajax 配置代理slot插槽"></a>18_Vue中的Ajax 配置代理slot插槽</h2><h3 id="Vue中的Ajax-配置代理"><a href="#Vue中的Ajax-配置代理" class="headerlink" title="Vue中的Ajax 配置代理"></a>Vue中的Ajax 配置代理</h3><blockquote><p>案例需要下载<code>axios库</code> <code>npm in axios</code></p><p><strong>配置参考文档Vue-Cli devServer.proxy</strong></p><p>vue.config.js是一个可选的配置文件，如果项目的（和package.json同级的）根目录中存在这个文件，那么它会被@cli-service自动加载。你也可以使用package.json中的vue字段，但是注意这种写法需要你严格遵照SON的格式来写</p></blockquote><p>方法一</p><blockquote><p>在vue.config.js中添加如下配置</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">proxy</span>: <span class="string">&#x27;http://localhost:5000&#x27;</span>  <span class="comment">//目标服务器地址以及端口号</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明</p><ol><li>优点：配置简单，请求资源时直接发给前端(8080)即可</li><li>缺点：不能配置多个代理，不能灵活的控制请求是否走代理</li><li>工作方式：若按照上述配置代理，当请求了前端(本地)不存在的资源时，才会将请求会转发给服务器(优先匹配前端（本地）资源)</li></ol><p>方法二</p><blockquote><p>编写vue.config.js配置具体代理规则</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/atguigu&#x27;</span>: &#123;   <span class="comment">//匹配所有以&#x27;/atguigu&#x27;开头的请求路径</span></span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:5000&#x27;</span>,  <span class="comment">//代理目标的基础路径</span></span><br><span class="line"><span class="attr">pathRewrite</span>:&#123;<span class="string">&#x27;^/atguigu&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;,   <span class="comment">// 将发送后端服务器的请求去掉/atguigu后缀</span></span><br><span class="line">        <span class="comment">// ws: true, //用于支持websocket</span></span><br><span class="line">        <span class="comment">// changeOrigin: true //用于控制请求头中的host值</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;/demo&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:5001&#x27;</span>,</span><br><span class="line"><span class="attr">pathRewrite</span>:&#123;<span class="string">&#x27;^/demo&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        <span class="comment">// ws: true, //用于支持websocket</span></span><br><span class="line">        <span class="comment">// changeOrigin: true //用于控制请求头中的host值</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">change0 rigin设置为<span class="literal">true</span>时，服务器收到的请求头中的host为：<span class="attr">localhost</span>:<span class="number">5000</span> changeOrigin设置为<span class="literal">false</span>时，服务器收到的请求头中的host为：<span class="attr">localhost</span>:<span class="number">8080</span> changeOrigin默认值为<span class="literal">true</span></span><br><span class="line">是否使用自己的主机号访问后端服务器，还是以代理服务器的端口号访问</span><br></pre></td></tr></table></figure><p><img src="/image-20230927142136301.png" alt=" "></p><p>说明</p><ol><li>优点：可以配置多个代理，且可以灵活的控制请求是否走代理（通过前缀走不走代理）</li><li>缺点：配置略微繁琐，请求资源时必须加前缀</li></ol><p><img src="/image-20230927144003964.png" alt="image-20230927144003964"></p></style></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTMl以及CSS</title>
      <link href="/2023/09/09/HTMl%E4%BB%A5%E5%8F%8ACSS/"/>
      <url>/2023/09/09/HTMl%E4%BB%A5%E5%8F%8ACSS/</url>
      
        <content type="html"><![CDATA[<p>twfasdfasdfasdfasdfd<br>fa<br>sdf<br>as<br>df<br>asd<br>f<br>asdf</p><p>sd<br>fas<br>df<br>as<br>df</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客的搭建</title>
      <link href="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="一、前置工具准备"><a href="#一、前置工具准备" class="headerlink" title="一、前置工具准备"></a>一、前置工具准备</h1><blockquote><p>因为要部署到 gihthub 上，我们需要准备 node.js 包管理工具，以及 git 将代码推到 github 进行管理</p></blockquote><h2 id="1-安装-git"><a href="#1-安装-git" class="headerlink" title="1. 安装 git"></a>1. 安装 git</h2><p><a href="https://git-scm.com/download/win">git</a>进入网站下载</p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909163309097.png" alt="image-20230909163309097" style="zoom:50%;"><p>然后傻瓜式安装。</p><h2 id="2-安装-node"><a href="#2-安装-node" class="headerlink" title="2.安装 node"></a>2.安装 node</h2><p><a href="https://nodejs.cn/download/">node.js</a>进入网站下载</p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909163644502.png" alt="image-20230909163644502" style="zoom: 33%;"><p>添加国内镜像源（因为 node.js 包是在外网，没有梯子可以更改国内镜像）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry <span class="attr">https</span>:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><h1 id="二、搭建流程"><a href="#二、搭建流程" class="headerlink" title="二、搭建流程"></a>二、搭建流程</h1><h2 id="1-安装-HEXO"><a href="#1-安装-HEXO" class="headerlink" title="1. 安装 HEXO"></a>1. 安装 HEXO</h2><ul><li>以管理员身份运行 CMD （注意）❤️</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli   # -g表示全局安装</span><br><span class="line">输入hexo -v 验证是否安装完成</span><br></pre></td></tr></table></figure><h2 id="2-搭建本地博客"><a href="#2-搭建本地博客" class="headerlink" title="2.搭建本地博客"></a>2.搭建本地博客</h2><ul><li>安装博客你需要进入你指定的文件夹,打开 git 命令窗口</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init <span class="string">&quot;blog&quot;</span> <span class="comment">//“创建的文件名”</span></span><br></pre></td></tr></table></figure><ul><li>安装相关依赖</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install 或 npm i</span><br></pre></td></tr></table></figure><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909172815035.png" alt="image-20230909172815035" style="zoom: 67%;"><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909173338367.png" alt="image-20230909173338367"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g 生成页面</span><br><span class="line">hexo s 打开本地服务器</span><br><span class="line">ctrl + c 关闭服务器</span><br></pre></td></tr></table></figure><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909173452595.png" alt="image-20230909173452595"></p><h2 id="3-github-操作"><a href="#3-github-操作" class="headerlink" title="3.github 操作"></a>3.github 操作</h2><ul><li>注册 github(自己创建)</li><li>在本地电脑生成一个密钥并在 github 上添加密钥</li><li>在 github 上生成一个仓库</li><li>将 hexo 部署到 github</li></ul><h3 id="3-1-在本地电脑生成一个密钥并在-github-上添加密钥"><a href="#3-1-在本地电脑生成一个密钥并在-github-上添加密钥" class="headerlink" title="3.1 在本地电脑生成一个密钥并在 github 上添加密钥"></a>3.1 在本地电脑生成一个密钥并在 github 上添加密钥</h3><ul><li><p>在 git 命令窗口，创建你的名字和你的邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name  wangcai  【和你注册github时的账号一样】</span><br><span class="line">git config --global user.email xxx@qq.com    【和你注册github时的邮箱一样】</span><br></pre></td></tr></table></figure></li><li><p>检测有没有输入成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure></li><li><p>在本地电脑生成密钥</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;717628672@qq.com&quot;</span>    #邮箱换成你的邮箱</span><br></pre></td></tr></table></figure></li></ul><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909175531936.png" alt="image-20230909175531936" style="zoom: 33%;"><p>秘钥的生成位置，如下：</p><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909175603133.png" alt="image-20230909175603133"></p><p>把公钥 copy 到 github 上，找到公钥，如下 ：</p><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909175655560.png" alt="image-20230909175655560"></p><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909175716625.png" alt="image-20230909175716625"></p><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909175841193.png" alt="image-20230909175841193"></p><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909175905901.png" alt="image-20230909175905901"></p><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909175927303.png" alt="image-20230909175927303"></p><ul><li>在<code>git bash</code>输入<code>ssh -T git@github.com</code>，如果如下图所示，出现你的用户名，那就成功了。</li></ul><h3 id="3-2-在-github-上生成一个仓库"><a href="#3-2-在-github-上生成一个仓库" class="headerlink" title="3.2 在 github 上生成一个仓库"></a>3.2 在 github 上生成一个仓库</h3><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909180106505.png" alt="image-20230909180106505"></p><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909181452651.png" alt="image-20230909181452651"></p><ul><li>然后就可以拉到页面下方点击确认了，我们复制 ssh 链接，配置文件时需要用到，如果丢了在仓库里也可以查看</li></ul><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909183301840.png" alt="image-20230909183301840"></p><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909183553197.png" alt="image-20230909183553197"></p><h3 id="3-3-将-hexo-部署到-github"><a href="#3-3-将-hexo-部署到-github" class="headerlink" title="3.3 将 hexo 部署到 github"></a>3.3 将 hexo 部署到 github</h3><ul><li>打开博客的根目录下的<code>_config.yml</code>文件在这里你可以修改与博客配置相关的各种信息。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy</span>:</span><br><span class="line">  <span class="attr">type</span>: git</span><br><span class="line">  <span class="attr">repository</span>: git@github.<span class="property">com</span>:<span class="title class_">StartAfresh</span>/<span class="title class_">StartAfresh</span>.<span class="property">github</span>.<span class="property">io</span>.<span class="property">git</span>  <span class="comment">//</span></span><br><span class="line">  <span class="attr">branch</span>: master</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># <span class="variable constant_">URL</span></span><br><span class="line">## <span class="title class_">Set</span> your site url here. <span class="title class_">For</span> example, <span class="keyword">if</span> you use <span class="title class_">GitHub</span> <span class="title class_">Page</span>, set url <span class="keyword">as</span> <span class="string">&#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url</span>: <span class="attr">https</span>:<span class="comment">//StartAfresh.github.io/</span></span><br></pre></td></tr></table></figure><p><code>repository</code>修改为你自己的<code>github</code>项目地址即可就是部署时，告诉工具，将生成网页通过<code>git</code>方式上传到你对应的链接仓库中。</p><p>这个时候需要先安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到<code>GitHub</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li>下一步</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo c    <span class="comment">//清除缓存</span></span><br><span class="line">hexo generate<span class="comment">//生成静态页面</span></span><br><span class="line">hexo d<span class="comment">//将博客推上github</span></span><br><span class="line">注意：d时可能要你输入username和password。</span><br></pre></td></tr></table></figure><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909182902860.png" alt="image-20230909182902860"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><blockquote><p>hexo + Typora 图片上传问题</p></blockquote><h2 id="1-hexo-Typora-图片上传问题"><a href="#1-hexo-Typora-图片上传问题" class="headerlink" title="1. hexo + Typora 图片上传问题"></a>1. hexo + Typora 图片上传问题</h2><p><strong>解决步骤：</strong></p><ol><li>修改 typora 图片放置的位置。当自己新建一个文章时，添加图片自动创建存放图片的文件（文件夹的名字与文章笔记相同）</li></ol><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909154108020.png" alt="image-20230909154108020"></p><ol start="2"><li>修改博客根目录下的站点配置（_config.yml）文件中的 post_asset_folder 字段设置为 true<ul><li>当设置 post_asset_folder 参数后，在<strong>hexo n</strong>命令建立文件时， 会自动建立一个与文章同名的文件夹，把与该文章相关的所有图片资源都放到此文件夹内，这样就可以方便的使用图片资源</li><li>同时，只有当 post_asset_folder 设置为 true 后，后续安装的插件才会起作用</li></ul></li></ol><p>​ <img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909154528792.png" alt="image-20230909154528792"></p><ol start="3"><li><p>安装插件</p><ul><li><p>到根目录下 npm install <a href="https://link.jianshu.com/?t=https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save 命令来进行插件的安装</p></li><li><p>当文章全部写完后，使用 Typora 的替换功能（替换功能包含删除功能，当替换的内容什么都不输入时为全部删除）将所有图片地址前面多余的部分删除即可</p></li></ul><p><img src="/2023/09/08/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/image-20230909160456443.png" alt="image-20230909160456443"></p></li></ol><h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2>]]></content>
      
      
      <categories>
          
          <category> hexo维护 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客的搭建</title>
      <link href="/2023/09/08/js%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2023/09/08/js%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端面试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
